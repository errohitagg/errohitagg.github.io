{"version":3,"sources":["webpack:///./src/app/modules/access-control/access-control.module.ts","webpack:///./src/app/modules/access-control/access-control.routing.ts","webpack:///./src/app/modules/access-control/list-access-control/list-access-control.component.html","webpack:///./src/app/modules/access-control/list-access-control/list-access-control.component.ts","webpack:///./src/app/modules/access-control/manage-access-control/manage-access-control.component.html","webpack:///./src/app/modules/access-control/manage-access-control/manage-access-control.component.ts"],"names":[],"mappings":"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","file":"access-control-access-control-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { TreeviewModule } from 'ngx-treeview';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { AccessControlRoutingModule } from './access-control.routing';\nimport { ApplicationComponentsModule } from 'modules/application-components.module';\nimport { ApplicationPipesModule } from 'modules/application-pipes.module';\nimport { ApplicationDirectivesModule } from 'modules/application-directives.module';\nimport { ListAccessControlComponent } from './list-access-control/list-access-control.component';\nimport { ManageAccessControlComponent } from './manage-access-control/manage-access-control.component';\n\n@NgModule({\n  imports: [\n    AccessControlRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    CommonModule,\n    ApplicationComponentsModule,\n    ApplicationPipesModule,\n    ApplicationDirectivesModule,\n    TreeviewModule,\n    NgSelectModule\n  ],\n  declarations: [\n    ListAccessControlComponent,\n    ManageAccessControlComponent\n  ],\n  providers: [\n  ]\n})\nexport class AccessControlModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthenticationGuard } from 'core/services/authentication.service';\nimport { AuthorizationGuard } from 'core/services/authorization.service';\nimport { ListAccessControlComponent } from './list-access-control/list-access-control.component';\nimport { ManageAccessControlComponent } from './manage-access-control/manage-access-control.component';\nimport { ObjectidGuard } from 'core/services/objectid.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: {\n      title: 'Access Control'\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'list'\n      },\n      {\n        path: 'list',\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        data: {\n          title: 'List',\n          access: {\n            module: 'access-control',\n            entity: 'access-control',\n            action: 'find'\n          }\n        },\n        component: ListAccessControlComponent\n      },\n      {\n        path: 'add',\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        data: {\n          title: 'Add',\n          access: {\n            module: 'access-control',\n            entity: 'access-control',\n            action: 'create'\n          }\n        },\n        component: ManageAccessControlComponent\n      },\n      {\n        path: 'edit/:id',\n        data: {\n          title: 'Edit',\n          access: {\n            module: 'access-control',\n            entity: 'access-control',\n            action: 'update'\n          }\n        },\n        canActivate: [AuthenticationGuard, AuthorizationGuard, ObjectidGuard],\n        component: ManageAccessControlComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccessControlRoutingModule { }\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row mb-4\\\" *ngIf=\\\"createAllowed\\\">\\n            <div class=\\\"col-12\\\">\\n              <button class=\\\"btn btn-primary pull-right\\\" role='button' type=\\\"button\\\" routerLink=\\\"/access-control/add\\\">+ Add Access Control</button>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"text-center m-5\\\" *ngIf=\\\"loading\\\">\\n            <h3><i class=\\\"fa fa-refresh fa-spin\\\"></i> Loading Access Controls</h3>\\n          </div>\\n\\n          <div class=\\\"text-center m-5\\\" *ngIf=\\\"!loading && access_controls.length === 0\\\">\\n            <h3>No Access Controls in organization</h3>\\n          </div>\\n\\n          <table class=\\\"table table-striped\\\" *ngIf=\\\"!loading && access_controls.length > 0\\\">\\n            <thead>\\n              <tr>\\n                <th>Name</th>\\n                <th>Description</th>\\n                <th>Status</th>\\n                <th></th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let access_control of access_controls\\\">\\n                <td>{{access_control.title}}</td>\\n                <td>{{access_control.description}}</td>\\n                <td>{{access_control.access_control_status | constants: 'access_control.status'}}</td>\\n                <td class=\\\"text-center\\\">\\n                  <button class=\\\"btn btn-primary btn-sm\\\" role=\\\"button\\\" type=\\\"button\\\" routerLink=\\\"/access-control/edit/{{access_control._id.toString()}}\\\" *ngIf=\\\"editAllowed\\\">Edit</button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n\\n          <ul class=\\\"pagination justify-content-end\\\" *ngIf=\\\"count > limit\\\">\\n            <li class=\\\"page-item\\\" *ngIf=\\\"total_pages > 1\\\" [class.disabled]=\\\"page == 1\\\">\\n              <button class=\\\"page-link\\\" (click)=\\\"getAccessControls(1)\\\">First</button>\\n            </li>\\n            <li class=\\\"page-item\\\" [class.disabled]=\\\"page == 1\\\">\\n              <button class=\\\"page-link\\\" (click)=\\\"getAccessControls(page - 1)\\\">Prev</button>\\n            </li>\\n            <li class=\\\"page-item active\\\">\\n              <button class=\\\"page-link\\\">{{page}}</button>\\n            </li>\\n            <li class=\\\"page-item\\\" [class.disabled]=\\\"page === total_pages\\\">\\n              <button class=\\\"page-link\\\" (click)=\\\"getAccessControls(page + 1)\\\">Next</button>\\n            </li>\\n            <li class=\\\"page-item\\\" *ngIf=\\\"page < total_pages\\\" [class.disabled]=\\\"page === total_pages\\\">\\n              <button class=\\\"page-link\\\" (click)=\\\"getAccessControls(total_pages)\\\">Last</button>\\n            </li>\\n          </ul>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AccessControlService, AccessControlListResponse } from 'modules/access-control/access-control.service';\nimport { Access } from 'core/providers/access.service';\n\n@Component({\n  selector: 'app-access-controls',\n  templateUrl: './list-access-control.component.html',\n  providers: [AccessControlService]\n})\nexport class ListAccessControlComponent implements OnInit {\n\n  access_controls: AccessControlListResponse[];\n  count: number;\n  limit: number;\n  page: number;\n  total_pages: number;\n\n  loading: boolean = false;\n  createAllowed: boolean;\n  editAllowed: boolean = false;\n\n  constructor(private accessControlService: AccessControlService, private access: Access) {\n\n    this.access_controls = [];\n    this.limit = 25;\n    this.createAllowed = false;\n  }\n\n  async ngOnInit() {\n\n    this.getAccessControls(1);\n\n    this.createAllowed = await this.access.hasAccess({\n      module: 'access-control',\n      entity: 'access-control',\n      action: 'create'\n    });\n\n    this.editAllowed = await this.access.hasAccess({\n      module: 'access-control',\n      entity: 'access-control',\n      action: 'update'\n    });\n  }\n\n  getAccessControls(page) {\n\n    const self = this;\n\n    this.loading = true;\n    this.page = page;\n\n    this.accessControlService.getAccessControls(this.page, this.limit).then(response => {\n\n      self.loading = false;\n      this.count = response.count;\n      this.access_controls = response.access_controls;\n\n      this.total_pages = this.count / this.limit;\n      this.total_pages += (this.count % this.limit) === 0 ? 0 : 1;\n    });\n  }\n}\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"offset-2 col-8\\\">\\n              <form #accessControlForm=\\\"ngForm\\\">\\n\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-3 col-form-label\\\">\\n                    <span class=\\\"required\\\">*</span> Title\\n                  </label>\\n                  <div class=\\\"col-9\\\">\\n                    <input type=\\\"text\\\" name=\\\"title\\\" id=\\\"title\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"access_control.title\\\" #title=\\\"ngModel\\\" required minlength=\\\"3\\\" [attr.disabled]=\\\"access_control_id ? 'disabled' : null\\\" />\\n                    <app-inline-error [control]=\\\"title\\\"></app-inline-error>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-3 col-form-label\\\">Description</label>\\n                  <div class=\\\"col-9\\\">\\n                    <textarea name=\\\"description\\\" class=\\\"form-control\\\" id=\\\"description\\\" [(ngModel)]=\\\"access_control.description\\\"></textarea>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-3 col-form-label\\\">\\n                    <span class=\\\"required\\\">*</span> Entities\\n                  </label>\\n\\n                  <div class=\\\"col-9\\\">\\n\\n                    <ngx-treeview [config]=\\\"entitiesConfig\\\" [items]=\\\"entityList\\\" (selectedChange)=\\\"selectedEntity($event)\\\">\\n                    </ngx-treeview>\\n                    <input type=\\\"hidden\\\" name=\\\"entities\\\" [(ngModel)]=\\\"access_control.actions\\\" #entities=\\\"ngModel\\\" app-minitems=\\\"1\\\" />\\n                    <app-inline-error [control]=\\\"entities\\\"></app-inline-error>\\n\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-3 col-form-label\\\">Attributes</label>\\n\\n                  <div class=\\\"col-9\\\">\\n                    <ngx-treeview [config]=\\\"attributesConfig\\\" [items]=\\\"attributeList\\\" (selectedChange)=\\\"selectedAttribute($event)\\\">\\n                    </ngx-treeview>\\n                    <input type=\\\"hidden\\\" name=\\\"attributes\\\" [(ngModel)]=\\\"access_control.attributes\\\" #attributes=\\\"ngModel\\\" />\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-actions row\\\">\\n                  <div class=\\\"col-12 text-right\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"postAccessControl()\\\">Submit</button>\\n                    <button type=\\\"reset\\\" class=\\\"btn btn-link\\\" routerLink=\\\"/access-control\\\">Cancel</button>\\n                  </div>\\n                </div>\\n\\n              </form>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-success-modal #successModal title=\\\"Success!\\\">\\n  <div content>\\n    <span *ngIf=\\\"!access_control._id || !access_control._id.toString()\\\">Added</span>\\n    <span *ngIf=\\\"access_control._id && access_control._id.toString()\\\">Updated</span>\\n    <span>&nbsp;Access Control successfully.</span>\\n  </div>\\n</app-success-modal>\\n\\n<app-error-modal #errorModal title=\\\"Error!\\\">\\n  <div content>\\n    <span>There was an error&nbsp;</span>\\n    <span *ngIf=\\\"!access_control._id || !access_control._id.toString()\\\">creating</span>\\n    <span *ngIf=\\\"access_control._id && access_control._id.toString()\\\">updating</span>\\n    <span>&nbsp;the access control.</span>\\n    <br>\\n    <p>Details: {{error}}</p>\\n  </div>\\n</app-error-modal>\"","import { Component, ViewChild, ViewEncapsulation, OnInit } from '@angular/core';\nimport { TreeviewConfig, TreeviewItem } from 'ngx-treeview';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { clone } from 'lodash';\nimport { uniq, isEmpty } from 'lodash';\nimport { SuccessModalComponent } from 'shared/components/success-modal/success-modal.component';\nimport { ErrorModalComponent } from 'shared/components/error-modal/error-modal.component';\nimport {\n  AccessControl, AccessControlService,\n  AccessControlAttribute\n} from 'modules/access-control/access-control.service';\n\n@Component({\n  templateUrl: './manage-access-control.component.html',\n  providers: [AccessControlService],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ManageAccessControlComponent implements OnInit {\n  @ViewChild('successModal') successModal: SuccessModalComponent;\n  @ViewChild('errorModal') errorModal: ErrorModalComponent;\n  @ViewChild('accessControlForm') accessControlForm;\n\n  access_control: AccessControl = new AccessControl();\n  access_control_id: string;\n  entityList: TreeviewItem[];\n  attributeList: TreeviewItem[];\n  allowedAttributes: AccessControlAttribute[] = new Array<AccessControlAttribute>();\n\n  entitiesConfig: TreeviewConfig = {\n    hasAllCheckBox: false,\n    hasFilter: false,\n    hasDivider: false,\n    hasCollapseExpand: false,\n    decoupleChildFromParent: false,\n    maxHeight: 500\n  };\n\n  attributesConfig: TreeviewConfig = {\n    hasAllCheckBox: false,\n    hasFilter: false,\n    hasDivider: false,\n    hasCollapseExpand: false,\n    decoupleChildFromParent: false,\n    maxHeight: 500\n  };\n\n  error: string = '';\n\n  constructor(\n    private route: ActivatedRoute,\n    private accessControlService: AccessControlService\n  ) {\n\n    if (this.route.snapshot.params.id) {\n      this.access_control_id = this.route.snapshot.params.id;\n    }\n  }\n\n  ngOnInit() {\n\n    if (this.access_control_id) {\n\n      this.__loadAccessControl();\n\n    } else {\n\n      this.access_control_id = null;\n      this.__loadEntities();\n      this.__loadAttributes();\n    }\n  }\n\n  private __getIndex(list, value, key) {\n\n    let index = -1;\n    for (const i in list) {\n\n      if (list[i][key] === value) {\n        index = parseInt(i, 10);\n        break;\n      }\n    }\n\n    return index;\n  }\n\n  private __checked(action_id): boolean {\n\n    if (this.access_control.actions.indexOf(action_id) === -1) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private __getTreeviewItem(value, text, collapsed?, disabled?, checked?) {\n\n    collapsed = !!collapsed;\n    disabled = !!disabled;\n    checked = !!checked;\n\n    return new TreeviewItem({\n      value: value,\n      text: text,\n      collapsed: collapsed,\n      disabled: disabled,\n      checked: checked\n    });\n  }\n\n  private __prepareAttributeItem(type, data, attribute, model) {\n\n    let disabled = false,\n      checked = false;\n\n    if (data.default && data.default.indexOf(attribute.attribute) !== -1) {\n      checked = true;\n      disabled = true;\n    }\n\n    if (data.blocked && data.blocked.indexOf(attribute.attribute) !== -1) {\n      disabled = true;\n    }\n\n    if (this.access_control.attributes.length !== 0) {\n      for (const attr of this.access_control.attributes) {\n        if (attr.model === model && (attr[type + '_all'] === true || attr[type].indexOf(attribute) !== -1)) {\n          checked = true;\n        }\n      }\n    }\n\n    const treeitem_value = model + '--' + type + '--' + attribute.attribute;\n    return this.__getTreeviewItem(treeitem_value, attribute.name, true, !this.access_control.update.attributes || disabled, checked);\n  }\n\n  private __loadEntities() {\n\n    const create = isEmpty(this.access_control._id);\n    this.accessControlService.getEntities()\n      .then(response => {\n\n        const entityList = new Array<TreeviewItem>();\n\n        for (const module of response) {\n\n          const tree_entities = new Array<TreeviewItem>();\n          for (const entity of module.entities) {\n\n            const tree_actions = new Array<TreeviewItem>();\n            for (const action of entity.actions) {\n\n              const treeitem_checked = this.__checked(action.action_id);\n              tree_actions.push(this.__getTreeviewItem(action.action_id, action.title, true, !this.access_control.update.actions, treeitem_checked));\n            }\n\n            const entity_tree_item = this.__getTreeviewItem(entity._id, entity.entity, true, !this.access_control.update.actions, create);\n            entity_tree_item.children = tree_actions;\n            tree_entities.push(entity_tree_item);\n          }\n\n          const module_tree_item = this.__getTreeviewItem(module.module_code, module.module, true, !this.access_control.update.actions, create);\n          module_tree_item.children = tree_entities;\n          entityList.push(module_tree_item);\n        }\n\n        this.entityList = entityList;\n\n      }).catch(err => {\n\n        this.error = err.error.message.text;\n        this.errorModal.show();\n      });\n  }\n\n  private __loadAttributes() {\n\n    const create = isEmpty(this.access_control._id);\n    this.accessControlService.getAttributes()\n      .then(response => {\n\n        const attributeList = new Array<TreeviewItem>();\n        let findAttribute, updateAttribute;\n\n        for (const row of response) {\n\n          const newAttribute = this.__getTreeviewItem(row.model, row.name, true, !this.access_control.update.attributes, create);\n          const allowedAttributeDetails = {\n            model: row.model,\n            find: [],\n            update: []\n          };\n          const newAttributeChildren = [];\n\n          if (row.find) {\n\n            findAttribute = this.__getTreeviewItem(row.model + '--find', 'Retrieve', true, !this.access_control.update.attributes, create);\n            newAttributeChildren.push(findAttribute);\n\n            const findAttributeChildren = [];\n            for (const attribute of row.attributes) {\n\n              findAttributeChildren.push(this.__prepareAttributeItem('find', row.find, attribute, row.model));\n              if ((row.find.default && row.find.default.indexOf(attribute.attribute) === -1) ||\n                (row.find.blocked && row.find.blocked.indexOf(attribute.attribute) === -1)) {\n                allowedAttributeDetails.find.push(attribute.attribute);\n              }\n            }\n            findAttribute.children = findAttributeChildren;\n          }\n\n          if (row.update) {\n\n            updateAttribute = this.__getTreeviewItem(row.model + '--update', 'Update', true, !this.access_control.update.attributes, create);\n            newAttributeChildren.push(updateAttribute);\n\n            const updateAttributeChildren = [];\n            for (const attribute of row.attributes) {\n\n              updateAttributeChildren.push(this.__prepareAttributeItem('update', row.update, attribute, row.model));\n              if ((row.update.default && row.update.default.indexOf(attribute.attribute) === -1) ||\n                (row.update.blocked && row.update.blocked.indexOf(attribute.attribute) === -1)) {\n                allowedAttributeDetails.update.push(attribute.attribute);\n              }\n            }\n            updateAttribute.children = updateAttributeChildren;\n          }\n\n          newAttribute.children = newAttributeChildren;\n          attributeList.push(newAttribute);\n          this.allowedAttributes.push(allowedAttributeDetails);\n        }\n\n        this.attributeList = attributeList;\n\n      }).catch(err => {\n\n        this.error = err.error.message.text;\n        this.errorModal.show();\n      });\n  }\n\n  private __loadAccessControl() {\n\n    this.accessControlService.getAccessControl(this.access_control_id)\n      .then(access_control => {\n\n        this.access_control = access_control;\n\n        this.__loadEntities();\n        this.__loadAttributes();\n      });\n  }\n\n  private __prepareAccessControl(access_control) {\n\n    if (access_control.attributes) {\n\n      access_control.attributes.forEach((attribute, index) => {\n\n        if (attribute.find) {\n          if (!attribute.find || attribute.find.length === 0) {\n            delete attribute.find;\n          }\n        }\n\n        if (attribute.update) {\n          if (!attribute.update || attribute.update.length === 0) {\n            delete attribute.update;\n          }\n        }\n\n        if (!attribute.find && !attribute.update) {\n          delete access_control.attributes[index];\n        }\n      });\n\n      access_control.attributes = access_control.attributes.filter(attribute => {\n        return !!attribute;\n      });\n    }\n\n    return access_control;\n  }\n\n  selectedEntity(event) {\n\n    const self = this;\n    self.access_control.actions = [];\n    this.accessControlForm.controls.entities.markAsTouched();\n\n    event.map(entity => {\n\n      self.access_control.actions.push(entity);\n      self.access_control.actions = uniq(self.access_control.actions);\n    });\n  }\n\n  selectedAttribute(event) {\n\n    const self = this;\n    self.access_control.attributes = [];\n\n    event.map(attribute => {\n\n      const attributeComponents = attribute.split('--');\n      const model = attributeComponents[0],\n        operation = attributeComponents[1],\n        attr = attributeComponents[2];\n\n      let index = self.__getIndex(self.access_control.attributes, model, 'model');\n      const attribute_index = self.__getIndex(self.allowedAttributes, model, 'model');\n\n      if (index === -1) {\n\n        self.access_control.attributes.push({\n          model: model,\n          find: [],\n          update: []\n        });\n        index = self.access_control.attributes.length - 1;\n      }\n\n      const allowed_attribute = self.allowedAttributes[attribute_index][operation];\n      if (allowed_attribute.indexOf(attr) !== -1) {\n        self.access_control.attributes[index][operation].push(attr);\n      }\n\n      if (allowed_attribute.length > 0 &&\n        allowed_attribute.length === self.access_control.attributes[index][operation].length) {\n        self.access_control.attributes[index][operation] = true;\n      }\n    });\n  }\n\n  postAccessControl() {\n\n    this.error = '';\n\n    let access_control = clone(this.access_control);\n    access_control = this.__prepareAccessControl(access_control);\n\n    if (this.access_control._id && this.access_control._id.toString()) {\n\n      this.accessControlService.putAccessControl(access_control)\n        .then(response => {\n\n          this.successModal.show('/access-control');\n\n        }).catch(err => {\n\n          this.error = err.error.message.text;\n          this.errorModal.show();\n        });\n\n    } else {\n\n      this.accessControlService.postAccessControl(access_control)\n        .then(response => {\n\n          this.successModal.show('/access-control');\n\n        }).catch(err => {\n\n          this.error = err.error.message.text;\n          this.errorModal.show();\n        });\n    }\n  }\n}\n"],"sourceRoot":""}