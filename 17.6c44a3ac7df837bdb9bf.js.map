{"version":3,"sources":["webpack:///./src/app/modules/leave/policy/leave-policy.module.ts","webpack:///./src/app/modules/leave/policy/leave-policy.routing.ts","webpack:///./src/app/modules/leave/policy/list-leave-policy/list-leave-policy.component.html","webpack:///./src/app/modules/leave/policy/list-leave-policy/list-leave-policy.component.ts","webpack:///./src/app/modules/leave/policy/manage-leave-policy/manage-leave-policy.component.html","webpack:///./src/app/modules/leave/policy/manage-leave-policy/manage-leave-policy.component.ts"],"names":[],"mappings":"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","file":"17.6c44a3ac7df837bdb9bf.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\nimport { LeavePolicyRoutingModule } from './leave-policy.routing';\nimport { ListLeavePolicyComponent } from './list-leave-policy/list-leave-policy.component';\nimport { ManageLeavePolicyComponent } from './manage-leave-policy/manage-leave-policy.component';\nimport { ApplicationComponentsModule } from 'modules/application-components.module';\nimport { ApplicationDirectivesModule } from 'modules/application-directives.module';\nimport { ApplicationPipesModule } from 'modules/application-pipes.module';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n@NgModule({\n  imports: [\n    LeavePolicyRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    CommonModule,\n    BsDatepickerModule,\n    TooltipModule,\n    NgSelectModule,\n    ApplicationComponentsModule,\n    ApplicationDirectivesModule,\n    ApplicationPipesModule\n  ],\n  declarations: [\n    ListLeavePolicyComponent,\n    ManageLeavePolicyComponent\n  ],\n  providers: [\n  ]\n})\nexport class LeavePolicyModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthenticationGuard } from 'core/services/authentication.service';\nimport { AuthorizationGuard } from 'core/services/authorization.service';\nimport { ManageLeavePolicyComponent } from './manage-leave-policy/manage-leave-policy.component';\nimport { ListLeavePolicyComponent } from './list-leave-policy/list-leave-policy.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: {\n      title: 'Policy'\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'list'\n      },\n      {\n        path: 'list',\n        data: {\n          title: 'List',\n          access: {\n            module: 'leave',\n            entity: 'policy',\n            action: 'find'\n          }\n        },\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        component: ListLeavePolicyComponent\n      },\n      {\n        path: 'add',\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        data: {\n          title: 'Add',\n          access: {\n            module: 'leave',\n            entity: 'policy',\n            action: 'create'\n          }\n        },\n        component: ManageLeavePolicyComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LeavePolicyRoutingModule { }\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col-12\\\">\\n              <button class=\\\"btn btn-primary pull-right\\\" role='button' type=\\\"button\\\" routerLink=\\\"/leave/policy/add\\\" (click)=\\\"exatask.trackEvent('leave', 'create', 'policy')\\\">+ Add Leave Policy</button>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"text-center m-5\\\" *ngIf=\\\"loading\\\">\\n            <h3><i class=\\\"fa fa-refresh fa-spin\\\"></i> Loading Leave Policies</h3>\\n          </div>\\n\\n          <div class=\\\"text-center m-5\\\" *ngIf=\\\"!loading && leave_policies.length == 0\\\">\\n            <h3>No Leave Policies in organization</h3>\\n          </div>\\n\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-striped\\\" *ngIf=\\\"!loading && leave_policies.length > 0\\\">\\n              <thead>\\n                <tr>\\n                  <th rowspan=\\\"2\\\">#</th>\\n                  <th rowspan=\\\"2\\\">Title</th>\\n                  <th rowspan=\\\"2\\\">Duration</th>\\n                  <th rowspan=\\\"2\\\">Applies To</th>\\n                  <th rowspan=\\\"2\\\">Approval</th>\\n                  <th colspan=\\\"3\\\" class=\\\"text-center\\\">Leaves</th>\\n                  <th rowspan=\\\"2\\\">Status</th>\\n                </tr>\\n                <tr>\\n                  <th>Leave Type<br/>(Count)</th>\\n                  <th>Allocation</th>\\n                  <th>Carry Forward<br/>(Maximum Count)</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <ng-template ngFor let-policy [ngForOf]=\\\"leave_policies\\\" let-i=\\\"index\\\">\\n                  <tr *ngFor=\\\"let leave of policy.leaves; let first = first\\\">\\n                    <td>\\n                      <span *ngIf=\\\"first\\\">{{i+1}}.</span>\\n                    </td>\\n                    <td>{{policy.title}}</td>\\n                    <td>\\n                      <span *ngIf=\\\"first\\\">\\n                        <u>Start Date</u> - {{policy.start_date | date: 'dd MMMM, yyyy'}}\\n                        <br /><u>End Date</u> - {{policy.end_date | date: 'dd MMMM, yyyy'}}\\n                      </span>\\n                    </td>\\n                    <td *ngIf=\\\"first\\\">\\n                      <span *ngIf=\\\"policy.applies_to.everyone\\\">Everyone<br/></span>\\n                      <span *ngIf=\\\"policy.applies_to.everyone_else\\\">Everyone else<br/></span>\\n                      <span *ngIf=\\\"policy.applies_to.employee_types && policy.applies_to.employee_types.length > 0\\\">\\n                        <u>Employee Types:</u>\\n                        <span *ngFor=\\\"let type of policy.applies_to.employee_types; let last = last\\\">\\n                          {{type | constants: 'user.employee_type'}}<span *ngIf=\\\"!last\\\">, </span>\\n                        </span>\\n                        <br/>\\n                      </span>\\n                      <span *ngIf=\\\"policy.applies_to.departments && policy.applies_to.departments.length > 0\\\">\\n                        <u>Departments:</u>\\n                        <span *ngFor=\\\"let department of policy.applies_to.departments; let last = last\\\">\\n                          {{department.name}}<span *ngIf=\\\"!last\\\">, </span>\\n                        </span>\\n                        <br/>\\n                      </span>\\n                    </td>\\n                    <td>\\n                      <span *ngIf=\\\"first\\\">\\n                        <span *ngIf=\\\"!policy.approval || !policy.approval.required\\\">Not Required</span>\\n                        <span *ngIf=\\\"policy.approval && policy.approval.required\\\">\\n                          <span *ngIf=\\\"policy.approval.from_supervisor\\\">From Supervisor</span>\\n                          <br/>\\n                          <span *ngIf=\\\"policy.approval.users && policy.approval.users.length > 0\\\">From selected Users</span>\\n                        </span>\\n                      </span>\\n                    </td>\\n                    <td>{{leave.leave_type | constants: 'leave.type'}} ({{leave.count}})</td>\\n                    <td>{{leave.allocation | constants: 'leave_policy.allocation'}}</td>\\n                    <td>\\n                      <span *ngIf=\\\"leave.carry_forward\\\">Yes ({{leave.maximum_count}})</span>\\n                      <span *ngIf=\\\"!leave.carry_forward\\\">No</span>\\n                    </td>\\n                    <td>\\n                      <span *ngIf=\\\"first\\\" class=\\\"badge\\\" [ngClass]=\\\"getStatusBadge(policy.leave_policy_status)\\\">\\n                        {{policy.leave_policy_status | constants: 'leave_policy.status'}}\\n                      </span>\\n                    </td>\\n                  </tr>\\n                </ng-template>\\n              </tbody>\\n            </table>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { LeavePolicy, LeavePolicyService } from 'modules/leave/policy/leave-policy.service';\nimport { ExaTask } from '../../../../core/providers/exatask.service';\nimport { STATUS } from '../../../../config/constants/leave-policy';\n\n@Component({\n  selector: 'app-leave-policy-list',\n  templateUrl: './list-leave-policy.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [ LeavePolicyService ]\n})\nexport class ListLeavePolicyComponent implements OnInit {\n\n  leave_policies: LeavePolicy [];\n  error: string;\n\n  loading: boolean = false;\n\n  constructor(\n    private leavePolicyService: LeavePolicyService,\n    public exatask: ExaTask\n  ) {\n\n    this.leave_policies = [];\n    this.error = '';\n    this.exatask.setTitle('Leave Policy List');\n  }\n\n  ngOnInit() {\n\n    this.loading = true;\n    this.leavePolicyService.getPolicies().then(policies => {\n\n      this.loading = false;\n      this.leave_policies = policies;\n\n    }).catch(err => {\n      this.error = err;\n    });\n  }\n\n  getStatusBadge(status) {\n\n    switch (status) {\n\n      case STATUS.ACTIVE: return 'badge-success';\n      case STATUS.SCHEDULED: return 'badge-warning';\n      case STATUS.EXPIRED: return 'badge-danger';\n      default: return 'badge-default';\n    }\n  }\n}\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row mb-3\\\">\\n            <div class=\\\"col-12 text-right\\\">\\n              <span class=\\\"required\\\">*</span> Required Fields\\n            </div>\\n          </div>\\n\\n          <form #leavePolicyForm=\\\"ngForm\\\">\\n\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"title\\\">\\n                <span class=\\\"required\\\">*</span> Title\\n              </label>\\n              <div class=\\\"col-md-9\\\">\\n                <input type=\\\"text\\\" name=\\\"title\\\" id=\\\"title\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"leave_policy.title\\\" />\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"start-date\\\">\\n                <span class=\\\"required\\\">*</span> Start Date\\n              </label>\\n              <div class=\\\"col-md-3 input-group\\\">\\n                <input type=\\\"text\\\" name=\\\"start-date\\\" class=\\\"form-control\\\" id=\\\"start-date\\\" [(ngModel)]=\\\"leave_policy.start_date\\\" bsDatepicker #startDate=\\\"bsDatepicker\\\" [bsConfig]=\\\"sdConfig\\\" (bsValueChange)=\\\"setPolicyStartDate($event)\\\">\\n                <span class=\\\"input-group-append\\\">\\n                  <button class=\\\"btn\\\" (click)=\\\"startDate.show()\\\" [attr.aria-expanded]=\\\"startDate.isOpen\\\">\\n                    <i class=\\\"fa fa-calendar\\\"></i>\\n                  </button>\\n                </span>\\n              </div>\\n\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"end-date\\\">\\n                <span class=\\\"required\\\">*</span> End Date\\n              </label>\\n              <div class=\\\"col-md-3 input-group\\\">\\n                <input type=\\\"text\\\" name=\\\"end-date\\\" class=\\\"form-control\\\" id=\\\"end-date\\\" [(ngModel)]=\\\"leave_policy.end_date\\\" bsDatepicker #endDate=\\\"bsDatepicker\\\" [bsConfig]=\\\"edConfig\\\">\\n                <span class=\\\"input-group-append\\\">\\n                  <button class=\\\"btn\\\" (click)=\\\"endDate.show()\\\" [attr.aria-expanded]=\\\"endDate.isOpen\\\">\\n                    <i class=\\\"fa fa-calendar\\\"></i>\\n                  </button>\\n                </span>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n\\n              <label class=\\\"col-md-3 col-form-label\\\">\\n                <span class=\\\"required\\\">*</span> Applies To\\n              </label>\\n              <div class=\\\"col-md-9\\\">\\n                <div class=\\\"row form-group\\\" *ngFor=\\\"let apply_to of applies_to; let i = index; let last = last;\\\">\\n\\n                  <div class=\\\"col-md-4\\\">\\n                    <select name=\\\"applies-to-{{i}}\\\" id=\\\"applies-to-{{i}}\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"apply_to.applies_to_type\\\">\\n                      <option *ngFor=\\\"let type of 'leave_policy.applies_to_type' | constantsarray\\\" [value]=\\\"type.key\\\">\\n                        {{ type.value }}\\n                      </option>\\n                    </select>\\n                  </div>\\n\\n                  <div class=\\\"col-md-7\\\" *ngIf=\\\"displayAppliesToData(apply_to.applies_to_type)\\\">\\n\\n                    <ng-select name=\\\"employee_types\\\" [items]=\\\"'user.employee_type' | constantsarray\\\" [multiple]=\\\"true\\\" [addTag]=\\\"false\\\"\\n                               [closeOnSelect]=\\\"false\\\" [clearable]=\\\"true\\\" [searchable]=\\\"true\\\" [clearSearchOnAdd]=\\\"true\\\" [hideSelected]=\\\"true\\\"\\n                               bindLabel=\\\"value\\\" bindValue=\\\"key\\\" placeholder=\\\"Select Employee Types\\\" [(ngModel)]=\\\"apply_to.employee_types\\\"\\n                               *ngIf=\\\"apply_to.applies_to_type == 3\\\">\\n\\n                      <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\" let-search=\\\"searchTerm\\\">\\n                        {{item.value}}\\n                      </ng-template>\\n\\n                    </ng-select>\\n\\n                    <ng-select name=\\\"departments\\\" [loading]=\\\"loading_departments\\\" [items]=\\\"department_list\\\" [multiple]=\\\"true\\\" [addTag]=\\\"false\\\"\\n                               [closeOnSelect]=\\\"false\\\" [clearable]=\\\"true\\\" [searchable]=\\\"true\\\" [clearSearchOnAdd]=\\\"true\\\" [hideSelected]=\\\"true\\\"\\n                               bindLabel=\\\"name\\\" bindValue=\\\"department_id\\\" placeholder=\\\"Select Departments\\\" notFoundText=\\\"No department found\\\"\\n                               [(ngModel)]=\\\"apply_to.departments\\\" *ngIf=\\\"apply_to.applies_to_type == 4\\\">\\n\\n                      <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\" let-search=\\\"searchTerm\\\">\\n                        {{item.name}}\\n                      </ng-template>\\n\\n                    </ng-select>\\n\\n                  </div>\\n\\n                  <div class=\\\"col-md-1\\\">\\n                    <button *ngIf=\\\"last && !appliesToDisabled()\\\" class=\\\"btn\\\" (click)=\\\"exatask.trackEvent('leave', 'add-applies-to'); addAppliesTo()\\\">\\n                      <i class=\\\"fa fa-plus\\\"></i>\\n                    </button>\\n                    <button *ngIf=\\\"!last\\\" class=\\\"btn\\\" (click)=\\\"exatask.trackEvent('leave', 'remove-applies-to'); removeAppliesTo(i)\\\">\\n                      <i class=\\\"fa fa-close\\\"></i>\\n                    </button>\\n                  </div>\\n\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n\\n              <label class=\\\"col-md-3 col-form-label\\\">\\n                <span class=\\\"required\\\">*</span> Approval\\n              </label>\\n              <div class=\\\"col-md-9\\\">\\n\\n                <div class=\\\"form-check\\\">\\n                  <input type=\\\"checkbox\\\" name=\\\"approval-supervisor\\\" class=\\\"form-check-input\\\" id=\\\"approval-supervisor\\\" value=\\\"true\\\" [(ngModel)]=\\\"leave_policy.approval.from_supervisor\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"approval-supervisor\\\">Approval from Supervisor</label>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input type=\\\"checkbox\\\" name=\\\"approval-users\\\" class=\\\"form-check-input\\\" id=\\\"approval-users\\\" value=\\\"true\\\" [(ngModel)]=\\\"from_users\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"approval-users\\\">Approval from selected Users</label>\\n                    </div>\\n\\n                  </div>\\n                  <div class=\\\"col-md-8\\\">\\n                    <ng-select name=\\\"users\\\" [loading]=\\\"loading_users\\\" [items]=\\\"user_list\\\" [multiple]=\\\"true\\\" [addTag]=\\\"false\\\" [closeOnSelect]=\\\"false\\\"\\n                               [clearable]=\\\"true\\\" [searchable]=\\\"true\\\" [searchFn]=\\\"filterUsers\\\" [clearSearchOnAdd]=\\\"true\\\" [hideSelected]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"user_id\\\" placeholder=\\\"Select Users\\\" notFoundText=\\\"No user found\\\" [disabled]=\\\"!from_users\\\"\\n                               [(ngModel)]=\\\"leave_policy.approval.users\\\">\\n\\n                      <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\" let-search=\\\"searchTerm\\\">\\n                        {{item.name}} <{{item.email_id}}>\\n                      </ng-template>\\n\\n                    </ng-select>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"allowed-back-days\\\">\\n                Allowed Back Days&nbsp;\\n                <i class=\\\"fa fa-question-circle\\\" tooltip=\\\"Leaves can be applied these many days after taking leave\\\" placement=\\\"bottom\\\"></i>\\n              </label>\\n              <div class=\\\"col-md-3\\\">\\n                <input type=\\\"text\\\" name=\\\"allowed-back-days\\\" id=\\\"allowed-back-days\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"leave_policy.allowed_back_days\\\" />\\n              </div>\\n\\n              <label class=\\\"col-md-3 col-form-label\\\">\\n                Reiterate&nbsp;\\n                <i class=\\\"fa fa-question-circle\\\" tooltip=\\\"Same policy will be applied again for the same time period when the current one ends\\\" placement=\\\"bottom\\\"></i>\\n              </label>\\n              <div class=\\\"col-md-3\\\">\\n                <div class=\\\"form-check\\\">\\n                  <input type=\\\"checkbox\\\" name=\\\"reiterate\\\" class=\\\"form-check-input\\\" id=\\\"reiterate\\\" value=\\\"true\\\" [(ngModel)]=\\\"leave_policy.reiterate\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"reiterate\\\">Apply same Leave Policy in next iteration</label>\\n                </div>\\n              </div>\\n\\n            </div>\\n\\n            <div *ngFor=\\\"let leave of leave_policy.leaves; let i = index; let last = last;\\\" class=\\\"card\\\">\\n\\n              <div class=\\\"card-header\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-9\\\">\\n                    <h5 class=\\\"mt-2\\\">\\n                      Leave :\\n                      <span *ngIf=\\\"leave.leave_type\\\">{{leave.leave_type | constants: 'leave.type'}} | </span>\\n                      <span *ngIf=\\\"leave.count\\\">{{leave.count}} Leave(s) | </span>\\n                      <span *ngIf=\\\"leave.allocation\\\">{{leave.allocation | constants: 'leave_policy.allocation'}} | </span>\\n                      <span *ngIf=\\\"leave.compensatory_off && leave.compensatory_off.expiry.type\\\">Expire: {{leave.compensatory_off.expiry.type | constants: 'compensatory_off.expiry'}} | </span>\\n                    </h5>\\n                  </div>\\n                  <div class=\\\"col-3 text-right\\\">\\n                    <button *ngIf=\\\"!addLeavesDisabled()\\\" class=\\\"btn\\\" (click)=\\\"exatask.trackEvent('leave', 'add-leave'); addLeave()\\\">\\n                      <i class=\\\"fa fa-plus\\\"></i>\\n                    </button>\\n                    <button class=\\\"btn\\\" (click)=\\\"toggleLeave(i)\\\">\\n                      <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-caret-up': leave_block[i], 'fa-caret-down': !leave_block[i]}\\\"></i>\\n                    </button>\\n                    <button *ngIf=\\\"leave_policy.leaves.length > 1\\\" class=\\\"btn\\\" (click)=\\\"exatask.trackEvent('leave', 'remove-leave'); removeLeave(i)\\\">\\n                      <i class=\\\"fa fa-close\\\"></i>\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"card-body\\\" [ngClass]=\\\"{'collapse': !leave_block[i]}\\\">\\n\\n                <div class=\\\"form-group row\\\">\\n\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"leave-type-{{i}}\\\">\\n                    <span class=\\\"required\\\">*</span> Leave Type\\n                  </label>\\n                  <div class=\\\"col-md-3\\\">\\n                    <select name=\\\"leave-type-{{i}}\\\" id=\\\"leave-type-{{i}}\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"leave.leave_type\\\" (change)=\\\"changeLeaveType(leave)\\\">\\n                      <option *ngFor=\\\"let type of 'leave.type' | constantsarray\\\" [value]=\\\"type.key\\\" [disabled]=\\\"leaveTypeDisabled(type.key)\\\">\\n                        {{ type.value }}\\n                      </option>\\n                    </select>\\n                  </div>\\n\\n                  <label class=\\\"col-md-3 col-form-label\\\" [hidden]=\\\"isCompOff(leave)\\\" for=\\\"count-{{i}}\\\">\\n                    <span class=\\\"required\\\">*</span> Count\\n                  </label>\\n                  <div class=\\\"col-md-3\\\" [hidden]=\\\"isCompOff(leave)\\\">\\n                    <input type=\\\"text\\\" name=\\\"count-{{i}}\\\" id=\\\"count-{{i}}\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"leave.count\\\" />\\n                  </div>\\n\\n                </div>\\n\\n                <div class=\\\"form-group row\\\" [hidden]=\\\"isCompOff(leave)\\\">\\n\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"allocation-{{i}}\\\">\\n                    <span class=\\\"required\\\">*</span> Allocation\\n                  </label>\\n                  <div class=\\\"col-md-3\\\">\\n                    <select name=\\\"allocation-{{i}}\\\" id=\\\"allocation-{{i}}\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"leave.allocation\\\">\\n                      <option *ngFor=\\\"let allocation of 'leave_policy.allocation' | constantsarray\\\" [value]=\\\"allocation.key\\\" [disabled]=\\\"leaveAllocationDisabled(allocation.key)\\\">\\n                        {{ allocation.value }}\\n                      </option>\\n                    </select>\\n                  </div>\\n\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"loaned-count-{{i}}\\\">\\n                    Loaned Count&nbsp;\\n                    <i class=\\\"fa fa-question-circle\\\" tooltip=\\\"If employee runs out of leaves, these many can be loaned in advance\\\"\\n                      placement=\\\"bottom\\\"></i>\\n                  </label>\\n                  <div class=\\\"col-md-3\\\">\\n                    <input type=\\\"text\\\" name=\\\"loaned-count-{{i}}\\\" id=\\\"loaned-count-{{i}}\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"leave.loaned_count\\\" />\\n                  </div>\\n\\n                </div>\\n\\n                <div class=\\\"form-group row\\\" [hidden]=\\\"isCompOff(leave)\\\">\\n\\n                  <label class=\\\"col-md-3 col-form-label\\\">\\n                    <span class=\\\"required\\\">*</span> Carry-Forward&nbsp;\\n                    <i class=\\\"fa fa-question-circle\\\" tooltip=\\\"When current leave policy ends, all pending leaves will be carry-forwarded to next iteration of leave policy\\\" placement=\\\"bottom\\\"></i>\\n                  </label>\\n                  <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input type=\\\"checkbox\\\" name=\\\"carry-forward-{{i}}\\\" class=\\\"form-check-input\\\" id=\\\"carry-forward-{{i}}\\\" value=\\\"true\\\" [(ngModel)]=\\\"leave.carry_forward\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"carry-forward-{{i}}\\\">Carry-Forward pending leaves to next iteration</label>\\n                    </div>\\n                  </div>\\n\\n                  <label class=\\\"col-md-3 col-form-label\\\" for=\\\"maximum-count-{{i}}\\\">\\n                    Maximum Count&nbsp;\\n                    <i class=\\\"fa fa-question-circle\\\" tooltip=\\\"When leaves are carry-forwarded, maximum leaves that employee can be allocated (including the ones that was carry-forward)\\\"\\n                      placement=\\\"bottom\\\"></i>\\n                  </label>\\n                  <div class=\\\"col-md-3\\\">\\n                    <input type=\\\"text\\\" name=\\\"maximum-count-{{i}}\\\" id=\\\"maximum-count-{{i}}\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"leave.maximum_count\\\" [disabled]=\\\"!leave.carry_forward\\\" />\\n                  </div>\\n\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n\\n                  <label class=\\\"col-md-3 col-form-label\\\">Sandwich</label>\\n                  <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input type=\\\"checkbox\\\" name=\\\"sandwich-{{i}}\\\" class=\\\"form-check-input\\\" id=\\\"sandwich-{{i}}\\\" value=\\\"true\\\" [(ngModel)]=\\\"leave.sandwich\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"sandwich-{{i}}\\\">Sandwich leaves on weekend and holidays</label>\\n                    </div>\\n                  </div>\\n\\n                  <label class=\\\"col-md-3 col-form-label\\\" *ngIf=\\\"isCompOff(leave)\\\" for=\\\"expiry-type-{{i}}\\\">\\n                    Comp-Off Expiry\\n                    <i class=\\\"fa fa-question-circle\\\" tooltip=\\\"Approved Comp-Offs will expire after selected time-period if not availed\\\"\\n                      placement=\\\"bottom\\\"></i>\\n                  </label>\\n                  <div class=\\\"col-md-3\\\" *ngIf=\\\"isCompOff(leave)\\\">\\n                    <div class=\\\"input-group\\\">\\n\\n                      <select name=\\\"expiry-type-{{i}}\\\" id=\\\"expiry-type-{{i}}\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"leave.compensatory_off.expiry.type\\\">\\n                        <option *ngFor=\\\"let expiry of 'compensatory_off.expiry' | constantsarray\\\" [value]=\\\"expiry.key\\\">\\n                          {{ expiry.value }}\\n                        </option>\\n                      </select>\\n                      <input type=\\\"text\\\" name=\\\"expiry-count-{{i}}\\\" id=\\\"expiry-count-{{i}}\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"leave.compensatory_off.expiry.count\\\"\\n                        [hidden]=\\\"!showExpiryCount(leave)\\\" />\\n\\n                    </div>\\n                  </div>\\n\\n                </div>\\n\\n                <div class=\\\"form-group row\\\" *ngIf=\\\"isCompOff(leave)\\\">\\n\\n                  <label class=\\\"col-md-3 col-form-label\\\">\\n                    Approval\\n                    <i class=\\\"fa fa-question-circle\\\" tooltip=\\\"Compensatory-Off must be applied for and approved before it can be availed\\\" placement=\\\"bottom\\\"></i>\\n                  </label>\\n                  <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input type=\\\"checkbox\\\" name=\\\"compoff-approval-supervisor-{{i}}\\\" class=\\\"form-check-input\\\" id=\\\"compoff-approval-supervisor-{{i}}\\\" value=\\\"true\\\"\\n                        [(ngModel)]=\\\"leave.compensatory_off.approval.from_supervisor\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"compoff-approval-supervisor-{{i}}\\\">Approval from Supervisor</label>\\n                    </div>\\n                  </div>\\n\\n                </div>\\n\\n                <div class=\\\"form-group row\\\" *ngIf=\\\"isCompOff(leave)\\\">\\n\\n                  <div class=\\\"offset-md-3 col-md-3\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input type=\\\"checkbox\\\" name=\\\"compoff-approval-users-{{i}}\\\" class=\\\"form-check-input\\\" id=\\\"compoff-approval-users-{{i}}\\\" value=\\\"true\\\"\\n                        [(ngModel)]=\\\"from_users_compoff\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"compoff-approval-users-{{i}}\\\">Approval from selected Users</label>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-6\\\">\\n                    <ng-select name=\\\"compoffusers\\\" [loading]=\\\"loading_users\\\" [items]=\\\"user_list\\\" [multiple]=\\\"true\\\" [addTag]=\\\"false\\\"\\n                      [closeOnSelect]=\\\"false\\\" [clearable]=\\\"true\\\" [searchable]=\\\"true\\\" [searchFn]=\\\"filterUsers\\\" [clearSearchOnAdd]=\\\"true\\\"\\n                      [hideSelected]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"user_id\\\" placeholder=\\\"Select Users\\\" notFoundText=\\\"No user found\\\"\\n                      [disabled]=\\\"!from_users_compoff\\\" [(ngModel)]=\\\"leave.compensatory_off.approval.users\\\" #compoffusers=\\\"ngModel\\\">\\n\\n                      <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\" let-search=\\\"searchTerm\\\">\\n                        {{item.name}} <{{item.email_id}}>\\n                      </ng-template>\\n\\n                    </ng-select>\\n                  </div>\\n\\n                </div>\\n\\n              </div>\\n            </div>\\n\\n          </form>\\n\\n          <div class=\\\"form-actions row mt-4\\\">\\n            <div class=\\\"col-12\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-link pull-right\\\" routerLink=\\\"/leave/policy\\\" (click)=\\\"exatask.trackEvent('leave', 'cancel')\\\">Cancel</button>\\n              <button [disabled]=\\\"!leavePolicyForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"exatask.trackEvent('leave', 'submit'); saveLeavePolicy()\\\">Submit</button>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-success-modal #successModal title=\\\"Success!\\\">\\n  <div content>\\n    {{ !updating_leave_policy ? \\\"Created\\\" : \\\"Updated\\\" }} Leave Policy Successfully\\n  </div>\\n</app-success-modal>\\n\\n<app-error-modal #errorModal title=\\\"Error!\\\">\\n  <div content>\\n    <p>There was an error {{ !updating_leave_policy ? \\\"creating\\\" : \\\"updating\\\" }} Leave Policy. {{error}}</p>\\n    <ul>\\n      <li *ngFor=\\\"let attribute of invalid_attributes \\\">{{attribute}}</li>\\n    </ul>\\n  </div>\\n</app-error-modal>\"","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { find, matchesProperty } from 'lodash';\n\nimport { TYPE } from 'config/constants/leave';\nimport { ALLOCATION, APPLIES_TO_TYPE } from 'config/constants/leave-policy';\n\nimport { SuccessModalComponent } from 'shared/components/success-modal/success-modal.component';\nimport { ErrorModalComponent } from 'shared/components/error-modal/error-modal.component';\nimport { AppliesTo, CompensatoryOff, LeavePolicy, LeavePolicyService } from 'modules/leave/policy/leave-policy.service';\nimport { Name } from 'modules/user/profile/profile.service';\nimport { EmployeeService } from 'modules/employee/employee.service';\nimport { EXPIRY } from 'config/constants/compensatory-off';\nimport { BsDatepickerDirective } from 'ngx-bootstrap';\nimport { Access } from 'core/providers/access.service';\nimport { ExaTask } from '../../../../core/providers/exatask.service';\nimport { DepartmentService } from '../../../organization/department/department.service';\n\nclass UserSearchItem {\n\n  user_id: string;\n  name: string;\n  email_id: string;\n}\n\nclass DepartmentSearchItem {\n\n  department_id: string;\n  name: string;\n}\n\nclass AppliesToInput {\n\n  applies_to_type: number;\n  employee_types: Array<number>;\n  departments: Array<string>;\n}\n\nconst error_map = {\n  start_date: 'Start Date',\n  end_date: 'End Date',\n  leave_type: 'Leave Type',\n  count: 'Count',\n  carry_forward: 'Carry Forward',\n  maximum_count: 'Maximum Count',\n  loaned_count: 'Loaned Count',\n  sandwich: 'Sandwich',\n  allowed_back_days: 'Allowed Back Days',\n  allocation: 'Allocation'\n};\n\n@Component({\n  selector: 'app-manage-leaves-policy',\n  templateUrl: './manage-leave-policy.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [LeavePolicyService, EmployeeService, DepartmentService, DatePipe]\n})\nexport class ManageLeavePolicyComponent implements OnInit {\n  @ViewChild('errorModal') errorModal: ErrorModalComponent;\n  @ViewChild('successModal') successModal: SuccessModalComponent;\n  @ViewChild('startDate') startDate: BsDatepickerDirective;\n  @ViewChild('endDate') endDate: BsDatepickerDirective;\n\n  leave_policy: LeavePolicy;\n  applies_to: Array<AppliesToInput>;\n  error: string;\n\n  from_users: boolean = false;\n  from_users_compoff: boolean = false;\n  user_list: UserSearchItem[] = [];\n  department_list: DepartmentSearchItem[] = [];\n  loading_users: boolean = false;\n  loading_departments: boolean = false;\n  comp_off_enabled: boolean = false;\n\n  updating_leave_policy: boolean;\n  leave_block: Array<boolean>;\n  invalid_attributes: Array<string>;\n\n  sdConfig: Object;\n  edConfig: Object;\n\n  constructor(\n    private leavePolicyService: LeavePolicyService,\n    private employeeService: EmployeeService,\n    private departmentService: DepartmentService,\n    private datePipe: DatePipe,\n    private access: Access,\n    public exatask: ExaTask\n  ) {\n\n    this.exatask.setTitle('Manage Leave Policy');\n    this.leave_policy = new LeavePolicy();\n    this.leave_policy.title = 'Leave Policy dt. ' + this.datePipe.transform(new Date(), 'dd MMMM, yyyy');\n    this.applies_to = new Array<AppliesToInput>();\n    this.applies_to.push(new AppliesToInput());\n    this.error = '';\n    this.leave_block = [true];\n\n    this.updating_leave_policy = false;\n    this.invalid_attributes = [];\n\n    const current_date = new Date();\n    current_date.setDate(current_date.getDate() + 1);\n    this.sdConfig = {\n      minDate: current_date,\n      dateInputFormat: 'YYYY-MM-DD',\n      containerClass: 'theme-blue',\n      showWeekNumbers: false\n    };\n    this.edConfig = {\n      minDate: current_date,\n      dateInputFormat: 'YYYY-MM-DD',\n      containerClass: 'theme-blue',\n      showWeekNumbers: false\n    };\n  }\n\n  async ngOnInit() {\n\n    this.__loadUsers();\n    this.__loadDepartments();\n\n    this.comp_off_enabled = await this.access.hasAccess({\n      module: 'compensatory-off',\n      entity: 'compensatory-off',\n      action: 'find'\n    });\n  }\n\n  private __validate() {\n    return true;\n  }\n\n  private __loadUsers() {\n\n    this.loading_users = true;\n    this.employeeService.getEmployees(null, 0, 0, ['_id', 'email_id', 'name'])\n      .then(response => {\n\n        this.user_list = response.users.map(user => {\n\n          const item = new UserSearchItem();\n          item.user_id = user._id;\n          item.email_id = user.email_id;\n          item.name = Name.getFullName(user.name);\n          return item;\n        });\n        this.loading_users = false;\n\n      }).catch(err => {\n\n        this.error = err.error.message.text;\n        this.errorModal.show();\n      });\n  }\n\n  private __loadDepartments() {\n\n    this.loading_departments = true;\n    this.departmentService.getDepartments(null, ['_id', 'name'])\n      .then(response => {\n\n        this.department_list = response.map(department => {\n\n          const item = new DepartmentSearchItem();\n          item.department_id = department._id;\n          item.name = department.name;\n          return item;\n        });\n        console.log(this.department_list);\n        this.loading_departments = false;\n\n      }).catch(err => {\n\n      this.error = err.error.message.text;\n      this.errorModal.show();\n    });\n  }\n\n  private __sanitizeLeavePolicy(leavePolicy) {\n\n    if (leavePolicy.start_date !== undefined) {\n      leavePolicy.start_date = this.datePipe.transform(leavePolicy.start_date, 'yyyy-MM-dd');\n    }\n\n    if (leavePolicy.end_date !== undefined) {\n      leavePolicy.end_date = this.datePipe.transform(leavePolicy.end_date, 'yyyy-MM-dd');\n    }\n\n    const approval = leavePolicy.approval;\n    if (approval && (approval.from_supervisor || (approval.users && approval.users.length > 0))) {\n      leavePolicy.approval.required = true;\n    } else {\n      leavePolicy.approval = {\n        required: false\n      };\n    }\n\n    const leave_apply_to = new AppliesTo();\n    for (const apply_to of this.applies_to) {\n\n      switch (parseInt(apply_to.applies_to_type.toString(), 10)) {\n\n        case APPLIES_TO_TYPE.EVERYONE:\n          leave_apply_to.everyone = true;\n          break;\n\n        case APPLIES_TO_TYPE.EVERYONE_ELSE:\n          leave_apply_to.everyone_else = true;\n          break;\n\n        case APPLIES_TO_TYPE.EMPLOYEE_TYPES:\n          leave_apply_to.employee_types = apply_to.employee_types;\n          break;\n\n        case APPLIES_TO_TYPE.DEPARTMENTS:\n          const departments = new Array<DepartmentSearchItem>();\n          for (const department_id of apply_to.departments) {\n            departments.push(find(this.department_list, matchesProperty('department_id', department_id)));\n          }\n          leave_apply_to.departments = departments;\n          break;\n      }\n    }\n    leavePolicy.applies_to = leave_apply_to;\n\n    return leavePolicy;\n  }\n\n  leaveTypeDisabled(leave_type) {\n\n    const ignored_leave_types = [\n      TYPE.PL,\n      TYPE.ML,\n      TYPE.LWP\n    ];\n\n    if (!this.comp_off_enabled) {\n      ignored_leave_types.push(TYPE.COMP);\n    }\n\n    return ignored_leave_types.indexOf(leave_type) !== -1;\n  }\n\n  leaveAllocationDisabled(leave_allocation) {\n\n    const ignored_leave_allocations = [\n      ALLOCATION.ON_DEMAND\n    ];\n\n    return ignored_leave_allocations.indexOf(parseInt(leave_allocation, 10)) !== -1;\n  }\n\n  appliesToDisabled() {\n\n    if (this.applies_to.length >= 4) {\n      return true;\n    }\n\n    for (const applies_to of this.applies_to) {\n\n      if (!applies_to.applies_to_type) {\n        continue;\n      }\n      if (parseInt(applies_to.applies_to_type.toString(), 10) === APPLIES_TO_TYPE.EVERYONE ||\n        parseInt(applies_to.applies_to_type.toString(), 10) === APPLIES_TO_TYPE.EVERYONE_ELSE) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addLeavesDisabled() {\n\n    let max_leaves_count = 3;\n    if (this.comp_off_enabled) {\n      max_leaves_count = 4;\n    }\n\n    if (this.leave_policy.leaves.length >= max_leaves_count) {\n      return true;\n    }\n    return false;\n  }\n\n  displayAppliesToData(applies_to_type) {\n\n    const allowed_applies_to = [\n      APPLIES_TO_TYPE.EMPLOYEE_TYPES,\n      APPLIES_TO_TYPE.DEPARTMENTS\n    ];\n\n    return allowed_applies_to.indexOf(parseInt(applies_to_type, 10)) !== -1;\n  }\n\n  saveLeavePolicy() {\n\n    if (this.__validate()) {\n\n      let leave_policy = JSON.parse(JSON.stringify(this.leave_policy));\n      leave_policy = this.__sanitizeLeavePolicy(leave_policy);\n      this.error = '';\n      this.invalid_attributes = [];\n\n      this.leavePolicyService.postPolicy(leave_policy).then(data => {\n\n        this.successModal.show('/leave/policy');\n\n      }).catch(err => {\n\n        this.error = err.error.message.text;\n        if (err.error.invalid_attributes) {\n          for (const key in err.error.invalid_attributes) {\n            if (err.error.invalid_attributes.hasOwnProperty(key)) {\n              this.invalid_attributes.push(error_map[key] ? error_map[key] : err.error.invalid_attributes[key]);\n            }\n          }\n        }\n        this.errorModal.show();\n      });\n    }\n  }\n\n  addLeave() {\n\n    this.leave_policy.addLeave();\n    this.leave_block.push(true);\n  }\n\n  removeLeave(index) {\n\n    this.leave_policy.removeLeave(index);\n    this.leave_block.splice(index, 1);\n  }\n\n  addAppliesTo() {\n    this.applies_to.push(new AppliesToInput());\n  }\n\n  removeAppliesTo(index) {\n    this.applies_to.splice(index, 1);\n  }\n\n  toggleLeave(index) {\n\n    this.leave_block[index] = !this.leave_block[index];\n  }\n\n  filterUsers(term: string, item: UserSearchItem) {\n\n    const regex = new RegExp(term, 'i');\n    return item.email_id.match(regex) || item.name.match(regex);\n  }\n\n  changeLeaveType(leave) {\n\n    if (leave.leave_type === TYPE.COMP) {\n\n      leave.allocation = ALLOCATION.ON_DEMAND;\n      leave.count = 0;\n      leave.loaned_count = 0;\n      leave.compensatory_off = new CompensatoryOff();\n\n    } else {\n\n      leave.allocation = null;\n      leave.compensatory_off = null;\n    }\n  }\n\n  isCompOff(leave) {\n\n    if (leave.leave_type === TYPE.COMP) {\n      return true;\n    }\n    return false;\n  }\n\n  showExpiryCount(leave) {\n\n    const allowed_count_expiry = [EXPIRY.AFTER_MONTH, EXPIRY.AFTER_DAY];\n\n    if (allowed_count_expiry.indexOf(parseInt(leave.compensatory_off.expiry.type, 10)) !== -1) {\n      return true;\n    }\n    return false;\n  }\n\n  setPolicyStartDate(value: Date) {\n\n    this.edConfig['minDate'] = value;\n    this.endDate.setConfig();\n  }\n}\n"],"sourceRoot":""}