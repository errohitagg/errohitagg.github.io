{"version":3,"sources":["webpack:///./src/app/modules/user/profile/profile.component.html","webpack:///./src/app/modules/user/profile/profile.component.ts","webpack:///./src/app/modules/user/security/security.component.html","webpack:///./src/app/modules/user/security/security.component.ts","webpack:///./src/app/modules/user/user.module.ts","webpack:///./src/app/modules/user/user.routing.ts"],"names":[],"mappings":"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","file":"18.47af9c1e8777ffeb01cf.js","sourcesContent":["module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n\\n      <form #myForm=\\\"ngForm\\\">\\n        <tabset>\\n\\n          <tab heading=\\\"Personal Information\\\">\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-3 col-form-label\\\">Name</label>\\n              <div class=\\\"col-3\\\">\\n                <input type=\\\"text\\\" name=\\\"first-name\\\" class=\\\"form-control\\\" id=\\\"first-name\\\" placeholder=\\\"First Name\\\" [(ngModel)]=\\\"profile.name.first\\\">\\n              </div>\\n              <div class=\\\"col-3\\\">\\n                <input type=\\\"text\\\" name=\\\"middle-name\\\" class=\\\"form-control\\\" id=\\\"middle-name\\\" placeholder=\\\"Middle Name\\\" [(ngModel)]=\\\"profile.name.middle\\\">\\n              </div>\\n              <div class=\\\"col-3\\\">\\n                <input type=\\\"text\\\" name=\\\"last-name\\\" class=\\\"form-control\\\" id=\\\"last-name\\\" placeholder=\\\"Last Name\\\" [(ngModel)]=\\\"profile.name.last\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-3 col-form-label\\\">E-Mail ID</label>\\n              <div class=\\\"col-3\\\">\\n                <input type=\\\"text\\\" name=\\\"email-id\\\" class=\\\"form-control\\\" id=\\\"email-id\\\" [(ngModel)]=\\\"profile.email_id\\\" readonly>\\n              </div>\\n              <label class=\\\"col-3 col-form-label\\\">Contact Number</label>\\n              <div class=\\\"col-3\\\">\\n                <div class=\\\"input-group\\\">\\n                  <span class=\\\"input-group-prepend\\\"><span class=\\\"input-group-text\\\">+91</span></span>\\n                  <input type=\\\"text\\\" name=\\\"contact-number\\\" class=\\\"form-control\\\" id=\\\"contact-number\\\" placeholder=\\\"Contact Number\\\" [(ngModel)]=\\\"profile.contact_number\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-3 col-form-label\\\">Permanent Address</label>\\n              <div class=\\\"col-9\\\">\\n                <app-address name=\\\"permanent-address\\\" id=\\\"permanent-address\\\" [(address)]=\\\"profile.permanent_address\\\"></app-address>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-3 col-form-label\\\">Date of Birth</label>\\n              <div class=\\\"col-3\\\">\\n                <div class=\\\"input-group\\\">\\n                  <input type=\\\"text\\\" name=\\\"date-of-birth\\\" class=\\\"form-control\\\" id=\\\"date-of-birth\\\" [(ngModel)]=\\\"profile.date_of_birth\\\" bsDatepicker #dob=\\\"bsDatepicker\\\" [bsConfig]=\\\"dobConfig\\\">\\n                  <span class=\\\"input-group-append\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"dob.show($event);\\\" [attr.aria-expanded]=\\\"dob.isOpen\\\">\\n                      <i class=\\\"fa fa-calendar\\\"></i>\\n                    </button>\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-3 col-form-label\\\">Gender</label>\\n              <div class=\\\"col-3\\\">\\n                <select name=\\\"gender\\\" id=\\\"gender\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"profile.gender\\\">\\n                  <option *ngFor=\\\"let gender of genders | constantsarray\\\" [ngValue]=\\\"profile.gender\\\">\\n                    {{ gender | constants: 'user.gender' }}\\n                  </option>\\n                </select>\\n              </div>\\n              <label class=\\\"col-3 col-form-label\\\">Marital Status</label>\\n              <div class=\\\"col-3\\\">\\n                <select name=\\\"marital-status\\\" id=\\\"marital-status\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"profile.marital_status\\\">\\n                  <option *ngFor=\\\"let marital_status of marital_statuses | constantsarray\\\" [ngValue]=\\\"profile.marital_status\\\">\\n                    {{ marital_status | constants: 'user.marital_status' }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n          </tab>\\n\\n          <tab heading=\\\"Additional Information\\\">\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-3 col-form-label\\\">Correspondence Address</label>\\n              <div class=\\\"col-9\\\">\\n                <app-address name=\\\"correspondence-address\\\" id=\\\"correspondace-address\\\" [(address)]=\\\"profile.correspondence_address\\\"></app-address>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-3 col-form-label\\\">Alternate E-Mail ID's</label>\\n              <div class=\\\"col-6\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-6 form-group\\\" *ngFor=\\\"let email_id of alternate_email_ids; let i = index\\\">\\n                    <div class=\\\"input-group\\\">\\n                      <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"alternate-email-id-{{i}}\\\" id=\\\"alternate-email-id-{{i}}\\\" placeholder=\\\"Alternate E-Mail ID\\\"\\n                        [(ngModel)]=\\\"email_id.email_id\\\">\\n                      <span class=\\\"input-group-append\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"removeEmailId(i)\\\">\\n                          <i class=\\\"fa fa-remove\\\"></i>\\n                        </button>\\n                      </span>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-3\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"addEmailId()\\\">Add</button>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-3 col-form-label\\\">Alternate Contact Number's</label>\\n              <div class=\\\"col-6\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-6 form-group\\\" *ngFor=\\\"let contact_number of profile.alternate_contact_numbers; let i = index\\\">\\n                    <div class=\\\"input-group\\\">\\n                      <span class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">{{contact_number.isd_code}}</span>\\n                      </span>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"alternate-contact-number-{{i}}\\\" id=\\\"alternate-contact-number-{{i}}\\\" placeholder=\\\"Alternate Contact Number\\\"\\n                        [(ngModel)]=\\\"contact_number.contact_number\\\">\\n                      <span class=\\\"input-group-append\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"removeContactNumber(i)\\\">\\n                          <i class=\\\"fa fa-remove\\\"></i>\\n                        </button>\\n                      </span>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-3\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"addContactNumber()\\\">Add</button>\\n              </div>\\n            </div>\\n          </tab>\\n\\n          <tab heading=\\\"Social Security\\\">\\n\\n            <table class=\\\"table\\\">\\n              <thead>\\n                <tr>\\n                  <th width=\\\"10%\\\">#</th>\\n                  <th width=\\\"40%\\\">Type</th>\\n                  <th width=\\\"40%\\\">Number</th>\\n                  <th>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" (click)=\\\"addSocialSecurity()\\\" [hidden]=\\\"maxSocialSecurityTypes\\\">Add</button>\\n                  </th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let social_security of profile.social_security; let i = index\\\">\\n                  <td>{{i + 1}}.</td>\\n                  <td>\\n                    <select name=\\\"social-security-type-{{i}}\\\" id=\\\"social-security-type-{{i}}\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"social_security.type\\\">\\n                      <option *ngFor=\\\"let social_type of social_security_types | constantsarray\\\" [ngValue]=\\\"social_type\\\">\\n                        {{ social_type | constants:'user.social_security' }}\\n                      </option>\\n                    </select>\\n                  </td>\\n                  <td>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"social-security-number-{{i}}\\\" id=\\\"social-security-number-{{i}}\\\"\\n                      placeholder=\\\"Number\\\" [(ngModel)]=\\\"social_security.number\\\">\\n                  </td>\\n                  <td>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"removeSocialSecurity(i)\\\">\\n                      <i class=\\\"fa fa-remove\\\"></i>\\n                    </button>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n\\n          </tab>\\n\\n          <tab heading=\\\"Emergency Contacts\\\">\\n            <table class=\\\"table\\\">\\n              <thead>\\n                <tr>\\n                  <th width=\\\"5%\\\">#</th>\\n                  <th width=\\\"30%\\\">Name</th>\\n                  <th width=\\\"30%\\\">Relation</th>\\n                  <th width=\\\"30%\\\">Contact Number</th>\\n                  <th>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" (click)=\\\"addEmergencyContact()\\\">Add</button>\\n                  </th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let emergency_contact of profile.emergency_contacts; let i = index\\\">\\n                  <td>{{i + 1}}.</td>\\n                  <td>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"emergency-contact-name-{{i}}\\\" id=\\\"emergency-contact-name-{{i}}\\\"\\n                      placeholder=\\\"Name\\\" [(ngModel)]=\\\"emergency_contact.name\\\">\\n                  </td>\\n                  <td>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"emergency-contact-relation-{{i}}\\\" id=\\\"emergency-contact-relation-{{i}}\\\"\\n                      placeholder=\\\"Relation\\\" [(ngModel)]=\\\"emergency_contact.relation\\\">\\n                  </td>\\n                  <td>\\n                    <div class=\\\"input-group\\\">\\n                      <span class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">{{emergency_contact.isd_code}}</span>\\n                      </span>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"emergency-contact-number-{{i}}\\\" id=\\\"emergency-contact-number-{{i}}\\\" placeholder=\\\"Contact Number\\\"\\n                        [(ngModel)]=\\\"emergency_contact.contact_number\\\">\\n                    </div>\\n                  </td>\\n                  <td>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"removeEmergencyContact(i)\\\">\\n                      <i class=\\\"fa fa-remove\\\"></i>\\n                    </button>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </tab>\\n        </tabset>\\n\\n        <div class=\\\"form-actions mb-4 mt-4\\\">\\n          <div class=\\\"col-12 text-right\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateProfile($event)\\\">Submit</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-link\\\" routerLink=\\\"/dashboard\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n      </form>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n<app-success-modal #successModal title=\\\"Success!\\\">\\n  <div content>\\n    Profile updated successfully.\\n  </div>\\n</app-success-modal>\\n\\n<app-error-modal #errorModal title=\\\"Error!\\\">\\n  <div content>\\n    <p>There was an error updating profile. {{error}}</p>\\n    <ul>\\n      <li *ngFor=\\\"let attribute of invalid_attributes \\\">{{attribute}}</li>\\n    </ul>\\n  </div>\\n</app-error-modal>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { clone } from 'lodash';\n\nimport { GENDER, MARITAL_STATUS, SOCIAL_SECURITY_TYPE } from 'config/constants/user';\nimport {\n  Profile, ContactNumber, EmergencyContact, SocialSecurity, ProfileService, DateOfBirth, Address\n} from 'modules/user/profile/profile.service';\nimport Utility from 'shared/helpers/utility';\n\nimport { SuccessModalComponent } from 'shared/components/success-modal/success-modal.component';\nimport { ErrorModalComponent } from 'shared/components/error-modal/error-modal.component';\n\nclass EmailId {\n  email_id: string;\n}\n\nconst error_map = {\n  first: 'First Name',\n  middle: 'Middle Name',\n  last: 'Last Name',\n  locality: 'Locality (Address)',\n  contact_number: 'Contact Number',\n  name: 'Name'\n};\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: 'profile.component.html',\n  providers: [ProfileService]\n})\nexport class ProfileComponent implements OnInit {\n  @ViewChild('successModal') successModal: SuccessModalComponent;\n  @ViewChild('errorModal') errorModal: ErrorModalComponent;\n\n  profile: Profile;\n  original_profile: Profile;\n\n  genders;\n  marital_statuses;\n  social_security_types;\n\n  alternate_email_ids: Array<EmailId>;\n\n  maxSocialSecurityTypes: Boolean;\n\n  error: string;\n  invalid_attributes: Array<string>;\n  dobConfig: Object;\n\n  constructor(\n    private profileService: ProfileService\n  ) {\n\n    this.profile = new Profile();\n\n    this.maxSocialSecurityTypes = false;\n    this.dobConfig = {\n      maxDate: new Date(),\n      dateInputFormat: 'YYYY-MM-DD',\n      containerClass: 'theme-blue',\n      showWeekNumbers: false\n    };\n\n    this.genders = clone(GENDER);\n    this.marital_statuses = clone(MARITAL_STATUS);\n    this.social_security_types = clone(SOCIAL_SECURITY_TYPE);\n\n    this.error = '';\n    this.invalid_attributes = [];\n  }\n\n  /**\n   * @todo Implement validation for all profile fields\n   */\n  private __validate() {\n    return true;\n  }\n\n  private __sanitizeUpdate(profile) {\n\n    if (profile.permanent_address && profile.permanent_address.postcode) {\n      profile.permanent_address = this.profile.permanent_address;\n    } else {\n      profile.permanent_address = undefined;\n    }\n\n    if (profile.correspondence_address && profile.correspondence_address.postcode) {\n      profile.correspondence_address = this.profile.correspondence_address;\n    } else {\n      profile.correspondence_address = undefined;\n    }\n\n    if (profile.date_of_birth) {\n\n      const date_of_birth = new Date(profile.date_of_birth.toString());\n      profile.date_of_birth = {\n        day: date_of_birth.getDate(),\n        month: date_of_birth.getMonth() + 1,\n        year: date_of_birth.getFullYear()\n      };\n\n    } else {\n      profile.date_of_birth = undefined;\n    }\n\n    return profile;\n  }\n\n  ngOnInit() {\n\n    this.profileService.getProfile('profile1,profile2,profile3')\n      .then(profile => {\n\n        this.profile = clone(profile);\n        this.original_profile = clone(this.profile);\n\n        if (!this.profile.alternate_email_ids) {\n          this.profile.alternate_email_ids = new Array();\n        }\n\n        if (!this.profile.alternate_contact_numbers) {\n          this.profile.alternate_contact_numbers = new Array();\n        }\n\n        if (!this.profile.social_security) {\n          this.profile.social_security = new Array();\n        }\n\n        if (!this.profile.emergency_contacts) {\n          this.profile.emergency_contacts = new Array();\n        }\n\n        if (!this.profile.permanent_address) {\n          this.profile.permanent_address = new Address();\n        }\n\n        if (!this.profile.correspondence_address) {\n          this.profile.correspondence_address = new Address();\n        }\n\n        if (this.profile.date_of_birth) {\n\n          const date_of_birth = <DateOfBirth> this.profile.date_of_birth;\n          this.profile.date_of_birth = date_of_birth.year + '-' + date_of_birth.month + '-' + date_of_birth.day;\n          this.original_profile.date_of_birth = this.profile.date_of_birth;\n        }\n\n        this.maxSocialSecurityTypes = (this.profile.social_security.length === Object.keys(SOCIAL_SECURITY_TYPE).length);\n\n        this.alternate_email_ids = new Array();\n        for (const i of this.profile.alternate_email_ids) {\n          const emailId = new EmailId();\n          emailId.email_id = i;\n          this.alternate_email_ids.push(emailId);\n        }\n      });\n  }\n\n  public addEmailId() {\n\n    const emailId = new EmailId();\n    emailId.email_id = '';\n    this.alternate_email_ids.push(emailId);\n  }\n\n  public removeEmailId(index) {\n    this.alternate_email_ids.splice(index, 1);\n  }\n\n  public addContactNumber() {\n\n    const contactNumber = new ContactNumber();\n    contactNumber.isd_code = '+91';\n    contactNumber.contact_number = '';\n    this.profile.alternate_contact_numbers.push(contactNumber);\n  }\n\n  public removeContactNumber(index) {\n      this.profile.alternate_contact_numbers.splice(index, 1);\n  }\n\n  public addSocialSecurity() {\n\n    const socialSecurity = new SocialSecurity();\n    socialSecurity.type = '';\n    socialSecurity.number = '';\n    this.profile.social_security.push(socialSecurity);\n    this.maxSocialSecurityTypes = this.profile.social_security.length === Object.keys(MARITAL_STATUS).length;\n  }\n\n  public removeSocialSecurity(index) {\n\n    this.profile.social_security.splice(index, 1);\n    this.maxSocialSecurityTypes = this.profile.social_security.length === Object.keys(MARITAL_STATUS).length;\n  }\n\n  public addEmergencyContact() {\n\n    const emergencyContact = new EmergencyContact();\n    emergencyContact.name = '';\n    emergencyContact.relation = '';\n    emergencyContact.isd_code = '+91';\n    emergencyContact.contact_number = '';\n    this.profile.emergency_contacts.push(emergencyContact);\n  }\n\n  public removeEmergencyContact(index) {\n    this.profile.emergency_contacts.splice(index, 1);\n  }\n\n  public updateProfile() {\n\n    this.profile.alternate_email_ids = new Array();\n    for (const i of this.alternate_email_ids) {\n      if (i.email_id.length > 0) {\n        this.profile.alternate_email_ids.push(i.email_id);\n      }\n    }\n    this.profile.alternate_email_ids = Array.from(new Set(this.profile.alternate_email_ids));\n\n    const social_security = {};\n    for (const social of this.profile.social_security) {\n      if (social.type.length > 0 && social.number.length > 0) {\n        social.verified = false;\n        social_security[social.type] = social;\n      }\n    }\n\n    this.profile.social_security = new Array();\n    for (const key in social_security) {\n      if (social_security.hasOwnProperty(key)) {\n        this.profile.social_security.push(social_security[key]);\n      }\n    }\n\n    const emergency_contacts = new Array();\n    for (const contact of this.profile.emergency_contacts) {\n      if (contact.name.length > 0 && contact.relation.length > 0 && contact.contact_number.length > 0) {\n        emergency_contacts.push(contact);\n      }\n    }\n    this.profile.emergency_contacts = Array.from(new Set(emergency_contacts));\n\n    if (this.__validate()) {\n\n      let profile = Utility.compare(this.original_profile, this.profile);\n      if (profile !== undefined) {\n\n        profile = this.__sanitizeUpdate(profile);\n        this.error = '';\n        this.invalid_attributes = [];\n\n        this.profileService.updateProfile(profile).then(data => {\n\n            this.original_profile = clone(this.profile);\n            this.successModal.show('/dashboard');\n\n          }).catch(err => {\n\n            this.error = err.error.message.text;\n            if (err.error.invalid_attributes) {\n              for (const key in err.error.invalid_attributes) {\n                if (err.error.invalid_attributes.hasOwnProperty(key)) {\n                  this.invalid_attributes.push(error_map[key] ? error_map[key] : err.error.invalid_attributes[key]);\n                }\n              }\n            }\n            this.errorModal.show();\n          });\n      }\n    }\n  }\n}\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n\\n          <form #passwordForm=\\\"ngForm\\\">\\n\\n            <h2>Change Password</h2>\\n\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-2 col-form-label\\\">Current Password</label>\\n              <div class=\\\"col-4\\\">\\n                <input type=\\\"password\\\" name=\\\"current-password\\\" class=\\\"form-control\\\" id=\\\"current-password\\\" placeholder=\\\"Current Password\\\" [(ngModel)]=\\\"password.current_password\\\" #currentPassword=\\\"ngModel\\\" required minlength=\\\"3\\\">\\n                <app-inline-error [control]=\\\"currentPassword\\\"></app-inline-error>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-2 col-form-label\\\">New Password</label>\\n              <div class=\\\"col-4\\\">\\n                <input type=\\\"password\\\" name=\\\"new-password\\\" class=\\\"form-control\\\" id=\\\"new-password\\\" placeholder=\\\"New Password\\\" [(ngModel)]=\\\"password.new_password\\\" #newPassword=\\\"ngModel\\\" required minlength=\\\"3\\\" app-exactmatch=\\\"confirm-password\\\" app-exactmatch-text=\\\"New Password\\\" app-exactmatch-reverse=\\\"true\\\">\\n                <app-inline-error [control]=\\\"newPassword\\\"></app-inline-error>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-2 col-form-label\\\">Confirm Password</label>\\n              <div class=\\\"col-4\\\">\\n                <input type=\\\"password\\\" name=\\\"confirm-password\\\" class=\\\"form-control\\\" id=\\\"comfirm-password\\\" placeholder=\\\"Confirm Password\\\" [(ngModel)]=\\\"password.confirm_password\\\" #confirmPassword=\\\"ngModel\\\" required minlength=\\\"3\\\" app-exactmatch=\\\"new-password\\\" app-exactmatch-text=\\\"New Password\\\">\\n                <app-inline-error [control]=\\\"confirmPassword\\\"></app-inline-error>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row form-group mt-4\\\">\\n              <div class=\\\"offset-3 col-3 text-right\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-link pull-right\\\" routerLink=\\\"/dashboard\\\">Cancel</button>\\n                <button [disabled]=\\\"!passwordForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"changePassword()\\\">Change Password</button>\\n              </div>\\n            </div>\\n\\n          </form>\\n\\n          <div *ngIf=\\\"mfaAllowed\\\" class=\\\"mt-5\\\">\\n\\n            <h2>Two-factor authentication</h2>\\n            <p>Two-factor authentication adds an additional layer of security to your account by requiring more than just a password to log in.</p>\\n\\n            <ul class=\\\"list-group mb-3\\\">\\n              <li class=\\\"list-group-item list-group-item-secondary\\\">\\n                <b>Two-factor methods</b>\\n              </li>\\n              <li class=\\\"list-group-item\\\">\\n                Authenticator app\\n                <span class=\\\"pull-right\\\">\\n                  <div *ngIf=\\\"qrCode\\\">\\n                    <label class=\\\"col-form-label mr-3\\\">Configured</label>\\n                    <a class=\\\"btn btn-outline-dark\\\" [routerLink]=\\\"['/user/multi-factor/qr-code']\\\">Edit</a>\\n                  </div>\\n                  <div *ngIf=\\\"!qrCode\\\">\\n                    <a class=\\\"btn btn-outline-primary\\\" [routerLink]=\\\"['/user/multi-factor/qr-code']\\\">Configure</a>\\n                  </div>\\n                </span>\\n              </li>\\n              <li class=\\\"list-group-item\\\">\\n                Question & Answer\\n                <span class=\\\"pull-right\\\">\\n                  <div *ngIf=\\\"questionAnswer\\\">\\n                    <label class=\\\"col-form-label mr-3\\\">Configured</label>\\n                    <a class=\\\"btn btn-outline-dark\\\" [routerLink]=\\\"['/user/multi-factor/question-answer']\\\">Edit</a>\\n                  </div>\\n                  <div *ngIf=\\\"!questionAnswer\\\">\\n                    <a class=\\\"btn btn-outline-primary\\\" [routerLink]=\\\"['/user/multi-factor/question-answer']\\\">Configure</a>\\n                  </div>\\n                </span>\\n              </li>\\n            </ul>\\n            <ul class=\\\"list-group\\\" *ngIf=\\\"qrCode\\\">\\n              <li class=\\\"list-group-item list-group-item-secondary\\\">\\n                <b>Recovery options</b>\\n              </li>\\n              <li class=\\\"list-group-item\\\" *ngIf=\\\"qrCode\\\">\\n                Recovery codes\\n                <span class=\\\"pull-right\\\">\\n                  <a class=\\\"btn btn-outline-primary\\\" [routerLink]=\\\"['/user/multi-factor/recovery-codes']\\\">Show</a>\\n                </span>\\n              </li>\\n            </ul>\\n\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-success-modal #successModal title=\\\"Success!\\\">\\n  <div content>\\n    Password changed successfully.\\n  </div>\\n</app-success-modal>\\n\\n<app-error-modal #errorModal title=\\\"Error!\\\">\\n  <div content>\\n    <p>There was an error updating password. {{error}}</p>\\n    <ul>\\n      <li *ngFor=\\\"let attribute of invalid_attributes \\\">{{attribute}}</li>\\n    </ul>\\n  </div>\\n</app-error-modal>\"","import { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ProfileService } from '../profile/profile.service';\n\nimport { SuccessModalComponent } from 'shared/components/success-modal/success-modal.component';\nimport { ErrorModalComponent } from 'shared/components/error-modal/error-modal.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { Access } from 'core/providers/access.service';\nimport { MFA } from 'config/constants/user';\n\nclass ChangePassword {\n\n  current_password: string = '';\n  new_password: string = '';\n  confirm_password: string = '';\n}\n\nconst error_map = {\n};\n\n@Component({\n  selector: 'app-security',\n  templateUrl: 'security.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [ProfileService]\n})\nexport class SecurityComponent implements OnInit {\n  @ViewChild('successModal') successModal: SuccessModalComponent;\n  @ViewChild('errorModal') errorModal: ErrorModalComponent;\n\n  password: ChangePassword;\n  returnUrl: string;\n\n  error: string;\n  invalid_attributes: Array<string>;\n\n  qrCode: boolean = false;\n  questionAnswer: boolean = false;\n  securityKey: boolean = false;\n\n  mfaAllowed: boolean = false;\n\n  constructor(\n    private profileService: ProfileService,\n    private route: ActivatedRoute,\n    private access: Access\n  ) {\n\n    this.password = new ChangePassword();\n\n    this.error = '';\n    this.invalid_attributes = [];\n  }\n\n  async ngOnInit() {\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/dashboard';\n\n    this.mfaAllowed = await this.access.hasAccess({\n      module: 'user',\n      entity: 'mfa',\n      action: 'enable'\n    });\n\n    if (this.mfaAllowed) {\n\n      this.__loadMfa();\n    }\n  }\n\n  /**\n   * @todo Implement any and all necessary validations\n   */\n  private __validate() {\n    return true;\n  }\n\n  private __loadMfa() {\n\n    this.profileService.getProfile('mfa').then(data => {\n\n      if (data.mfa) {\n\n        for (const mfa of data.mfa) {\n\n          switch (mfa.mfa_type) {\n\n            case MFA.QR_CODE:\n              this.qrCode = true;\n              break;\n\n            case MFA.QUESTION_ANSWER:\n              this.questionAnswer = true;\n              break;\n          }\n        }\n      }\n\n    }).catch(err => {\n\n      this.error = err;\n      this.errorModal.show();\n    });\n  }\n\n  public changePassword() {\n\n    if (this.__validate()) {\n\n      const change_password = {\n        current_password: this.password.current_password,\n        new_password: this.password.new_password\n      };\n\n      this.profileService.changePassword(change_password).then(data => {\n\n        this.successModal.show(this.returnUrl);\n        sessionStorage.removeItem('restrict');\n        sessionStorage.removeItem('url');\n\n      }).catch(err => {\n\n        this.error = err.error.message.text;\n        if (err.error.invalid_attributes) {\n          for (const key in err.error.invalid_attributes) {\n            if (err.error.invalid_attributes.hasOwnProperty(key)) {\n              this.invalid_attributes.push(error_map[key] ? error_map[key] : err.error.invalid_attributes[key]);\n            }\n          }\n        }\n        this.errorModal.show();\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\nimport { UserRoutingModule } from './user.routing';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SecurityComponent } from './security/security.component';\nimport { ApplicationDirectivesModule } from 'modules/application-directives.module';\nimport { ApplicationPipesModule } from 'modules/application-pipes.module';\nimport { ApplicationComponentsModule } from 'modules/application-components.module';\nimport { ModalModule } from 'ngx-bootstrap';\n\n@NgModule({\n  imports: [\n    UserRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    CommonModule,\n    TabsModule,\n    BsDatepickerModule,\n    ModalModule,\n    ApplicationComponentsModule,\n    ApplicationDirectivesModule,\n    ApplicationPipesModule\n  ],\n  declarations: [\n    ProfileComponent,\n    SecurityComponent\n  ],\n  providers: [\n  ]\n})\nexport class UserModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfileComponent } from './profile/profile.component';\nimport { AuthenticationGuard } from 'core/services/authentication.service';\nimport { SecurityComponent } from './security/security.component';\nimport { AuthorizationGuard } from 'core/services/authorization.service';\n\nconst routes: Routes = [\n  {\n    path: 'profile',\n    canActivate: [AuthenticationGuard, AuthorizationGuard],\n    data: {\n      title: 'Profile',\n      access: {\n        module: 'user',\n        entity: 'profile',\n        action: 'update'\n      }\n    },\n    component: ProfileComponent\n  },\n  {\n    path: 'security',\n    canActivate: [AuthenticationGuard, AuthorizationGuard],\n    data: {\n      title: 'Security',\n      access: {\n        module: 'user',\n        entity: 'profile',\n        action: 'changepassword'\n      }\n    },\n    component: SecurityComponent\n  },\n  {\n    path: 'multi-factor',\n    loadChildren: './multi-factor/multi-factor.module#MultiFactorModule'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n"],"sourceRoot":""}