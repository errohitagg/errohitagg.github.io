{"version":3,"sources":["webpack:///./src/app/modules/employee/employee-access-control/employee-access-control.module.ts","webpack:///./src/app/modules/employee/employee-access-control/employee-access-control.routing.ts","webpack:///./src/app/modules/employee/employee-access-control/employee-access-control.service.ts","webpack:///./src/app/modules/employee/employee-access-control/manage-employee-access-control/manage-employee-access-control.component.html","webpack:///./src/app/modules/employee/employee-access-control/manage-employee-access-control/manage-employee-access-control.component.ts","webpack:///./src/app/modules/employee/employee.service.ts"],"names":[],"mappings":"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","file":"16.be5550fa59ae0781af7f.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { TreeviewModule } from 'ngx-treeview';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { EmployeeAccessControlRoutingModule } from './employee-access-control.routing';\nimport { ApplicationComponentsModule } from 'modules/application-components.module';\nimport { ApplicationPipesModule } from 'modules/application-pipes.module';\nimport { ApplicationDirectivesModule } from 'modules/application-directives.module';\nimport { ManageEmployeeAccessControlComponent } from './manage-employee-access-control/manage-employee-access-control.component';\n\n@NgModule({\n  imports: [\n    EmployeeAccessControlRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    CommonModule,\n    ApplicationComponentsModule,\n    ApplicationPipesModule,\n    ApplicationDirectivesModule,\n    TreeviewModule,\n    NgSelectModule\n  ],\n  declarations: [\n    ManageEmployeeAccessControlComponent\n  ],\n  providers: [\n  ]\n})\nexport class EmployeeAccessControlModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthenticationGuard } from 'core/services/authentication.service';\nimport { AuthorizationGuard } from 'core/services/authorization.service';\nimport { ManageEmployeeAccessControlComponent } from './manage-employee-access-control/manage-employee-access-control.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: {\n      title: 'Access Control'\n    },\n    children: [\n      {\n        path: 'edit/:id',\n        data: {\n          title: 'Update',\n          access: {\n            module: 'employee',\n            entity: 'access-control',\n            action: 'update'\n          }\n        },\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        component: ManageEmployeeAccessControlComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeeAccessControlRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Api } from 'core/services/api.service';\n\nexport class UserAccessControlAttribute {\n\n  model: string;\n  name?: string;\n  find: string[];\n  revoked_find: string[];\n  assigned_find: string[];\n  find_all: boolean;\n  update: string[];\n  revoked_update: string[];\n  assigned_update: string[];\n  update_all: boolean;\n}\n\nexport class UserAccessControlUpdateAttributes {\n\n  model: string;\n  revoked_find: string[];\n  assigned_find: string[];\n  find_all: boolean;\n  revoked_update: string[];\n  assigned_update: string[];\n  update_all: boolean;\n}\n\nexport class UserAccessControl {\n\n  _id: string;\n  user_id: string;\n  departments: string[];\n  access_controls: string[];\n  actions: string[];\n  revoked_actions: string[];\n  assigned_actions: string[];\n  attributes: UserAccessControlAttribute[];\n  user_access_control_status: number;\n}\n\nexport class UserAccessControlUpdate {\n\n  assigned_actions: string[];\n  revoked_actions: string[];\n  attributes: UserAccessControlUpdateAttributes[];\n}\n\n@Injectable()\nexport class EmployeeAccessControlService extends Api {\n\n  private _base_url = '/employees/accesscontrols';\n\n  getEmployeeAccessControl(id: string): Promise<UserAccessControl> {\n\n    return this.get(this._base_url + '/' + id)\n      .then(response => response as UserAccessControl);\n  }\n\n  patchAccessControl(user_id: string, user_access_control: UserAccessControlUpdate) {\n\n    return this.patch(this._base_url + '/' + user_id.toString(), user_access_control)\n      .then(response => response);\n  }\n}\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"offset-2 col-8\\\">\\n              <form #userAccessControlForm=\\\"ngForm\\\">\\n\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"name\\\" class=\\\"col-md-3 col-form-label\\\">Name</label>\\n                  <div class=\\\"col-md-9\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" [disabled]=\\\"true\\\" [(ngModel)]=\\\"user_details.name\\\" />\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"email-id\\\" class=\\\"col-md-3 col-form-label\\\">E-Mail ID</label>\\n                  <div class=\\\"col-md-9\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email-id\\\" placeholder=\\\"E-Mail ID\\\" name=\\\"email-id\\\" [disabled]=\\\"true\\\" [(ngModel)]=\\\"user_details.email_id\\\" />\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-md-3 col-form-label\\\">Entities</label>\\n\\n                  <div class=\\\"col-md-9\\\">\\n\\n                    <ngx-treeview [config]=\\\"entitiesConfig\\\" [items]=\\\"entityList\\\" (selectedChange)=\\\"selectedEntity($event)\\\">\\n                    </ngx-treeview>\\n\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-md-3 col-form-label\\\">Attributes</label>\\n\\n                  <div class=\\\"col-md-9\\\">\\n                    <ngx-treeview [config]=\\\"attributesConfig\\\" [items]=\\\"attributeList\\\" (selectedChange)=\\\"selectedAttribute($event)\\\">\\n                    </ngx-treeview>\\n                    <input type=\\\"hidden\\\" name=\\\"attributes\\\" [(ngModel)]=\\\"user_access_control.attributes\\\" #attributes=\\\"ngModel\\\" />\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-actions row\\\">\\n                  <div class=\\\"col-12 text-right\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"exatask.trackEvent('user-access-control', 'submit', user_access_control._id.toString()); submitUserAccessControl()\\\">Submit</button>\\n                    <button type=\\\"reset\\\" class=\\\"btn btn-link\\\" routerLink=\\\"/employee\\\" (click)=\\\"exatask.trackEvent('user-access-control', 'cancel', user_access_control._id.toString())\\\">Cancel</button>\\n                  </div>\\n                </div>\\n\\n              </form>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-success-modal #successModal title=\\\"Success!\\\">\\n  <div content>\\n    Update Access Control successfully.\\n  </div>\\n</app-success-modal>\\n\\n<app-error-modal #errorModal title=\\\"Error!\\\">\\n  <div content>\\n    There was an error&nbsp;updating the access control.\\n    <br>\\n    <p>Details: {{error}}</p>\\n  </div>\\n</app-error-modal>\"","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport {\n  EmployeeAccessControlService,\n  UserAccessControl, UserAccessControlAttribute, UserAccessControlUpdate\n} from 'modules/employee/employee-access-control/employee-access-control.service';\nimport { SuccessModalComponent } from 'shared/components/success-modal/success-modal.component';\nimport { ErrorModalComponent } from 'shared/components/error-modal/error-modal.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { TreeviewConfig, TreeviewItem } from 'ngx-treeview';\nimport {\n  AccessControl,\n  AccessControlAttribute,\n  AccessControlService\n} from '../../../access-control/access-control.service';\nimport { uniq, union, findIndex } from 'lodash';\nimport { User } from '../../../../core/providers/user.service';\nimport { EmployeeService } from '../../employee.service';\nimport { Name } from '../../../user/profile/profile.service';\nimport { ExaTask } from '../../../../core/providers/exatask.service';\n\n@Component({\n  selector: 'app-update-user-access-control',\n  templateUrl: './manage-employee-access-control.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [ EmployeeAccessControlService, AccessControlService, EmployeeService ]\n})\nexport class ManageEmployeeAccessControlComponent implements OnInit {\n  @ViewChild('successModal') successModal: SuccessModalComponent;\n  @ViewChild('errorModal') errorModal: ErrorModalComponent;\n  @ViewChild('userAccessControlForm') userAccessControlForm;\n\n  user_details: User;\n  access_controls: AccessControl[] = new Array();\n  user_access_control: UserAccessControl = new UserAccessControl();\n  user_access_control_update: UserAccessControlUpdate = new UserAccessControlUpdate();\n  user_id: string;\n  entityList: TreeviewItem[];\n  attributeList: TreeviewItem[];\n\n  inherited_actions: string[] = [];\n  inherited_attributes: AccessControlAttribute[] = [];\n  allowedAttributes: AccessControlAttribute[] = new Array<AccessControlAttribute>();\n\n  entitiesConfig: TreeviewConfig = {\n    hasAllCheckBox: false,\n    hasFilter: false,\n    hasDivider: false,\n    hasCollapseExpand: false,\n    decoupleChildFromParent: false,\n    maxHeight: 500\n  };\n\n  attributesConfig: TreeviewConfig = {\n    hasAllCheckBox: false,\n    hasFilter: false,\n    hasDivider: false,\n    hasCollapseExpand: false,\n    decoupleChildFromParent: false,\n    maxHeight: 500\n  };\n\n  error: string = '';\n\n  constructor(\n    private route: ActivatedRoute,\n    private userAccessControlService: EmployeeAccessControlService,\n    private accessControlService: AccessControlService,\n    private employeeService: EmployeeService,\n    private user: User,\n    public exatask: ExaTask\n  ) {\n\n    this.exatask.setTitle('Manage Employee ACL');\n    this.user_details = user;\n    if (this.route.snapshot.params.id) {\n      this.user_id = this.route.snapshot.params.id;\n    }\n  }\n\n  ngOnInit() {\n\n    this.__loadUserAccessControl();\n    this.__loadUser();\n  }\n\n  private __checked(action_id): boolean {\n    return this.user_access_control.actions.indexOf(action_id) !== -1 || this.inherited_actions.indexOf(action_id) !== -1;\n  }\n\n  private __disabled(action_id): boolean {\n    return this.inherited_actions.indexOf(action_id) !== -1;\n  }\n\n  private __getTreeviewItem(value, text, disabled?, checked?) {\n\n    checked = !!checked;\n    disabled = !!disabled;\n\n    return new TreeviewItem({\n      value: value,\n      text: text,\n      collapsed: true,\n      disabled: disabled,\n      checked: checked\n    });\n  }\n\n  private __prepareAttributeItem(type, data, attribute, model) {\n\n    let checked = false,\n      disabled = false;\n\n    if (data.default && data.default.indexOf(attribute.attribute) !== -1) {\n      checked = true;\n      disabled = true;\n    }\n\n    if (this.user_access_control.attributes.length !== 0) {\n\n      for (const attr of this.user_access_control.attributes) {\n        if (attr.model === model && (attr[type + '_all'] === true || attr[type].indexOf(attribute) !== -1)) {\n          checked = true;\n        }\n      }\n\n      for (const attr of this.inherited_attributes) {\n        if (attr.model === model && (attr[type + '_all'] === true || attr[type].indexOf(attribute) !== -1)) {\n          checked = true;\n          disabled = true;\n        }\n      }\n    }\n\n    const treeitem_value = model + '--' + type + '--' + attribute.attribute;\n    return this.__getTreeviewItem(treeitem_value, attribute.name, disabled, checked);\n  }\n\n  private __loadUser() {\n\n    this.employeeService.getEmployeeDetails(this.user_id)\n      .then(user => {\n\n        this.user_details = user;\n        this.user_details.name = Name.getFullName(user.name);\n        this.exatask.setTitle('Manage Employee ACL : ' + this.user_details.name);\n      });\n  }\n\n  private __prepareAttributes(attributes) {\n\n    attributes.forEach((attribute, index) => {\n\n      if (attribute.assigned_find) {\n        if (!attribute.assigned_find || attribute.assigned_find.length === 0) {\n          delete attribute.assigned_find;\n        }\n      }\n\n      if (attribute.assigned_update) {\n        if (!attribute.assigned_update || attribute.assigned_update.length === 0) {\n          delete attribute.assigned_update;\n        }\n      }\n\n      if (!attribute.assigned_find && !attribute.assigned_update) {\n        delete attributes[index];\n      }\n    });\n\n    attributes = attributes.filter(attribute => {\n      return !!attribute;\n    });\n\n    return attributes;\n  }\n\n  private __loadUserAccessControl() {\n\n    const dataPromises = [],\n      self = this;\n    let dataPromise;\n\n    this.userAccessControlService.getEmployeeAccessControl(this.user_id)\n      .then(user_access_control => {\n\n        self.user_access_control = user_access_control;\n        for (const access_control_id of self.user_access_control.access_controls) {\n\n          dataPromise = self.accessControlService.getAccessControl(access_control_id)\n            .then(access_control => {\n\n              self.inherited_actions = union(self.inherited_actions, access_control.actions);\n              self.inherited_attributes = union(self.inherited_attributes, access_control.attributes);\n              self.access_controls.push(access_control);\n            });\n          dataPromises.push(dataPromise);\n        }\n\n        Promise.all(dataPromises).then(response => {\n\n          self.inherited_actions = uniq(this.inherited_actions);\n          const preparedInheritedAttributes = {};\n\n          for (const attribute of self.inherited_attributes) {\n\n            if (!preparedInheritedAttributes[attribute.model]) {\n              preparedInheritedAttributes[attribute.model] = new AccessControlAttribute();\n              preparedInheritedAttributes[attribute.model].model = attribute.model;\n            }\n\n            preparedInheritedAttributes[attribute.model].find =\n              union(preparedInheritedAttributes[attribute.model].find, attribute.find);\n            preparedInheritedAttributes[attribute.model].update =\n              union(preparedInheritedAttributes[attribute.model].update, attribute.update);\n            if (attribute.find_all) {\n              preparedInheritedAttributes[attribute.model].find_all = attribute.find_all;\n            }\n            if (attribute.update_all) {\n              preparedInheritedAttributes[attribute.model].update_all = attribute.update_all;\n            }\n          }\n\n          self.inherited_attributes = [];\n          for (const attribute in preparedInheritedAttributes) {\n            if (preparedInheritedAttributes.hasOwnProperty(attribute)) {\n              preparedInheritedAttributes[attribute].find = uniq(preparedInheritedAttributes[attribute].find);\n              preparedInheritedAttributes[attribute].update = uniq(preparedInheritedAttributes[attribute].update);\n              self.inherited_attributes.push(preparedInheritedAttributes[attribute]);\n            }\n          }\n\n          this.__loadEntities();\n          this.__loadAttributes();\n        });\n      });\n  }\n\n  private __loadEntities() {\n\n    this.accessControlService.getEntities()\n      .then(response => {\n\n        const entityList = new Array<TreeviewItem>();\n\n        for (const module of response) {\n\n          let module_disabled = true;\n          const tree_entities = new Array<TreeviewItem>();\n          for (const entity of module.entities) {\n\n            let entity_disabled = true;\n            const tree_actions = new Array<TreeviewItem>();\n            for (const action of entity.actions) {\n\n              const action_disabled = this.__disabled(action.action_id);\n              tree_actions.push(this.__getTreeviewItem(action.action_id, action.title,\n                action_disabled, this.__checked(action.action_id)));\n              entity_disabled = entity_disabled && action_disabled;\n            }\n\n            const entity_tree_item = this.__getTreeviewItem(entity._id, entity.entity, entity_disabled, true);\n            entity_tree_item.children = tree_actions;\n            tree_entities.push(entity_tree_item);\n            module_disabled = module_disabled && entity_disabled;\n          }\n\n          const module_tree_item = this.__getTreeviewItem(module.module_code, module.module, module_disabled, true);\n          module_tree_item.children = tree_entities;\n          entityList.push(module_tree_item);\n        }\n\n        this.entityList = entityList;\n\n      }).catch(err => {\n\n      this.error = err.error.message.text;\n      this.errorModal.show();\n    });\n  }\n\n  private __loadAttributes() {\n\n    this.accessControlService.getAttributes()\n      .then(response => {\n\n        const attributeList = new Array<TreeviewItem>();\n        let findAttribute, updateAttribute;\n\n        for (const row of response) {\n\n          const allowedAttributeDetails = {\n            model: row.model,\n            find: [],\n            update: []\n          };\n          const newAttributeChildren = [];\n          let rowDisabled = true;\n\n          if (row.find) {\n\n            let findDisabled = true;\n            const findAttributeChildren = [];\n            for (const attribute of row.attributes) {\n\n              const attributeItem = this.__prepareAttributeItem('find', row.find, attribute, row.model);\n              findAttributeChildren.push(attributeItem);\n              findDisabled = findDisabled && attributeItem.disabled;\n              if ((row.find.default && row.find.default.indexOf(attribute.attribute) === -1) ||\n                (row.find.blocked && row.find.blocked.indexOf(attribute.attribute) === -1) && !attributeItem.disabled) {\n                allowedAttributeDetails.find.push(attribute.attribute);\n              }\n            }\n\n            rowDisabled = rowDisabled && findDisabled;\n            findAttribute = this.__getTreeviewItem(row.model + '--find', 'Retrieve', findDisabled, true);\n            newAttributeChildren.push(findAttribute);\n            findAttribute.children = findAttributeChildren;\n          }\n\n          if (row.update) {\n\n            let updateDisabled = true;\n            const updateAttributeChildren = [];\n            for (const attribute of row.attributes) {\n\n              const attributeItem = this.__prepareAttributeItem('update', row.update, attribute, row.model);\n              updateAttributeChildren.push(attributeItem);\n              updateDisabled = updateDisabled && attributeItem.disabled;\n              if ((row.update.default && row.update.default.indexOf(attribute.attribute) === -1) ||\n                (row.update.blocked && row.update.blocked.indexOf(attribute.attribute) === -1) && !attributeItem.disabled) {\n                allowedAttributeDetails.update.push(attribute.attribute);\n              }\n            }\n\n            rowDisabled = rowDisabled && updateDisabled;\n            updateAttribute = this.__getTreeviewItem(row.model + '--update', 'Update', updateDisabled, true);\n            newAttributeChildren.push(updateAttribute);\n            updateAttribute.children = updateAttributeChildren;\n          }\n\n          const newAttribute = this.__getTreeviewItem(row.model, row.name, rowDisabled, true);\n          newAttribute.children = newAttributeChildren;\n          attributeList.push(newAttribute);\n          this.allowedAttributes.push(allowedAttributeDetails);\n        }\n\n        this.attributeList = attributeList;\n\n      }).catch(err => {\n\n      this.error = err.error.message.text;\n      this.errorModal.show();\n    });\n  }\n\n  selectedEntity(event) {\n\n    const self = this;\n    self.user_access_control_update.assigned_actions = [];\n    event.map(entity => {\n\n      if (self.inherited_actions.indexOf(entity) === -1) {\n        self.user_access_control_update.assigned_actions.push(entity);\n        self.user_access_control_update.assigned_actions = uniq(self.user_access_control_update.assigned_actions);\n      }\n    });\n  }\n\n  selectedAttribute(event) {\n\n    const self = this;\n    self.user_access_control_update.attributes = [];\n\n    event.map(attribute => {\n\n      const attributeComponents = attribute.split('--');\n      const model = attributeComponents[0],\n        operation = attributeComponents[1],\n        attr = attributeComponents[2];\n\n      let index = findIndex(self.user_access_control_update.attributes, ['model', model]);\n      const attribute_index = findIndex(self.allowedAttributes, ['model', model]);\n\n      if (index === -1) {\n\n        self.user_access_control_update.attributes.push({\n          model: model,\n          find_all: false,\n          assigned_find: [],\n          revoked_find: [],\n          update_all: false,\n          assigned_update: [],\n          revoked_update: []\n        });\n        index = self.user_access_control_update.attributes.length - 1;\n      }\n\n      const allowed_attribute = self.allowedAttributes[attribute_index][operation];\n      if (allowed_attribute.indexOf(attr) !== -1) {\n        self.user_access_control_update.attributes[index]['assigned_' + operation].push(attr);\n      }\n\n      if (allowed_attribute.length > 0 &&\n        allowed_attribute.length === self.user_access_control_update.attributes[index]['assigned_' + operation].length) {\n        self.user_access_control_update.attributes[index][operation + '_all'] = true;\n      }\n    });\n  }\n\n  submitUserAccessControl() {\n\n    this.error = '';\n\n    this.user_access_control_update.attributes = this.__prepareAttributes(this.user_access_control_update.attributes);\n\n    this.userAccessControlService.patchAccessControl(this.user_id, this.user_access_control_update)\n      .then(response => {\n\n        this.successModal.show('/employee');\n\n      }).catch(err => {\n\n      this.error = err.error.message.text;\n      this.errorModal.show();\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Api } from 'core/services/api.service';\nimport {\n  Name,\n  ContactNumber,\n  SocialSecurity,\n  EmergencyContact,\n  Qualification\n} from 'modules/user/profile/profile.service';\nimport { Department } from 'modules/organization/department/department.service';\nimport { Address } from 'shared/components/address/address.component';\nimport { clone } from 'lodash';\n\nexport class UserReference {\n\n  supervisor_id: string;\n  name: string;\n}\n\nexport class Employee {\n\n  _id: string;\n  name: Name = new Name();\n  email_id: string = '';\n  employee_id: string;\n  employee_type: number;\n  department: string;\n  designation: string;\n  supervisor: string;\n  user_status: number;\n  is_supervisor?: boolean;\n  is_chief_executive?: boolean;\n  is_super_admin: boolean;\n}\n\nexport class EmployeeList {\n\n  _id: string;\n  name: Name = new Name();\n  email_id: string = '';\n  employee_id: string;\n  employee_type: number;\n  department?: Department;\n  designation: string;\n  supervisor?: UserReference;\n  user_status: number;\n  is_supervisor?: boolean;\n  is_chief_executive?: boolean;\n  is_super_admin?: boolean;\n}\n\nexport class Leave {\n\n  leave_type: string;\n  leaves: number;\n}\n\nexport class EmployeeDetails {\n\n  _id: string;\n  name: Name;\n  full_name: string;\n  employee_type: number;\n  email_id: string;\n  employee_id: string;\n  profile_picture: string;\n  department?: Department;\n  designation: string;\n  supervisor?: UserReference;\n  user_status: number;\n  is_supervisor?: boolean;\n  is_chief_executive?: boolean;\n  is_super_admin?: boolean;\n  contact_number?: string;\n  isd_code?: string;\n  date_of_birth?: string;\n  date_of_joining?: string;\n  last_login?: string;\n  timezone?: string;\n  added_by?: UserReference;\n  gender?: string;\n  marital_status?: string;\n  permanent_address?: Address;\n  correspondence_address?: Address;\n  alternate_email_ids?: Array<String>;\n  alternate_contact_numbers?: Array<ContactNumber>;\n  social_security?: Array<SocialSecurity>;\n  emergency_contacts?: Array<EmergencyContact>;\n  qualification?: Array<Qualification>;\n  leaves?: Array<Leave>;\n}\n\n@Injectable()\nexport class EmployeeService extends Api {\n\n  private _base_url = '/employees';\n  private _file_url = '/files';\n\n  getEmployees(\n    query: Map<string, any>,\n    page?: number,\n    limit?: number,\n    fields?: Array<string>\n  ): Promise<{ count: number, users: EmployeeList[] }> {\n\n    if (!query) {\n      query = new Map<string, any>();\n    }\n    if (page > 0) {\n      query.set('page', page);\n    }\n    if (limit > 0) {\n      query.set('limit', limit);\n    }\n    if (fields) {\n      query.set('fields', fields.join(','));\n    }\n\n    return this.get(this._base_url, query)\n      .then(response => {\n        return {\n          count: response['count'],\n          users: response['data'] as EmployeeList[]\n        };\n      });\n  }\n\n  postEmployee(user: any) {\n\n    return this.post(this._base_url, user)\n      .then(response => response);\n  }\n\n  putEmployee(id: string, user: any) {\n\n    return this.put(this._base_url + '/' + id, user)\n      .then(response => response);\n  }\n\n  getEmployeeDetails(id: string) {\n\n    return this.get(this._base_url + '/' + id)\n      .then(response => response);\n  }\n\n  markAsSupervisor(employee_id: string) {\n\n    return this.patch(this._base_url + '/supervisors/' + employee_id)\n      .then(response => response);\n  }\n\n  unmarkAsSupervisor(employee_id: string) {\n\n    return this.delete(this._base_url + '/supervisors/' + employee_id)\n      .then(response => response);\n  }\n\n  markAsChiefExecutive(employee_id: string) {\n\n    return this.patch(this._base_url + '/chiefexecutives/' + employee_id)\n      .then(response => response);\n  }\n\n  unmarkAsChiefExecutive(employee_id: string) {\n\n    return this.delete(this._base_url + '/chiefexecutives/' + employee_id)\n      .then(response => response);\n  }\n\n  markAsSuperAdmin(employee_id: string) {\n\n    return this.patch(this._base_url + '/superadmins/' + employee_id)\n      .then(response => response);\n  }\n\n  unmarkAsSuperAdmin(employee_id: string) {\n\n    return this.delete(this._base_url + '/superadmins/' + employee_id)\n      .then(response => response);\n  }\n\n  resetPassword(user_id: string) {\n\n    return this.patch(this._base_url + '/reset/' + user_id)\n      .then(response => response);\n  }\n\n  uploadBulkEmployee(file: File) {\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const query_params = new Map<string, any>();\n    query_params.set('type', 'bulk_employee');\n\n    let headers = clone(this.headers);\n    headers = headers.delete('Content-Type');\n    const config = new Map<string, any>();\n    config.set('headers', headers);\n\n    return this.post(this._file_url + '/upload', formData, query_params, config)\n      .then(response => {\n\n        const body = {\n          file: response.file\n        };\n\n        return this.post(this._file_url + '/parse', body, query_params)\n          .then(data => data);\n      });\n  }\n\n  exportEmployees(query?: Map<string, any>, fields?: Array<string>) {\n\n    if (!query) {\n      query = new Map<string, any>();\n    }\n    if (fields) {\n      query.set('fields', fields.join(','));\n    }\n    query.set('export', 1);\n\n    return this.get(this._base_url, query)\n      .then(data => data);\n  }\n}\n"],"sourceRoot":""}