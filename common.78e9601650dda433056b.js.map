{"version":3,"sources":["webpack:///./src/app/config/constants/access-control.ts","webpack:///./src/app/config/constants/compensatory-off.ts","webpack:///./src/app/config/constants/leave.ts","webpack:///./src/app/modules/access-control/access-control.service.ts","webpack:///./src/app/modules/employee/employee.service.ts","webpack:///./src/app/modules/leave/policy/leave-policy.service.ts"],"names":[],"mappings":"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","file":"common.78e9601650dda433056b.js","sourcesContent":["export enum STATUS {\n  INACTIVE, ACTIVE\n};\n\nexport enum TYPE {\n  LOCKED_ENTITY = 1, CUSTOM, LOCKED_USER\n};\n\nexport enum OPERATION {\n  CREATE = 1,\n  UPDATE\n};\n","export enum STATUS {\n\n  APPLIED = 1,\n  APPROVED, REJECTED, DELETED\n};\n\nexport enum EXPIRY {\n\n  NEVER = 1,\n  POLICY_END, AFTER_MONTH, AFTER_DAY\n};\n","export enum TYPE {\n  EL = 'EL',\n  CL = 'CL',\n  SL = 'SL',\n  ML = 'ML',\n  PL = 'PL',\n  LWP = 'LWP',\n  COMP = 'COMP'\n};\n\nexport enum DURATION {\n  FULL_DAY = 1,\n  FIRST_HALF, SECOND_HALF\n};\n\nexport enum STATUS {\n  APPLIED = 1,\n  APPROVED, REJECTED, DELETED\n};\n\nexport enum OPERATION {\n  APPLIED = 1,\n  APPROVED, REJECTED, DELETED\n};\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Api } from 'core/services/api.service';\nimport { TYPE } from 'config/constants/access-control';\n\nclass AccessControlDetailUser {\n\n  user_id: string;\n  name: string;\n}\n\nclass AccessControlDetailEntityAction {\n\n  action: string;\n  method: string;\n  title: string;\n}\n\nclass AccessControlDetailEntity {\n\n  entity_id: string;\n  title: string;\n  actions: AccessControlDetailEntityAction[] = new Array<AccessControlDetailEntityAction>();\n}\n\nclass Actions {\n\n  title: string;\n  action: string;\n  method: string;\n  access_type: number\n}\n\nexport class Entity {\n\n  entity_id: string = '';\n  actions: string[] = new Array<string>();\n}\n\nexport class Entities {\n\n  _id: string;\n  title: string;\n  description: string;\n  module: string;\n  entity: string;\n  feature: string;\n  url: string;\n  entity_type: number;\n  actions: Actions[];\n};\n\nexport class AccessControl {\n\n  _id: string;\n  title: string = '';\n  description: string;\n  access_control_type: number;\n  entities: Entity[] = new Array<Entity>();\n  users: string[] = new Array<string>();\n  access_control_status: number;\n}\n\nexport class AccessControlDetail {\n\n  _id: string;\n  title: string = '';\n  description: string;\n  organization_id: string;\n  access_control_type: number;\n  entities: AccessControlDetailEntity[] = new Array<AccessControlDetailEntity>();\n  users: AccessControlDetailUser[] = new Array<AccessControlDetailUser>();\n  access_control_status: number;\n}\n\n@Injectable()\nexport class AccessControlService extends Api {\n\n  private _base_url = '/accesscontrols';\n  private _entities_base_url = '/entities';\n\n  constructor(http: HttpClient) {\n    super(http);\n  }\n\n  getEntities(): Promise<Entities[]> {\n\n    return this.get(this._entities_base_url)\n      .then(response => {\n        return response['data'] as Entities[];\n      });\n  }\n\n  getFeatureEntities(): Promise<Entities[]> {\n\n    return this.get(this._entities_base_url + '/features')\n      .then(response => {\n        return response['data'] as Entities[];\n      });\n  }\n\n  getAccessControls(page, limit): Promise<{ count: number, access_controls: AccessControl[] }> {\n\n    const query = new Map<string, any>();\n    if (page > 0) {\n      query.set('page', page);\n    }\n    if (limit > 0) {\n      query.set('limit', limit);\n    }\n\n    return this.get(this._base_url, query)\n      .then(response => {\n        return {\n          count: response['count'],\n          access_controls: response['data'] as AccessControl[]\n        }\n      });\n  }\n\n  getAccessControl(id: string): Promise<AccessControlDetail> {\n\n    return this.get(this._base_url + '/' + id)\n      .then(response => response as AccessControlDetail);\n  }\n\n  postAccessControl(access_control: any) {\n\n    return this.post(this._base_url, access_control)\n      .then(response => response);\n  }\n\n  putAccessControl(access_control: AccessControl) {\n\n    const updateData = new AccessControl();\n    updateData.title = access_control.title;\n    updateData.description = access_control.description;\n\n    if (access_control.access_control_type !== TYPE.LOCKED_ENTITY) {\n      updateData.entities = access_control.entities;\n    } else {\n      delete updateData.entities;\n    }\n\n    if (access_control.access_control_type !== TYPE.LOCKED_USER) {\n      updateData.users = access_control.users;\n    } else {\n      delete updateData.users;\n    }\n\n    return this.put(this._base_url + '/' + access_control._id.toString(), updateData)\n      .then(response => response);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Api } from 'core/services/api.service';\nimport { Name } from 'modules/user/profile/profile.service';\nimport { Department } from 'modules/organization/department/department.service';\n\nexport class Supervisor {\n\n  supervisor_id: string;\n  name: string;\n}\n\nexport class Employee {\n\n  _id: string;\n  name: Name = new Name();\n  email_id: string = '';\n  employee_id: string;\n  department_id: string;\n  designation: string;\n  supervisor_id: string;\n  user_status: number;\n  department?: Department;\n  supervisor?: Supervisor;\n  is_supervisor?: boolean;\n}\n\n@Injectable()\nexport class EmployeeService extends Api {\n\n  private _base_url = '/employees';\n\n  constructor(http: HttpClient) {\n    super(http);\n  }\n\n  getEmployees(\n    query: Map<string, any>,\n    page?: number,\n    limit?: number,\n    fields?: Array<string>\n  ): Promise<{ count: number, users: Employee[] }> {\n\n    if (!query) {\n      query = new Map<string, any>();\n    }\n    if (page > 0) {\n      query.set('page', page);\n    }\n    if (limit > 0) {\n      query.set('limit', limit);\n    }\n    if (fields) {\n      query.set('fields', fields.join(','));\n    }\n\n    return this.get(this._base_url, query)\n      .then(response => {\n        return {\n          count: response['count'],\n          users: response['data'] as Employee[]\n        }\n      });\n  }\n\n  postEmployee(user: any) {\n\n    return this.post(this._base_url, user)\n      .then(response => response);\n  }\n\n  markAsSupervisor(employee_id: string) {\n\n    return this.patch(this._base_url + '/supervisors/mark/' + employee_id)\n      .then(response => response);\n  }\n\n  unmarkAsSupervisor(employee_id: string) {\n\n    return this.patch(this._base_url + '/supervisors/unmark/' + employee_id)\n      .then(response => response);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { TYPE } from 'config/constants/leave';\nimport { ALLOCATION, STATUS } from 'config/constants/leave-policy';\nimport { Api } from 'core/services/api.service';\nimport { EXPIRY } from 'config/constants/compensatory-off';\n\nexport class LeaveApproval {\n\n  required: boolean = false;\n  from_supervisor: boolean = false;\n  users: string[];\n}\n\nexport class CompensatoryOffExpiry {\n\n  type: EXPIRY;\n  count?: number;\n}\n\nexport class CompensatoryOffApproval {\n\n  from_supervisor: boolean = false;\n  users: string[];\n}\n\nexport class CompensatoryOff {\n\n  expiry: CompensatoryOffExpiry;\n  approval: CompensatoryOffApproval;\n\n  constructor() {\n\n    this.expiry = new CompensatoryOffExpiry();\n    this.approval = new CompensatoryOffApproval();\n  }\n}\n\nexport class Leave {\n\n  leave_type: TYPE;\n  count: number;\n  carry_forward: boolean = false;\n  maximum_count: number;\n  loaned_count: number;\n  sandwich: boolean = false;\n  allocation: ALLOCATION;\n\n  compensatory_off?: CompensatoryOff;\n}\n\nexport class LeavePolicy {\n\n  _id: string;\n  organization_id: string;\n  start_date: Date;\n  end_date: Date;\n  allowed_back_days: number;\n  approval: LeaveApproval = new LeaveApproval();\n  leaves: Leave[];\n  reiterate: boolean = false;\n  leave_policy_status: STATUS;\n\n  constructor() {\n\n    this.leaves = [];\n    this.leaves.push(new Leave());\n  }\n\n  addLeave() {\n\n    this.leaves.push(new Leave());\n  }\n\n  removeLeave(index) {\n\n    this.leaves.splice(index, 1);\n  }\n}\n\nexport class LeavePolicyElement extends LeavePolicy {\n\n  _id: string;\n  organization_id: string;\n  start_date: Date;\n  end_date: Date;\n  leaves: Leave[];\n  reiterate: boolean = false;\n  leave_policy_status: STATUS;\n  leave_type: TYPE;\n  count: number;\n  carry_forward: boolean = false;\n  maximum_count: number;\n  loaned_count: number;\n  sandwich: boolean = false;\n  allowed_back_days: number;\n  allocation: ALLOCATION;\n  approval: LeaveApproval = new LeaveApproval();\n}\n\n@Injectable()\nexport class LeavePolicyService extends Api {\n\n  private _base_url: string = '/leaves/policies';\n\n  constructor(http: HttpClient) {\n\n    super(http);\n  }\n\n  getPolicy(filters?: Map<string, string>): Promise<LeavePolicyElement[]> {\n\n    return this.get(this._base_url, filters)\n      .then(response => response['data'] as LeavePolicyElement[]);\n  }\n\n  postPolicy(policy: LeavePolicy): Promise<Object> {\n\n    return this.post(this._base_url, policy)\n      .then(response => response);\n  }\n\n  putPolicy(policy: LeavePolicy) {\n\n    return this.put(this._base_url + '/' + policy._id, policy)\n      .then(response => response);\n  }\n}\n"],"sourceRoot":""}