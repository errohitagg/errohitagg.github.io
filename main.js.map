{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/core/404/404.component.html","webpack:///./src/app/core/404/404.component.ts","webpack:///./src/app/core/500/500.component.html","webpack:///./src/app/core/500/500.component.ts","webpack:///./src/app/core/services/analytics/google.service.ts","webpack:///./src/app/core/services/api.service.ts","webpack:///./src/app/core/services/app-http.service.ts","webpack:///./src/app/core/services/authentication.service.ts","webpack:///./src/app/core/services/authorization.service.ts","webpack:///./src/app/core/services/otp.service.ts","webpack:///./src/app/layouts/full-layout.component.html","webpack:///./src/app/layouts/full-layout.component.ts","webpack:///./src/app/layouts/full-layout.navigation.ts","webpack:///./src/app/modules/core/forgot-password/forgot-password.component.html","webpack:///./src/app/modules/core/forgot-password/forgot-password.component.ts","webpack:///./src/app/modules/core/login/login.component.html","webpack:///./src/app/modules/core/login/login.component.ts","webpack:///./src/app/modules/core/logout/logout.component.html","webpack:///./src/app/modules/core/logout/logout.component.ts","webpack:///./src/app/modules/core/register/register.component.html","webpack:///./src/app/modules/core/register/register.component.ts","webpack:///./src/app/modules/core/reset-password/reset-password.component.html","webpack:///./src/app/modules/core/reset-password/reset-password.component.ts","webpack:///./src/app/modules/core/set-password/set-password.component.html","webpack:///./src/app/modules/core/set-password/set-password.component.ts","webpack:///./src/app/modules/organization/organization.service.ts","webpack:///./src/app/modules/user/profile/profile.service.ts","webpack:///./src/app/modules/user/user.service.ts","webpack:///./src/app/shared/helpers/utility.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./access-control/access-control.module\": [\n\t\t\"./src/app/modules/access-control/access-control.module.ts\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~5a147644\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~f90f94eb\",\n\t\t\"default~access-control-access-control-module~leave-leave-module~policy-leave-policy-module~user-user~46dc3552\",\n\t\t\"common\",\n\t\t\"access-control-access-control-module\"\n\t],\n\t\"./comp-off/comp-off.module\": [\n\t\t\"./src/app/modules/leave/comp-off/comp-off.module.ts\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~5a147644\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~f90f94eb\",\n\t\t\"common\",\n\t\t\"comp-off-comp-off-module\"\n\t],\n\t\"./department/department.module\": [\n\t\t\"./src/app/modules/organization/department/department.module.ts\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~5a147644\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~f90f94eb\",\n\t\t\"default~department-department-module~employee-employee-module~modules-application-module\",\n\t\t\"common\",\n\t\t\"department-department-module\"\n\t],\n\t\"./employee/employee.module\": [\n\t\t\"./src/app/modules/employee/employee.module.ts\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~5a147644\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~f90f94eb\",\n\t\t\"default~department-department-module~employee-employee-module~modules-application-module\",\n\t\t\"common\",\n\t\t\"employee-employee-module\"\n\t],\n\t\"./holiday/holiday.module\": [\n\t\t\"./src/app/modules/organization/holiday/holiday.module.ts\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~5a147644\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~f90f94eb\",\n\t\t\"common\",\n\t\t\"holiday-holiday-module\"\n\t],\n\t\"./leave/leave.module\": [\n\t\t\"./src/app/modules/leave/leave.module.ts\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~5a147644\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~f90f94eb\",\n\t\t\"default~access-control-access-control-module~leave-leave-module~policy-leave-policy-module~user-user~46dc3552\",\n\t\t\"common\",\n\t\t\"leave-leave-module\"\n\t],\n\t\"./modules/application.module\": [\n\t\t\"./src/app/modules/application.module.ts\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~5a147644\",\n\t\t\"default~department-department-module~employee-employee-module~modules-application-module\",\n\t\t\"common\",\n\t\t\"modules-application-module\"\n\t],\n\t\"./organization/organization.module\": [\n\t\t\"./src/app/modules/organization/organization.module.ts\",\n\t\t\"organization-organization-module\"\n\t],\n\t\"./policy/leave-policy.module\": [\n\t\t\"./src/app/modules/leave/policy/leave-policy.module.ts\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~5a147644\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~f90f94eb\",\n\t\t\"default~access-control-access-control-module~leave-leave-module~policy-leave-policy-module~user-user~46dc3552\",\n\t\t\"common\",\n\t\t\"policy-leave-policy-module\"\n\t],\n\t\"./setting/setting.module\": [\n\t\t\"./src/app/modules/organization/setting/setting.module.ts\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~5a147644\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~f90f94eb\",\n\t\t\"common\",\n\t\t\"setting-setting-module\"\n\t],\n\t\"./user/user.module\": [\n\t\t\"./src/app/modules/user/user.module.ts\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~5a147644\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~f90f94eb\",\n\t\t\"default~access-control-access-control-module~leave-leave-module~policy-leave-policy-module~user-user~46dc3552\",\n\t\t\"common\",\n\t\t\"user-user-module\"\n\t],\n\t\"./work-from-home/work-from-home.module\": [\n\t\t\"./src/app/modules/work-from-home/work-from-home.module.ts\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~5a147644\",\n\t\t\"common\",\n\t\t\"work-from-home-work-from-home-module\"\n\t],\n\t\"modules/work-from-home/policy/wfh-policy.module\": [\n\t\t\"./src/app/modules/work-from-home/policy/wfh-policy.module.ts\",\n\t\t\"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~5a147644\",\n\t\t\"common\",\n\t\t\"modules-work-from-home-policy-wfh-policy-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Google } from 'core/services/analytics/google.service';\n\n@Component({\n  // tslint:disable-next-line\n  selector: 'body',\n  template: '<router-outlet></router-outlet>',\n  providers: [Google]\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private router: Router, private analytics: Google) { }\n\n  ngOnInit() {\n\n    this.router.events.subscribe(event => {\n\n      if (event instanceof NavigationEnd) {\n\n        window.scrollTo(0, 0);\n        this.analytics.pageview(event.urlAfterRedirects);\n      }\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PerfectScrollbarModule, PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport { AppAsideModule, AppBreadcrumbModule, AppHeaderModule, AppFooterModule, AppSidebarModule, } from '@coreui/angular';\n\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { TreeviewModule } from 'ngx-treeview';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing';\n\nimport { ProfileService } from 'modules/user/profile/profile.service';\nimport { AuthenticationGuard } from 'core/services/authentication.service';\nimport { Authorization, AuthorizationGuard } from 'core/services/authorization.service';\n\n// Layouts\nimport { FullLayoutComponent } from './layouts/full-layout.component';\nimport { LoginComponent } from 'modules/core/login/login.component';\nimport { LogoutComponent } from 'modules/core/logout/logout.component';\nimport { RegisterComponent } from 'modules/core/register/register.component';\nimport { ForgotPasswordComponent } from 'modules/core/forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from 'modules/core/reset-password/reset-password.component';\nimport { SetPasswordComponent } from 'modules/core/set-password/set-password.component';\nimport { P404Component } from './core/404/404.component';\nimport { P500Component } from './core/500/500.component';\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true\n};\n\n@NgModule({\n    imports: [\n      BrowserModule,\n      AppRoutingModule,\n      FormsModule,\n      HttpClientModule,\n      AppAsideModule,\n      AppBreadcrumbModule.forRoot(),\n      AppFooterModule,\n      AppHeaderModule,\n      AppSidebarModule,\n      PerfectScrollbarModule,\n      BsDropdownModule.forRoot(),\n      TabsModule.forRoot(),\n      BsDatepickerModule.forRoot(),\n      TooltipModule.forRoot(),\n      TreeviewModule.forRoot(),\n      NgSelectModule\n    ],\n    declarations: [\n      AppComponent,\n      FullLayoutComponent,\n      LoginComponent,\n      LogoutComponent,\n      RegisterComponent,\n      ForgotPasswordComponent,\n      ResetPasswordComponent,\n      SetPasswordComponent,\n      P404Component,\n      P500Component\n    ],\n    providers: [\n      {\n        provide: LocationStrategy,\n        useClass: PathLocationStrategy,\n      },\n      {\n        provide: PERFECT_SCROLLBAR_CONFIG,\n        useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\n      },\n      AuthenticationGuard,\n      AuthorizationGuard,\n      Authorization,\n      ProfileService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FullLayoutComponent } from './layouts/full-layout.component';\nimport { LoginComponent } from 'modules/core/login/login.component';\nimport { LogoutComponent } from 'modules/core/logout/logout.component';\nimport { RegisterComponent } from 'modules/core/register/register.component';\nimport { ForgotPasswordComponent } from 'modules/core/forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from 'modules/core/reset-password/reset-password.component';\nimport { SetPasswordComponent } from 'modules/core/set-password/set-password.component';\nimport { P404Component } from './core/404/404.component';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'dashboard',\n    pathMatch: 'full',\n  },\n  {\n    path: '',\n    component: FullLayoutComponent,\n    data: {\n      title: 'Home'\n    },\n    loadChildren: './modules/application.module#ApplicationModule'\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n    data: {\n      title: 'Login Page'\n    }\n  },\n  {\n    path: 'logout',\n    component: LogoutComponent,\n    data: {\n      title: 'Logged Out'\n    }\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n    data: {\n      title: 'Register Page'\n    }\n  },\n  {\n    path: 'forgotPassword',\n    component: ForgotPasswordComponent,\n    data: {\n      title: 'Forgot Password'\n    }\n  },\n  {\n    path: 'resetPassword/:passKey',\n    component: ResetPasswordComponent,\n    data: {\n      title: 'Reset Password'\n    }\n  },\n  {\n    path: 'setPassword/:passKey',\n    component: SetPasswordComponent,\n    data: {\n      title: 'Set Password'\n    }\n  },\n  {\n    path: '**',\n    component: P404Component,\n    data: {\n      title: 'Page 404'\n    }\n  }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","module.exports = \"<div class=\\\"app flex-row align-items-center\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <h1 class=\\\"float-left display-3 mr-4\\\">404</h1>\\n        <h4 class=\\\"pt-3\\\">Oops! You're lost.</h4>\\n        <p class=\\\"text-muted\\\">The page you are looking for was not found.</p>\\n        <a class=\\\"btn btn-link pull-right\\\" (click)=\\\"navigateBack()\\\">Back</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-404',\n  templateUrl: '404.component.html'\n})\nexport class P404Component {\n\n  constructor(\n    private router: Router,\n    private location: Location\n  ) { }\n\n  navigateBack() {\n\n    this.location.back();\n    const url = this.location.path();\n    this.router.navigateByUrl(url);\n  }\n}\n","module.exports = \"<div class=\\\"app flex-row align-items-center\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"clearfix\\\">\\n          <h1 class=\\\"float-left display-3 mr-2\\\">500</h1>\\n          <h4 class=\\\"pt-1\\\">Houston, we have a problem!</h4>\\n          <p class=\\\"text-muted\\\">The page you are looking for is temporarily unavailable.</p>\\n        </div>\\n        <div class=\\\"input-prepend input-group\\\">\\n          <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n          <input id=\\\"prependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"text\\\" placeholder=\\\"What are you looking for?\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button class=\\\"btn btn-info\\\" type=\\\"button\\\">Search</button>\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>  \\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-500',\n  templateUrl: '500.component.html'\n})\nexport class P500Component {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable()\nexport class Google {\n\n  public constructor() {\n\n    ga('create', environment.google.analytics.trackingId, 'auto');\n  }\n\n  public pageview(url: string) {\n\n    ga('set', 'page', url);\n    ga('send', 'pageview');\n  }\n\n  public event(\n    category: string,\n    action: string,\n    label: string = null,\n    value: number = null\n  ) {\n\n    ga('send', 'event', {\n      eventCategory: category,\n      eventAction: action,\n      eventLabel: label,\n      eventValue: value\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AppHttp } from './app-http.service';\n\n@Injectable()\nexport class Api extends AppHttp {\n\n  protected headers: HttpHeaders;\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  private __checkTokens() {\n\n    if (this.headers.has('x-session-token') && this.headers.has('x-access-token')) {\n      return;\n    }\n\n    if (localStorage.getItem('sessionToken') !== null) {\n      this.headers = this.headers.delete('x-session-token');\n      this.headers = this.headers.set('x-session-token', localStorage.getItem('sessionToken'));\n    }\n\n    if (sessionStorage.getItem('accessToken') !== null) {\n      this.headers = this.headers.delete('x-acess-token');\n      this.headers = this.headers.set('x-access-token', sessionStorage.getItem('accessToken'));\n    }\n  }\n\n  protected resetLocalStorage() {\n\n    localStorage.removeItem('userId');\n    localStorage.removeItem('userName');\n    localStorage.removeItem('userEmail');\n    localStorage.removeItem('sessionToken');\n  }\n\n  protected resetSessionStorage() {\n\n    sessionStorage.removeItem('accessToken');\n    sessionStorage.removeItem('accessTokenTime');\n  }\n\n  get(url: string, query?: Map<string, any>): Promise<any> {\n\n    this.__checkTokens();\n    return super.get(url, query);\n  }\n\n  put(url: string, data: any, query?: Map<string, any>): Promise<any> {\n\n    this.__checkTokens();\n    return super.put(url, data, query);\n  }\n\n  patch(url: string, data?: any, query?: Map<string, any>): Promise<any> {\n\n    this.__checkTokens();\n    return super.patch(url, data, query);\n  }\n\n  post(url: string, data: any, query?: Map<string, any>): Promise<any> {\n\n    this.__checkTokens();\n    return super.post(url, data, query);\n  }\n\n  delete(url: string, data?: any, query?: Map<string, any>): Promise<any> {\n\n    this.__checkTokens();\n    return super.delete(url, data, query);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\n\nimport { environment } from '../../../environments/environment'\n\n@Injectable()\nexport class AppHttp {\n\n  protected headers: HttpHeaders;\n\n  constructor(protected http: HttpClient) {\n\n    this.http = http;\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    });\n\n    if (localStorage.getItem('sessionToken') !== null) {\n      this.headers = this.headers.delete('x-session-token');\n      this.headers = this.headers.set('x-session-token', localStorage.getItem('sessionToken'));\n    }\n\n    if (sessionStorage.getItem('accessToken') !== null) {\n      this.headers = this.headers.delete('x-access-token');\n      this.headers = this.headers.set('x-access-token', sessionStorage.getItem('accessToken'));\n    }\n  }\n\n  protected resetHeaders() {\n\n    this.headers = this.headers.delete('x-session-token');\n    this.headers = this.headers.delete('x-access-token');\n  }\n\n  protected prepareParameters(query?: Map<string, any>): HttpParams {\n\n    let params = new HttpParams();\n    if (typeof query === 'undefined') {\n      return params;\n    }\n\n    query.forEach(function (value, key) {\n      params = params.set(key, value);\n    });\n    return params;\n  }\n\n  protected handleError(error: any, url: string, data?: any) {\n\n    console.error('URL: ' + url);\n    console.error('Data: ', data);\n    console.error('Error: ', error);\n\n    return Promise.reject(error);\n  }\n\n  get(url: string, query?: Map<string, any>): Promise<any> {\n\n    return this.http.get(environment.apiServer + url, {\n      headers: this.headers,\n      params: this.prepareParameters(query)\n    }).toPromise()\n      .catch((error) => this.handleError(error, url, { query: query }));\n  }\n\n  put(url: string, data: any, query?: Map<string, any>): Promise<any> {\n\n    return this.http.put(environment.apiServer + url, data, {\n      headers: this.headers,\n      params: this.prepareParameters(query)\n    }).toPromise()\n      .catch((error) => this.handleError(error, url, { query: query, data: data }));\n  }\n\n  post(url: string, data: any, query?: Map<string, any>): Promise<any> {\n\n    return this.http.post(environment.apiServer + url, data, {\n      headers: this.headers,\n      params: this.prepareParameters(query)\n    }).toPromise()\n      .catch((error) => this.handleError(error, url, { query: query, data: data }));\n  }\n\n  patch(url: string, data?: any, query?: Map<string, any>): Promise<any> {\n\n    return this.http.request('patch', environment.apiServer + url, {\n      headers: this.headers,\n      params: this.prepareParameters(query),\n      body: data\n    }).toPromise()\n      .catch((error) => this.handleError(error, url, { query: query }));\n  }\n\n  delete(url: string, data?: any, query?: Map<string, any>): Promise<any> {\n\n    return this.http.request('delete', environment.apiServer + url, {\n      headers: this.headers,\n      params: this.prepareParameters(query),\n      body: data\n    }).toPromise()\n      .catch((error) => this.handleError(error, url, { query: query }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { environment } from '../../../environments/environment'\n\nimport { ProfileService } from 'modules/user/profile/profile.service';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n\n  constructor(private router: Router, private profileService: ProfileService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\n    if (!localStorage.getItem('sessionToken')) {\n      // not logged in so redirect to login page with the return url and return false\n\n      this.router.navigate(['login'], { queryParams: { returnUrl: state.url } });\n      return false;\n    }\n\n    const stale_access_token_time = new Date();\n    stale_access_token_time.setMinutes(stale_access_token_time.getMinutes() - environment.accessTokenLifetime);\n\n    let access_token_time = undefined;\n    if (sessionStorage.getItem('accessTokenTime')) {\n      access_token_time = new Date(sessionStorage.getItem('accessTokenTime'));\n    }\n\n    if (!sessionStorage.getItem('accessToken') || !access_token_time || access_token_time < stale_access_token_time) {\n\n      return this.profileService.me()\n        .then(() => {\n          return true;\n        })\n        .catch(() => {\n          this.router.navigate(['login'], { queryParams: { returnUrl: state.url } });\n          return false;\n        });\n\n    } else {\n      return true;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AppHttp } from './app-http.service';\n\nclass AccessibleEntity {\n  entity: string;\n  action?: string;\n}\n\n@Injectable()\nexport class Authorization extends AppHttp {\n\n  private static profile_access = {};\n\n  private _access_url: string = '/profile/access';\n  private global_routes = [\n    'dashboard'\n  ];\n\n  static resetAccess() {\n\n    Authorization.profile_access = {};\n  }\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  private _loadAccess() {\n\n    if (Object.keys(Authorization.profile_access).length > 0) {\n      return new Promise(resolve => resolve(true));\n    }\n\n    this.resetHeaders();\n\n    if (localStorage.getItem('sessionToken') !== null) {\n      this.headers = this.headers.delete('x-session-token');\n      this.headers = this.headers.set('x-session-token', localStorage.getItem('sessionToken'));\n    }\n\n    if (sessionStorage.getItem('accessToken') !== null) {\n      this.headers = this.headers.delete('x-acess-token');\n      this.headers = this.headers.set('x-access-token', sessionStorage.getItem('accessToken'));\n    }\n\n    return this.get(this._access_url)\n      .then(response => {\n\n        response = response.data;\n        const profile_access = {};\n        response.forEach(function (module) {\n          module.entities.forEach(function (entity) {\n\n            const _module = module.module.replace(' ', '_'),\n              _entity = entity.entity.replace(' ', '_');\n\n            profile_access[_module + ':' + _entity] = [];\n            entity.actions.forEach(function (action) {\n              profile_access[_module + ':' + _entity].push(action);\n            });\n          });\n        });\n\n        Authorization.profile_access = profile_access;\n        return true;\n      });\n  }\n\n  hasAccess(access: AccessibleEntity, path?: string) {\n\n    if (Object.keys(Authorization.profile_access).length > 0) {\n\n      if (path !== undefined && this.global_routes.indexOf(path) !== -1) {\n        return true;\n      } else if (access === undefined || access.entity === undefined) {\n        return false;\n      }\n    }\n\n    return this._loadAccess().then(response => {\n\n      if (path !== undefined && this.global_routes.indexOf(path) !== -1) {\n        return true;\n      } else if (access === undefined || access.entity === undefined) {\n        return false;\n      } else if (Authorization.profile_access[access.entity] === undefined) {\n        return false;\n      } else if (access.action === undefined) {\n        return true;\n      } else if (Authorization.profile_access[access.entity].indexOf(access.action) === -1) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n}\n\n@Injectable()\nexport class AuthorizationGuard implements CanActivate {\n\n  constructor(private router: Router, private authorization: Authorization) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\n    return this.authorization.hasAccess(route.data.access, route.routeConfig.path);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AppHttp } from 'core/services/app-http.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class OtpService extends AppHttp {\n\n  private _base_url: string = '/otp/generate';\n\n  constructor(http: HttpClient) {\n\n    super(http);\n  }\n\n  sendOtp(type: string, data: any) {\n\n    return this.post(this._base_url + '?type=' + type, data)\n      .then(response => response);\n  };\n}\n","module.exports = \"<app-header [fixed]=\\\"true\\\"\\n  [navbarBrandFull]=\\\"{src: '/assets/img/logo.png', width: 125, height: 25, alt: 'ExaTask'}\\\"\\n  [navbarBrandMinimized]=\\\"{src: '/assets/img/favicon.png', width: 30, height: 25, alt: 'ExaTask'}\\\"\\n  [sidebarToggler]=\\\"'lg'\\\"\\n  [asideMenuToggler]=\\\"false\\\">\\n\\n  <ul class=\\\"nav navbar-nav ml-auto px-4\\\">\\n    <li class=\\\"nav-item dropdown\\\" dropdown placement=\\\"bottom right\\\">\\n      <a class=\\\"nav-link\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" dropdownToggle\\n        (click)=\\\"false\\\">\\n        <img src=\\\"/assets/img/user-ico.png\\\" class=\\\"img-avatar\\\" alt=\\\"contact@exatask.com\\\" />\\n        <span class=\\\"hidden-md-down\\\">{{this.userName}}</span>\\n      </a>\\n      <div class=\\\"dropdown-menu dropdown-menu-right\\\" *dropdownMenu aria-labelledby=\\\"simple-dropdown\\\">\\n\\n        <!-- <div class=\\\"dropdown-header text-center\\\"><strong>Organization</strong></div>\\n              <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/organization/profile']\\\"><i class=\\\"fa fa-user\\\"></i> Profile</a> -->\\n\\n        <div class=\\\"dropdown-header text-center\\\">\\n          <strong>Account</strong>\\n        </div>\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/user/profile']\\\">\\n          <i class=\\\"fa fa-user\\\"></i> Personal Profile\\n        </a>\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/user/change-password']\\\">\\n          <i class=\\\"fa fa-lock\\\"></i> Change Password\\n        </a>\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">\\n          <i class=\\\"fa fa-sign-out\\\"></i> Logout\\n        </a>\\n\\n      </div>\\n    </li>\\n  </ul>\\n\\n</app-header>\\n\\n<div class=\\\"app-body\\\">\\n\\n  <app-sidebar [fixed]=\\\"true\\\" [display]=\\\"'lg'\\\">\\n    <app-sidebar-nav [navItems]=\\\"navMenu\\\" [perfectScrollbar] [disabled]=\\\"sidebarMinimized\\\"></app-sidebar-nav>\\n    <app-sidebar-minimizer></app-sidebar-minimizer>\\n  </app-sidebar>\\n\\n  <!-- Main content -->\\n  <main class=\\\"main\\\">\\n    <!-- Breadcrumb -->\\n    <ol class=\\\"breadcrumb\\\">\\n      <app-breadcrumb></app-breadcrumb>\\n    </ol>\\n    <div class=\\\"container-fluid\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n    <!-- /.container-fluid -->\\n  </main>\\n\\n</div>\\n\\n<app-footer>\\n  <span class=\\\"ml-auto\\\">Copyright &copy; 2017 ExaTask. All Rights Reserved</span>\\n</app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Authorization } from 'core/services/authorization.service';\nimport Utility from 'shared/helpers/utility';\nimport { NAV_MENU } from './full-layout.navigation';\nimport { UserService } from 'modules/user/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './full-layout.component.html',\n  providers: [Authorization, UserService]\n})\nexport class FullLayoutComponent implements OnInit {\n\n  public disabled: boolean = false;\n  public userName: string;\n  public userEmail: string;\n  public navMenu: Object[];\n\n  public sidebarMinimized = true;\n  private changes: MutationObserver;\n  public element: HTMLElement = document.body;\n\n  private logoutUrl = '/logout';\n\n  constructor(\n    private authorization: Authorization,\n    private userService: UserService,\n    private router: Router,\n  ) {\n\n    this.userName = localStorage.getItem('userName');\n    this.userEmail = localStorage.getItem('userEmail');\n\n    this.changes = new MutationObserver((mutations) => {\n      this.sidebarMinimized = document.body.classList.contains('sidebar-minimized')\n    });\n\n    this.changes.observe(<Element>this.element, {\n      attributes: true\n    });\n  }\n\n  async ngOnInit() {\n\n    const nav_menu = Utility.copy(NAV_MENU);\n    this.navMenu = await this._prepareNavigation(nav_menu);\n  }\n\n  private async _prepareNavigation(nav_menu) {\n\n    let hasAccess, children;\n    const accessMenu = [];\n\n    for (const item of nav_menu) {\n\n      if (item.children === undefined) {\n\n        hasAccess = await this.authorization.hasAccess(item.access, item.url.substring(1));\n        if (hasAccess) {\n\n          delete item.access;\n          accessMenu.push(item);\n        }\n\n      } else {\n\n        children = await this._prepareNavigation(item.children);\n        if (children.length > 0) {\n\n          item.children = children;\n          accessMenu.push(item);\n        }\n      }\n    }\n\n    return accessMenu;\n  }\n\n  logout() {\n\n    this.userService.logout();\n    this.router.navigateByUrl(this.logoutUrl);\n  }\n}\n","export const NAV_MENU = [\n  {\n    name: 'Dashboard',\n    icon: 'fa fa-dashboard',\n    url: '/dashboard'\n  },\n  {\n    name: 'Employees',\n    icon: 'fa fa-users',\n    url: '/employee/list',\n    access: {\n      entity: 'employee:employee',\n      action: 'find:get'\n    }\n  },\n  {\n    name: 'Access Control',\n    icon: 'fa fa-universal-access',\n    url: '/access-control/list',\n    access: {\n      entity: 'access_control:access_control',\n      action: 'find:get'\n    }\n  },\n  {\n    name: 'Departments',\n    icon: 'fa fa-home',\n    url: '/organization/department/list',\n    access: {\n      entity: 'organization:department',\n      action: 'find:get'\n    }\n  },\n  {\n    name: 'Holidays',\n    icon: 'fa fa-calendar',\n    url: '/organization/holiday/list',\n    access: {\n      entity: 'organization:holiday',\n      action: 'find:get'\n    }\n  },\n  {\n    name: 'Leaves',\n    icon: 'fa fa-cubes',\n    url: '/leave',\n    children: [\n      {\n        name: 'Leaves',\n        icon: 'fa fa-gear',\n        url: '/leave/list',\n        access: {\n          entity: 'leave:leave',\n          action: 'find:get'\n        }\n      },\n      {\n        name: 'Comp-Offs',\n        icon: 'fa fa-gear',\n        url: '/leave/comp-off/list',\n        access: {\n          entity: 'leave:compensatory_off',\n          action: 'find:get'\n        }\n      }\n    ]\n  },\n  {\n    name: 'Policies',\n    icon: 'fa fa-gear',\n    url: '/policy',\n    children: [\n      {\n        name: 'Leave',\n        icon: 'fa fa-gear',\n        url: '/leave/policy/list',\n        access: {\n          entity: 'leave:policy',\n          action: 'find:get'\n        }\n      },\n      {\n        name: 'Work from Home',\n        icon: 'fa fa-gear',\n        url: '/work-from-home/policy/list',\n        access: {\n          entity: 'wfh:policy',\n          action: 'find:get'\n        }\n      }\n    ]\n  },\n  {\n    name: 'Settings',\n    icon: 'fa fa-cogs',\n    url: '/organization/setting',\n    children: [\n      {\n        name: 'Features',\n        icon: 'fa fa-star',\n        url: '/organization/setting/feature',\n        access: {\n          entity: 'organization:feature',\n          action: 'enable:put'\n        }\n      }\n    ]\n  }\n];\n","module.exports = \"<div class=\\\"app-body\\\">\\n  <main class=\\\"main d-flex align-items-center\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 mx-auto\\\">\\n          <div class=\\\"card-group\\\">\\n            <div class=\\\"card p-4\\\">\\n              <div class=\\\"card-body\\\">\\n\\n                <h1>Forgot Password?</h1>\\n                <p class=\\\"text-muted\\\">Reset your account's password</p>\\n                <label class=\\\"text-danger\\\" [ngClass]=\\\"{'d-none': !error && success}\\\">{{error}}</label>\\n\\n                <div *ngIf=\\\"!success\\\">\\n\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"fa fa-at\\\"></i>\\n                      </span>\\n                    </span>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"E-Mail ID\\\" [(ngModel)]=\\\"data.email_id\\\">\\n                  </div>\\n\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-12\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-block btn-success\\\" (click)=\\\"resetPassword()\\\">Reset Password</button>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"row mt-3\\\">\\n                    <div class=\\\"col-12 text-right\\\">\\n                      <a routerLink='/login'>Login into existing account</a>\\n                    </div>\\n                  </div>\\n\\n                </div>\\n\\n                <div *ngIf=\\\"success\\\">\\n                    <div class=\\\"row justify-content-md-center mt-4\\\">\\n                      <div class=\\\"col-12\\\">\\n                        <h4 class=\\\"align-items-center text-success\\\">Password reset instructions have been successfully sent to your registered E-Mail ID.</h4>\\n                      </div>\\n                    </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </main>\\n</div>\\n\"","import { Component } from '@angular/core';\n\nimport { UserService } from 'modules/user/user.service';\n\nclass ForgotPassword {\n  email_id: string = '';\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './forgot-password.component.html',\n  providers: [UserService]\n})\nexport class ForgotPasswordComponent {\n\n  data: ForgotPassword = new ForgotPassword();\n  error: string = '';\n  success: boolean = false;\n\n  constructor(\n    private userService: UserService\n  ) {\n  }\n\n  resetPassword() {\n\n    if (!this.data.email_id) {\n      this.error = 'Please provide E-Mail ID for resetting password';\n      return;\n    }\n\n    this.userService.forgotPassword(this.data.email_id)\n      .then(response => {\n        if (response.status === true) {\n          this.success = true;\n        };\n      })\n      .catch(err => {\n        this.error = err.error.message.text;\n      })\n  }\n}\n","module.exports = \"<div class=\\\"app-body\\\">\\n  <main class=\\\"main d-flex align-items-center\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8 mx-auto\\\">\\n          <div class=\\\"card-group\\\">\\n            <div class=\\\"card p-4\\\">\\n              <div class=\\\"card-body\\\">\\n\\n                <form #loginForm=\\\"ngForm\\\" (submit)=\\\"login()\\\">\\n                  <h1>Login</h1>\\n                  <p class=\\\"text-muted\\\">Sign In to your account</p>\\n                  <label class=\\\"text-danger\\\" [ngClass]=\\\"{'d-none': !error}\\\">{{error}}</label>\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"fa fa-user\\\"></i>\\n                      </span>\\n                    </span>\\n                    <input type=\\\"text\\\" name=\\\"email_id\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"data.email_id\\\">\\n                  </div>\\n                  <div class=\\\"input-group mb-4\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"fa fa-lock\\\"></i>\\n                      </span>\\n                    </span>\\n                    <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"data.password\\\">\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-6\\\">\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-primary px-4\\\">Login</button>\\n                    </div>\\n                    <div class=\\\"col-6 text-right\\\">\\n                      <a routerLink='/forgotPassword' class=\\\"btn btn-link px-0\\\">Forgot password?</a>\\n                    </div>\\n                  </div>\\n                </form>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"card text-white bg-primary py-5 d-md-down-none\\\" style=\\\"width:44%\\\">\\n              <div class=\\\"card-block text-center\\\">\\n                <div>\\n                  <h2>Sign up</h2>\\n                  <p>Create your organization's account</p>\\n                  <a routerLink='/register' class=\\\"btn btn-primary active mt-3\\\">Register Now!</a>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </main>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from 'modules/user/user.service';\n\nclass Login {\n  email_id: string = '';\n  password: string = '';\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'login.component.html',\n  providers: [UserService]\n})\nexport class LoginComponent implements OnInit {\n\n  data: Login = new Login();\n\n  returnUrl: string;\n\n  error: string = '';\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  ngOnInit() {\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    this.error = '';\n  }\n\n  login() {\n\n    if (!this.data.email_id || this.data.email_id.length < 3) {\n      this.error = 'Please enter a valid username';\n      return;\n    } else if (!this.data.password || this.data.password.length < 5) {\n      this.error = 'Please enter a valid password';\n      return;\n    }\n\n    this.error = '';\n    this.userService.login(this.data.email_id, this.data.password)\n      .then(data => {\n        this.router.navigateByUrl(this.returnUrl);\n    }).catch(err => {\n      this.error = err.error.message.text;\n    });\n  }\n}\n","module.exports = \"<div class=\\\"app-body\\\">\\n  <main class=\\\"main d-flex align-items-center\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8 mx-auto\\\">\\n          <div class=\\\"card-group\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-body\\\">\\n                <h1>Logged Out</h1>\\n                <p class=\\\"text-muted\\\">You have been successfully logged out.</p>\\n              </div>\\n              <div class=\\\"card-footer text-right\\\">\\n                <a routerLink='/login'>Login Again</a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </main>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'logout.component.html',\n  providers: []\n})\nexport class LogoutComponent {\n\n  public element: HTMLElement = document.body;\n\n  constructor() {\n\n    this.element.className = 'app';\n  }\n}\n","module.exports = \"<div class=\\\"app-body\\\">\\n  <main class=\\\"main d-flex align-items-center\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 mx-auto\\\">\\n          <div class=\\\"card mx-4\\\">\\n            <div class=\\\"card-body p-4\\\">\\n\\n              <h1>Register</h1>\\n\\n              <div *ngIf=\\\"!success\\\">\\n\\n                <p class=\\\"text-muted\\\">Create your organization's account</p>\\n\\n                <div class=\\\"form-group\\\" *ngIf=\\\"error\\\">\\n                  <div class=\\\"col-12 text-danger\\\">\\n                    <p class=\\\"mb-0\\\">{{error}}</p>\\n                    <ul class=\\\"mb-0\\\" *ngIf=\\\"invalidAttributes\\\">\\n                      <li *ngFor=\\\"let attribute of invalid_attributes\\\">{{attribute}}</li>\\n                    </ul>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"input-group mb-3\\\">\\n                  <span class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-rocket\\\"></i></span>\\n                  </span>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Organization Name\\\" [(ngModel)]=\\\"data.name\\\">\\n                </div>\\n\\n                <div class=\\\"input-group mb-3\\\">\\n                  <span class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-user\\\"></i></span>\\n                  </span>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\" [(ngModel)]=\\\"data.admin.name.first\\\">\\n                </div>\\n\\n                <div class=\\\"input-group mb-3\\\">\\n                  <span class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-user\\\"></i></span>\\n                  </span>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Middle Name\\\" [(ngModel)]=\\\"data.admin.name.middle\\\">\\n                </div>\\n\\n                <div class=\\\"input-group mb-3\\\">\\n                  <span class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-user\\\"></i></span>\\n                  </span>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name\\\" [(ngModel)]=\\\"data.admin.name.last\\\">\\n                </div>\\n\\n                <div class=\\\"input-group mb-3\\\">\\n                  <span class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-at\\\"></i></span>\\n                  </span>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"E-Mail ID\\\" [(ngModel)]=\\\"data.admin.email_id\\\">\\n                </div>\\n\\n                <div class=\\\"input-group mb-3\\\" *ngIf=\\\"otpSent\\\">\\n                  <span class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-key\\\"></i></span>\\n                  </span>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"OTP\\\" [(ngModel)]=\\\"data.otp\\\">\\n                </div>\\n\\n                <div class=\\\"row\\\" *ngIf=\\\"!otpSent\\\">\\n                  <div class=\\\"offset-6 col-6\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\" (click)=\\\"sendOtp()\\\">Send OTP</button>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\" *ngIf=\\\"otpSent\\\">\\n                  <div class=\\\"col-6\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-link\\\" (click)=\\\"sendOtp()\\\">Re-Send OTP</button>\\n                  </div>\\n                  <div class=\\\"col-6\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-success\\\" (click)=\\\"register()\\\">Create Account</button>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row mt-3\\\">\\n                  <div class=\\\"col-12 text-right\\\">\\n                    <a routerLink='/login'>Login into existing account</a>\\n                  </div>\\n                </div>\\n\\n              </div>\\n\\n              <div *ngIf=\\\"success\\\">\\n\\n                <div class=\\\"row justify-content-md-center mt-5 mb-5\\\">\\n                  <img height=\\\"150\\\" width=\\\"150\\\" src=\\\"assets/img/thumbs-up.png\\\">\\n                </div>\\n\\n                <div class=\\\"row justify-content-md-center\\\">\\n                  <h5 class=\\\"text-center text-success\\\">\\n                    Registration done successfully.\\n                    <br>Please check your mail for setting-up password to your ExaTask account.\\n                  </h5>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </main>\\n</div>\\n\"","import { Component } from '@angular/core';\n\nimport { OrganizationService } from 'modules/organization/organization.service';\nimport { OtpService } from 'core/services/otp.service';\n\nconst ERROR_MAP = {\n  'first': 'First Name',\n  'middle': 'Middle Name',\n  'last': 'Last Name',\n  'email_id': 'E-Mail ID'\n};\n\nclass Name {\n\n  first: string;\n  middle: string;\n  last: string;\n}\n\nclass Admin {\n\n  name: Name;\n  email_id: string;\n\n  constructor() {\n    this.name = new Name();\n  }\n}\n\nclass Register {\n\n  name: string = '';\n  admin: Admin;\n  otp: string = '';\n\n  constructor() {\n    this.admin = new Admin();\n  }\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './register.component.html',\n  providers: [OtpService, OrganizationService]\n})\nexport class RegisterComponent {\n\n  data: Register = new Register();\n\n  error: string = '';\n  success: boolean = false;\n  otpSent: boolean = false;\n\n  invalidAttributes: Array<string> = [];\n\n  constructor(\n    private organizationService: OrganizationService,\n    private otpService: OtpService) {\n  }\n\n  register() {\n\n    this.error = '';\n    this.invalidAttributes = [];\n\n    this.organizationService.postOrg(this.data).then(() => {\n      this.success = true;\n    }).catch(err => {\n\n      this.error = err.error.message.text;\n      if (err.error.invalid_attributes) {\n        for (const key in err.error.invalid_attributes) {\n          if (err.error.invalid_attributes.hasOwnProperty(key)) {\n            this.invalidAttributes.push(ERROR_MAP[key] ? ERROR_MAP[key] : err.error.invalid_attributes[key]);\n          }\n        }\n      }\n\n    });\n  }\n\n  sendOtp() {\n\n    if (!this.data.admin.email_id) {\n      this.error = 'Provide E-Mail ID before sending OTP';\n      return;\n    }\n\n    this.error = '';\n    this.otpService.sendOtp('organization', { email_id: this.data.admin.email_id })\n      .then(response => {\n\n        if (response.status === true) {\n          this.otpSent = true;\n        }\n\n      });\n  }\n}\n","module.exports = \"<div class=\\\"app-body\\\">\\n  <main class=\\\"main d-flex align-items-center\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 mx-auto\\\">\\n          <div class=\\\"card-group\\\">\\n            <div class=\\\"card p-4\\\">\\n              <div class=\\\"card-body\\\">\\n\\n                <h1>Reset Password</h1>\\n                <p class=\\\"text-muted\\\">&nbsp;</p>\\n                <label class=\\\"text-danger\\\" [ngClass]=\\\"{'d-none': !error && success}\\\">{{error}}</label>\\n\\n                <div *ngIf=\\\"!success\\\">\\n\\n                  <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-4 col-form-label\\\" for=\\\"new-password\\\">New Password</label>\\n                    <div class=\\\"col-8\\\">\\n                      <input class=\\\"form-control\\\" id=\\\"new-password\\\" name=\\\"new_password\\\" type=\\\"password\\\" [ngModel]=\\\"data.password\\\" (ngModelChange)=\\\"onPasswordChange($event)\\\">\\n                    </div>\\n\\n                    <div class=\\\"offset-4 col-8\\\" *ngIf=\\\"passwordError\\\">\\n                      <label class=\\\"text-danger\\\">Password should be of minimum 8 characters with atleast 1 number and 1 special character.</label>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-4 col-form-label\\\" for=\\\"retype-password\\\">Retype Password</label>\\n                    <div class=\\\"col-8\\\">\\n                      <input class=\\\"form-control\\\" id=\\\"retype-password\\\" name=\\\"retype_password\\\" type=\\\"password\\\" [ngModel]=\\\"data.verifyPassword\\\" (ngModelChange)=\\\"onVerifyPasswordChange($event)\\\">\\n                    </div>\\n\\n                    <div class=\\\"offset-4 col-8\\\" *ngIf=\\\"verifyPasswordError\\\">\\n                      <label class=\\\"text-danger\\\">Passwords don't match.</label>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-12\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary float-right\\\" (click)=\\\"resetPassword()\\\" [disabled]=\\\"passwordError || verifyPasswordError\\\">Set Password</button>\\n                    </div>\\n                  </div>\\n\\n                </div>\\n\\n                <div *ngIf=\\\"success\\\">\\n\\n                  <div class=\\\"row justify-content-md-center\\\">\\n                    <h3 class=\\\"align-items-center text-success\\\">Password reset successfully.</h3>\\n                  </div>\\n\\n                  <div class=\\\"row justify-content-md-center\\\">\\n                    <h5 class=\\\"align-items-center\\\">You'll now be redirected...</h5>\\n                  </div>\\n\\n                  <div class=\\\"row justify-content-md-center\\\">\\n                    <img class=\\\"align middle\\\" src=\\\"assets/img/loading.gif\\\">\\n                  </div>\\n\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </main>\\n</div>\\n\"","import { Component } from '@angular/core';\n\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from 'modules/user/user.service'\n\nclass ResetPassword {\n  password: string = '';\n  verifyPassword: string = '';\n  resetPasswordKey = '';\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './reset-password.component.html',\n  providers: [UserService]\n})\nexport class ResetPasswordComponent {\n\n  data: ResetPassword = new ResetPassword();\n\n  passwordError: boolean = false;\n  verifyPasswordError: boolean = false;\n\n  error: string = '';\n  success: boolean = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private userService: UserService\n  ) {\n\n    this.data.resetPasswordKey = this.route.snapshot.params['passKey'];\n  }\n\n  onPasswordChange(value) {\n\n    this.data.password = value;\n    this.passwordError = !this.validatePassword(this.data.password);\n  }\n\n  onVerifyPasswordChange(value) {\n\n    this.data.verifyPassword = value;\n    this.verifyPasswordError = (this.data.password !== this.data.verifyPassword);\n  }\n\n  resetPassword() {\n\n    this.userService.resetPassword(this.data.resetPasswordKey, this.data.password)\n      .then(a => {\n\n        this.success = true;\n        setTimeout(() => {\n          this.router.navigateByUrl('/login');\n        }, 4000);\n\n      })\n      .catch(err => {\n        this.error = 'Some error occurred while setting password.\\n' + err.error.message.text;\n      })\n  }\n\n  private validatePassword(password: string): boolean {\n\n    const passwordRegex = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[.,_()@*&^%$#!?~:;<>\\[\\]\\-])[a-zA-Z\\d.,_()@*&^%$#!?~:;<>\\[\\]\\-]*$/;\n\n    return password.length >= 8 && passwordRegex.test(password);\n  }\n}\n","module.exports = \"<div class=\\\"app-body\\\">\\n  <main class=\\\"main d-flex align-items-center\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 mx-auto\\\">\\n          <div class=\\\"card-group\\\">\\n            <div class=\\\"card p-4\\\">\\n              <div class=\\\"card-body\\\">\\n\\n                <h1>Set Password</h1>\\n                <p class=\\\"text-muted\\\">&nbsp;</p>\\n                <label class=\\\"text-danger\\\" [ngClass]=\\\"{'d-none': !error && success}\\\">{{error}}</label>\\n\\n                <div *ngIf=\\\"!success\\\">\\n\\n                  <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-4 col-form-label\\\" for=\\\"password\\\">Password</label>\\n                    <div class=\\\"col-8\\\">\\n                      <input class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" [ngModel]=\\\"data.password\\\" (ngModelChange)=\\\"onPasswordChange($event)\\\">\\n                    </div>\\n\\n                    <div class=\\\"offset-4 col-8\\\" *ngIf=\\\"passwordError\\\">\\n                      <label class=\\\"text-danger\\\">Password should be of minimum 8 characters with atleast 1 number and 1 special character.</label>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-4 col-form-label\\\" for=\\\"verify-password\\\">Verify Password</label>\\n                    <div class=\\\"col-8\\\">\\n                      <input class=\\\"form-control\\\" id=\\\"verify-password\\\" name=\\\"verify_password\\\" type=\\\"password\\\" [ngModel]=\\\"data.verifyPassword\\\" (ngModelChange)=\\\"onVerifyPasswordChange($event)\\\">\\n                    </div>\\n\\n                    <div class=\\\"offset-4 col-8\\\" *ngIf=\\\"verifyPasswordError\\\">\\n                      <label class=\\\"text-danger\\\">Passwords don't match.</label>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-12\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-success float-right\\\" (click)=\\\"setPassword()\\\" [disabled]=\\\"passwordError || verifyPasswordError\\\">Set Password</button>\\n                    </div>\\n                  </div>\\n\\n                </div>\\n\\n                <div *ngIf=\\\"success\\\">\\n\\n                  <div class=\\\"row justify-content-md-center\\\">\\n                    <h3 class=\\\"align-items-center text-success\\\">Password set successfully.</h3>\\n                  </div>\\n\\n                  <div class=\\\"row justify-content-md-center\\\">\\n                    <h5 class=\\\"align-items-center\\\">You'll now be redirected...</h5>\\n                  </div>\\n\\n                  <div class=\\\"row justify-content-md-center\\\">\\n                    <img class=\\\"align middle\\\" src=\\\"assets/img/loading.gif\\\">\\n                  </div>\\n\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </main>\\n</div>\\n\"","import { Component } from '@angular/core';\n\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from 'modules/user/user.service';\n\nclass SetPassword {\n  password: string = '';\n  verifyPassword: string = '';\n  setPasswordKey: string = '';\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './set-password.component.html',\n  providers: [UserService]\n})\nexport class SetPasswordComponent {\n\n  data: SetPassword = new SetPassword();\n\n  error: string = '';\n  success: boolean = false;\n\n  passwordError: boolean = false;\n  verifyPasswordError: boolean = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private userService: UserService\n  ) {\n\n    this.data.setPasswordKey = this.route.snapshot.params['passKey'];\n  }\n\n  onPasswordChange(value) {\n\n    this.data.password = value;\n    this.passwordError = !this.validatePassword(this.data.password);\n  }\n\n  onVerifyPasswordChange(value) {\n\n    this.data.verifyPassword = value;\n    this.verifyPasswordError = (this.data.password !== this.data.verifyPassword);\n  }\n\n  setPassword() {\n\n    this.userService.setPassword(this.data.setPasswordKey, this.data.password)\n      .then(a => {\n\n        this.success = true;\n        setTimeout(() => {\n          this.router.navigateByUrl('/login');\n        }, 5000);\n\n      })\n      .catch(err => {\n        this.error = 'Some error occurred while setting password.\\n' + err.error.message.text;\n      });\n  }\n\n  private validatePassword (password: string): boolean {\n\n    const passwordRegex = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[.,_()@*&^%$#!?~:;<>\\[\\]\\-])[a-zA-Z\\d.,_()@*&^%$#!?~:;<>\\[\\]\\-]*$/;\n\n    return password.length >= 8 && passwordRegex.test(password);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Api } from 'core/services/api.service';\n\n@Injectable()\nexport class OrganizationService extends Api {\n\n  private _base_url: string = '/organizations';\n\n  constructor(http: HttpClient) {\n\n    super(http);\n  }\n\n  postOrg(organization: any) {\n\n    return this.post(this._base_url, organization)\n      .then(response => response);\n  };\n\n  getDetails(): any {\n\n    return this.get(this._base_url)\n      .then(response => response);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Api } from 'core/services/api.service';\n\nexport class Name {\n\n  first: string = '';\n  middle: string;\n  last: string = '';\n\n  static getFullName(name) {\n\n    let fullName = name.first;\n    if (name.middle) {\n      fullName += ' ' + name.middle;\n    }\n    fullName += ' ' + name.last;\n\n    return fullName;\n  }\n\n  name(): string {\n\n    return this.first + ' ' + this.last;\n  }\n\n  fullName(): string {\n\n    return Name.getFullName(this);\n  }\n}\n\n\nexport class Address {\n\n  address: string = '';\n  locality: string = '';\n  landmark: string = '';\n  postcode: string = '';\n  city: string = '';\n  state: string = '';\n  state_code: string = '';\n  country: string = '';\n  country_code: string = '';\n}\n\nexport class EmergencyContact {\n\n  name: string = '';\n  relation: string = '';\n  isd_code: string = '';\n  contact_number: string = '';\n}\n\nexport class ContactNumber {\n\n  isd_code: string = '';\n  contact_number: string = '';\n}\n\nexport class SocialSecurity {\n\n  type: string = '';\n  number: string = '';\n  file: string = '';\n  verified: boolean = false;\n}\n\nexport class Qualification {\n\n  degree_id: string = '';\n  institution_id: string = '';\n  degree: string = '';\n  level: string = '';\n  specialization: string = '';\n  institution: string = '';\n  university: string = '';\n  passing_year: number = 0;\n  marks: number = 0;\n}\n\nexport class Leave {\n\n  leave_type: string;\n  leaves: number;\n}\n\nexport class Profile {\n\n  id: string = '';\n  name: Name = new Name();\n  email_id: string = '';\n  contact_number: string = '';\n  isd_code: string = '';\n  date_of_birth: string = '';\n  gender: string = '';\n  gender_id: number = 0;\n  permanent_address: Address = new Address();\n  alternate_email_ids: string[] = new Array();\n  alternate_contact_numbers: ContactNumber[] = new Array();\n  marital_status: string = '';\n  marital_status_id: number = 0;\n  social_security: SocialSecurity[] = new Array();\n  correspondence_address: Address = new Address();\n  qualification: Qualification[] = new Array();\n  emergency_contacts: EmergencyContact[] = new Array();\n  leaves: Leave[] = new Array();\n};\n\n@Injectable()\nexport class ProfileService extends Api {\n\n  private _base_url: string = '/profile';\n\n  constructor(http: HttpClient) {\n\n    super(http);\n  }\n\n  me() {\n\n    this.resetSessionStorage();\n    this.resetHeaders();\n\n    return this.get(this._base_url + '/me')\n      .then(response => {\n\n        const data = response['data'];\n\n        sessionStorage.setItem('accessToken', data.access_token)\n        sessionStorage.setItem('accessTokenTime', new Date().toString());\n\n        return data;\n      });\n  }\n\n  access() {\n\n    return this.get(this._base_url + '/access')\n      .then(response => response['data']);\n  }\n\n  getProfile(details?: string): Promise<Profile> {\n\n    const query = new Map<string, string>();\n    query.set('details', details);\n\n    return this.get(this._base_url, query)\n      .then(response => response as Profile);\n  }\n\n  updateProfile(profile: Object): Promise<Object> {\n\n    return this.put(this._base_url, profile)\n      .then(response => response);\n  }\n\n  changePassword(password: Object): Promise<Object> {\n\n    return this.put(this._base_url + '/changePassword', password)\n      .then(response => response);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Api } from 'core/services/api.service';\nimport { Authorization } from 'core/services/authorization.service';\n\n@Injectable()\nexport class UserService extends Api {\n\n  private _base_url: string = '/users';\n\n  constructor(http: HttpClient) {\n\n    super(http);\n  }\n\n  login(email_id: string, password: string) {\n\n    this.resetLocalStorage();\n    this.resetSessionStorage();\n\n    const data = {\n      'email_id': email_id,\n      'password': password\n    };\n\n    return this.post(this._base_url + '/login', data)\n      .then(result => {\n\n        result = result['data'];\n\n        localStorage.setItem('userId', result.user_id);\n        localStorage.setItem('userName', result.name);\n        localStorage.setItem('userEmail', result.email_id);\n        localStorage.setItem('sessionToken', result.session_token);\n\n        this.resetHeaders();\n\n        return data;\n      }\n    );\n  }\n\n  logout() {\n\n    this.resetLocalStorage();\n    this.resetSessionStorage();\n    Authorization.resetAccess();\n    this.resetHeaders();\n  }\n\n  forgotPassword(email_id: string) {\n\n    return this.get(this._base_url + '/resetPassword?email_id=' + email_id)\n      .then(response => response);\n  }\n\n  resetPassword(resetPasswordKey: string, password: string) {\n\n    const data = {\n      'reset_password_key': resetPasswordKey,\n      'password': password\n    };\n\n    return this.put(this._base_url + '/resetPassword', data)\n      .then(response => response['data']);\n  }\n\n  setPassword(setPasswordKey: string, password: string) {\n\n    const data = {\n      'set_password_key': setPasswordKey,\n      'password': password\n    };\n\n    return this.post(this._base_url + '/setPassword', data)\n      .then(response => response['data']);\n  }\n}\n","import * as diff from 'deep-diff';\nimport * as clone from 'clone';\nimport * as has from 'has-value';\n\nexport default class Utility {\n\n  public static compare(base: any, data: any): any {\n    return diff(base, data);\n  }\n\n  public static copy(source: any): any {\n    return clone(source);\n  }\n\n  public static empty(source: any): boolean {\n    return !has(source);\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n\n  production: false,\n\n  apiServer: 'http://localhost:8002',\n  accessTokenLifetime: 5,\n\n  google: {\n    analytics: {\n      trackingId: 'UA-100830185-1'\n    }\n  }\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}