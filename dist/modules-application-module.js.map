{"version":3,"sources":["webpack:///./src/app/modules/application.module.ts","webpack:///./src/app/modules/application.routing.ts","webpack:///./src/app/modules/core/dashboard/dashboard.component.html","webpack:///./src/app/modules/core/dashboard/dashboard.component.ts"],"names":[],"mappings":"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","file":"modules-application-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { CollapseModule } from 'ngx-bootstrap';\n\nimport { ApplicationRoutingModule } from './application.routing';\nimport { DashboardComponent } from 'modules/core/dashboard/dashboard.component';\nimport { ApplicationPipesModule } from './application-pipes.module';\n\n@NgModule({\n  imports: [\n    ApplicationRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    CommonModule,\n    CollapseModule,\n    ApplicationPipesModule\n  ],\n  declarations: [\n    DashboardComponent\n  ],\n  providers: [\n  ]\n})\nexport class ApplicationModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from 'modules/core/dashboard/dashboard.component';\nimport { AuthenticationGuard } from 'core/services/authentication.service';\nimport { AuthorizationGuard } from 'core/services/authorization.service';\n\nconst routes: Routes = [\n  {\n    path: 'dashboard',\n    canActivate: [AuthenticationGuard, AuthorizationGuard],\n    component: DashboardComponent,\n    data: {\n      title: 'Dashboard'\n    }\n  },\n  {\n    path: 'user',\n    loadChildren: './user/user.module#UserModule'\n  },\n  {\n    path: 'employee',\n    loadChildren: './employee/employee.module#EmployeeModule'\n  },\n  {\n    path: 'organization',\n    loadChildren: './organization/organization.module#OrganizationModule'\n  },\n  {\n    path: 'leave',\n    loadChildren: './leave/leave.module#LeaveModule'\n  },\n  {\n    path: 'work-from-home',\n    loadChildren: './work-from-home/work-from-home.module#WorkFromHomeModule'\n  },\n  {\n    path: 'access-control',\n    loadChildren: './access-control/access-control.module#AccessControlModule'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ApplicationRoutingModule { }\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-3\\\" *ngIf=\\\"totalEmployees > 0\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <div class=\\\"callout callout-warning\\\">\\n                <small class=\\\"text-muted\\\">Departments</small>\\n                <br>\\n                <strong class=\\\"h4\\\">{{totalDepartments}}</strong>\\n              </div>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <div class=\\\"callout callout-success\\\">\\n                <small class=\\\"text-muted\\\">Users</small>\\n                <br>\\n                <strong class=\\\"h4\\\">{{totalEmployees}}</strong>\\n              </div>\\n            </div>\\n          </div>\\n          <hr class=\\\"mt-0\\\">\\n          <div class=\\\"progress-group\\\" *ngFor=\\\"let department of departments\\\">\\n            <div class=\\\"progress-group-header align-items-end\\\">\\n              <div>{{department.name}}</div>\\n              <div class=\\\"ml-auto font-weight-bold mr-2\\\">{{department.count.employees}}</div>\\n            </div>\\n            <div class=\\\"progress-group-bars\\\">\\n              <div class=\\\"progress progress-xs\\\">\\n                <div class=\\\"progress-bar bg-success\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{width: department.count.employees / totalEmployees | percent}\\\" [attr.aria-valuenow]=\\\"department.count.employees / totalEmployees\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div><!--/.col-->\\n\\n    <div class=\\\"col-3\\\" *ngIf=\\\"leaves.length > 0\\\">\\n\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\" *ngFor=\\\"let leave of leaves\\\">\\n              <div class=\\\"callout callout-warning\\\">\\n                <small class=\\\"text-muted\\\">{{leave.leave_type | constants: 'leave.type'}}</small>\\n                <br>\\n                <strong class=\\\"h4\\\">{{leave.leaves}}</strong>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div><!--/.row-->\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Department, DepartmentService } from 'modules/organization/department/department.service'\nimport { Leave, ProfileService } from 'modules/user/profile/profile.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: 'dashboard.component.html',\n  providers: [\n    DepartmentService,\n    ProfileService\n  ]\n})\nexport class DashboardComponent implements OnInit {\n\n  error: string;\n\n  public totalEmployees: number;\n  public totalDepartments: number;\n  departments: Department[];\n  leaves: Leave[];\n\n  constructor(\n    private departmentService: DepartmentService,\n    private profileService: ProfileService\n  ) {\n\n    this.departments = [];\n    this.leaves = [];\n  }\n\n  ngOnInit(): void {\n\n    this.__getDepartments();\n    this.__getLeaves();\n  }\n\n  private __getDepartments() {\n\n    this.totalEmployees = 0;\n    this.departmentService.getDepartments().then(response => {\n\n      if (response) {\n        this.departments = response;\n        this.totalDepartments = response.length;\n        this.departments.forEach(department => {\n          this.totalEmployees += department.count.employees;\n        });\n      }\n\n    });\n  }\n\n  private __getLeaves() {\n\n    this.profileService.getProfile('leaves').then(response => {\n\n      if (response.leaves) {\n        this.leaves = response.leaves;\n      }\n    });\n  }\n}\n"],"sourceRoot":""}