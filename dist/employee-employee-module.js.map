{"version":3,"sources":["webpack:///./src/app/modules/employee/employee.module.ts","webpack:///./src/app/modules/employee/employee.routing.ts","webpack:///./src/app/modules/employee/list-employee/list-employee.component.html","webpack:///./src/app/modules/employee/list-employee/list-employee.component.ts","webpack:///./src/app/modules/employee/manage-employee/manage-employee.component.html","webpack:///./src/app/modules/employee/manage-employee/manage-employee.component.ts"],"names":[],"mappings":"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","file":"employee-employee-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { EmployeeRoutingModule } from './employee.routing';\nimport { ListEmployeeComponent } from './list-employee/list-employee.component';\nimport { ManageEmployeeComponent } from './manage-employee/manage-employee.component';\nimport { ApplicationComponentsModule } from 'modules/application-components.module';\nimport { ApplicationPipesModule } from 'modules/application-pipes.module';\nimport { BsDropdownModule } from 'ngx-bootstrap';\n\n@NgModule({\n  imports: [\n    EmployeeRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    CommonModule,\n    ApplicationComponentsModule,\n    ApplicationPipesModule,\n    BsDropdownModule\n  ],\n  declarations: [\n    ListEmployeeComponent,\n    ManageEmployeeComponent\n  ],\n  providers: [\n  ]\n})\nexport class EmployeeModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ManageEmployeeComponent } from './manage-employee/manage-employee.component';\nimport { ListEmployeeComponent } from './list-employee/list-employee.component';\nimport { AuthenticationGuard } from 'core/services/authentication.service';\nimport { AuthorizationGuard } from 'core/services/authorization.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: {\n      title: 'Employee'\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'list'\n      },\n      {\n        path: 'list',\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        data: {\n          title: 'List',\n          access: {\n            entity: 'employee:employee',\n            action: 'find:get'\n          }\n        },\n        component: ListEmployeeComponent\n      },\n      {\n        path: 'add',\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        data: {\n          title: 'Add',\n          access: {\n            entity: 'employee:employee',\n            action: 'create:post'\n          }\n        },\n        component: ManageEmployeeComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeeRoutingModule { }\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row mb-4\\\" *ngIf=\\\"createAllowed\\\">\\n            <div class=\\\"col-12\\\">\\n              <button class=\\\"btn btn-primary pull-right\\\" role='button' type=\\\"button\\\" routerLink=\\\"/employee/add\\\">+ Add Employee</button>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"text-center m-5\\\" *ngIf=\\\"employees.length === 0\\\">\\n            <h3>No Employees in organization</h3>\\n          </div>\\n\\n          <table class=\\\"table table-striped\\\" *ngIf=\\\"employees.length > 0\\\">\\n            <thead>\\n              <tr>\\n                <th>Employee ID</th>\\n                <th>Name</th>\\n                <th>Email</th>\\n                <th>Department</th>\\n                <th>Designation</th>\\n                <th>Supervisor</th>\\n                <th>Status</th>\\n                <th></th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let employee of employees; let i = index\\\">\\n                <td>{{employee.employee_id}}</td>\\n                <td>{{employee.name.first}} {{employee.name.middle}} {{employee.name.last}}</td>\\n                <td>{{employee.email_id}}</td>\\n                <td>\\n                  <span *ngIf=\\\"employee.department\\\">{{employee.department.name}}</span>\\n                </td>\\n                <td>\\n                  <span *ngIf=\\\"employee.designation\\\">{{employee.designation}}</span>\\n                </td>\\n                <td>\\n                  <span *ngIf=\\\"employee.supervisor\\\">{{employee.supervisor.name}}</span>\\n                </td>\\n                <td>\\n                  <span class=\\\"badge\\\" [ngClass]=\\\"getStatusBadge(employee.user_status)\\\">{{'user.status.' + employee.user_status | constants}}</span>\\n                </td>\\n                <td>\\n                  <div class=\\\"btn-group\\\" dropdown *ngIf=\\\"showActions()\\\">\\n\\n                    <button id=\\\"actions-btn-{{i}}\\\" class=\\\"btn btn-default btn-sm dropdown-toggle\\\" type=\\\"button\\\" dropdownToggle [attr.aria-controls]=\\\"'actions-' + i\\\" [disabled]=\\\"inProgress[i]\\\">\\n                      <i class=\\\"fa fa-refresh fa-spin\\\" *ngIf=\\\"inProgress[i]\\\"></i> Actions <i class=\\\"caret\\\"></i>\\n                    </button>\\n\\n                    <ul id=\\\"actions-{{i}}\\\" class=\\\"dropdown-menu dropdown-menu-right\\\" *dropdownMenu role=\\\"menu\\\" [attr.aria-labeledby]=\\\"'actions-btn-' + i\\\">\\n\\n                      <li role=\\\"menuitem\\\" *ngIf=\\\"markSupervisorAllowed && !employee.is_supervisor\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-link btn-sm dropdown-item\\\" (click)=\\\"markAsSupervisor(i)\\\">\\n                          Mark as Supervisor\\n                        </button>\\n                      </li>\\n\\n                      <li role=\\\"menuitem\\\" *ngIf=\\\"unmarkSupervisorAllowed && employee.is_supervisor\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-link btn-sm dropdown-item\\\" (click)=\\\"unmarkAsSupervisor(i)\\\">\\n                          Unmark as Supervisor\\n                        </button>\\n                      </li>\\n\\n                    </ul>\\n\\n                  </div>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n\\n          <ul class=\\\"pagination justify-content-end\\\" *ngIf=\\\"count > limit\\\">\\n            <li class=\\\"page-item\\\" *ngIf=\\\"total_pages > 1\\\" [class.disabled]=\\\"page == 1\\\">\\n              <button class=\\\"page-link\\\" (click)=\\\"getEmployees(1)\\\">First</button>\\n            </li>\\n            <li class=\\\"page-item\\\" [class.disabled]=\\\"page == 1\\\">\\n              <button class=\\\"page-link\\\" (click)=\\\"getEmployees(page - 1)\\\">Prev</button>\\n            </li>\\n            <li class=\\\"page-item active\\\">\\n              <button class=\\\"page-link\\\">{{page}}</button>\\n            </li>\\n            <li class=\\\"page-item\\\" [class.disabled]=\\\"page === total_pages\\\">\\n              <button class=\\\"page-link\\\" (click)=\\\"getEmployees(page + 1)\\\">Next</button>\\n            </li>\\n            <li class=\\\"page-item\\\" *ngIf=\\\"page < total_pages\\\" [class.disabled]=\\\"page === total_pages\\\">\\n              <button class=\\\"page-link\\\" (click)=\\\"getEmployees(total_pages)\\\">Last</button>\\n            </li>\\n          </ul>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-success-modal #successModal title=\\\"Success!\\\">\\n  <content>{{successMessage}}</content>\\n</app-success-modal>\\n\\n<app-error-modal #errorModal title=\\\"Error!\\\">\\n  <content>{{errorMessage}}</content>\\n</app-error-modal>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Employee, EmployeeService } from 'modules/employee/employee.service';\nimport { Authorization } from 'core/services/authorization.service';\nimport { SuccessModalComponent } from 'shared/components/success-modal/success-modal.component';\nimport { ErrorModalComponent } from 'shared/components/error-modal/error-modal.component';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './list-employee.component.html',\n  providers: [EmployeeService, Authorization]\n})\nexport class ListEmployeeComponent implements OnInit {\n  @ViewChild('successModal') successModal: SuccessModalComponent;\n  @ViewChild('errorModal') errorModal: ErrorModalComponent;\n\n  employees: Employee[];\n  count: number;\n  limit: number;\n  page: number;\n  total_pages: number;\n\n  inProgress: Array<boolean>;\n  successMessage: string;\n  errorMessage: string;\n\n  createAllowed: boolean;\n  markSupervisorAllowed: boolean;\n  unmarkSupervisorAllowed: boolean;\n\n  constructor(private employeeService: EmployeeService, private authorization: Authorization) {\n\n    this.employees = [];\n    this.limit = 25;\n    this.createAllowed = false;\n    this.inProgress = new Array<boolean>();\n  }\n\n  async ngOnInit() {\n\n    this.getEmployees(1);\n\n    this.createAllowed = await this.authorization.hasAccess({\n      entity: 'employee:employee',\n      action: 'create:post'\n    });\n    this.markSupervisorAllowed = await this.authorization.hasAccess({\n      entity: 'employee:supervisor',\n      action: 'mark:patch'\n    });\n    this.unmarkSupervisorAllowed = await this.authorization.hasAccess({\n      entity: 'employee:supervisor',\n      action: 'unmark:patch'\n    });\n  }\n\n  showActions() {\n\n    return (this.markSupervisorAllowed || this.unmarkSupervisorAllowed);\n  }\n\n  getEmployees(page) {\n\n    this.page = page;\n    this.employeeService.getEmployees(null, this.page, this.limit).then(response => {\n\n      this.count = response.count;\n      this.employees = response.users;\n\n      this.total_pages = this.count / this.limit;\n      this.total_pages += (this.count % this.limit) === 0 ? 0 : 1;\n    });\n  }\n\n  getStatusBadge(status) {\n\n    switch (status) {\n\n      case 1: return 'badge-success';\n      default: return 'badge-default';\n    }\n  }\n\n  markAsSupervisor(index) {\n\n    this.inProgress[index] = true;\n    const self = this;\n    const employee_id = this.employees[index]._id;\n\n    this.employeeService.markAsSupervisor(employee_id)\n      .then(response => {\n\n        self.inProgress[index] = false;\n        self.employees[index].is_supervisor = true;\n        self.successMessage = response.message.text;\n        self.successModal.show();\n\n      }).catch(err => {\n\n        self.inProgress[index] = false;\n        self.errorMessage = err.error.message.text;\n        self.errorModal.show();\n      });\n  }\n\n  unmarkAsSupervisor(index) {\n\n    this.inProgress[index] = true;\n    const self = this;\n    const employee_id = this.employees[index]._id;\n\n    this.employeeService.unmarkAsSupervisor(employee_id)\n      .then(response => {\n\n        self.inProgress[index] = false;\n        self.employees[index].is_supervisor = false;\n        self.successMessage = response.message.text;\n        self.successModal.show();\n\n      }).catch(err => {\n\n        self.inProgress[index] = false;\n        self.errorMessage = err.error.message.text;\n        self.errorModal.show();\n      });\n  }\n}\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"offset-2 col-8\\\">\\n              <form #myForm=\\\"ngForm\\\" (submit)=\\\"postEmployee()\\\">\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-12\\\">\\n                    <label for=\\\"name\\\">Name</label>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"input-group col-4 mb-3\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">First</span>\\n                    </span>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"first-name\\\" placeholder=\\\"First Name\\\" name=\\\"first_name\\\"\\n                      [(ngModel)]=\\\"employee.name.first\\\">\\n                  </div>\\n                  <div class=\\\"input-group col-4 mb-3\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">Middle</span>\\n                    </span>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"middle-name\\\" placeholder=\\\"Middle Name\\\" name=\\\"middle_name\\\"\\n                      [(ngModel)]=\\\"employee.name.middle\\\">\\n                  </div>\\n                  <div class=\\\"input-group col-4 mb-3\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">Last</span>\\n                    </span>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"last-name\\\" placeholder=\\\"Last Name\\\" name=\\\"last_name\\\"\\n                      [(ngModel)]=\\\"employee.name.last\\\">\\n                  </div>\\n                </div>\\n\\n                <!--div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-3\\\">\\n                              <label for=\\\"gender\\\">Gender</label>\\n                              <select name=\\\"gender\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employee.gender\\\">\\n                                <option value=\\\"Male\\\">Male</option>\\n                                <option value=\\\"Female\\\">Female</option>\\n                                <option value=\\\"Other\\\">Other</option>\\n                              </select>\\n                            </div>\\n                          </div>\\n                          <br-->\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-12\\\">\\n                    <label>Contact Info</label>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"input-group col-6 mb-3\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">E-Mail ID</span>\\n                    </span>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"someone@exatask.com\\\"\\n                      [(ngModel)]=\\\"employee.email_id\\\">\\n                    <span class=\\\"input-group-append\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope-o\\\"></i></span>\\n                    </span>\\n                  </div>\\n                  <!--div class=\\\"row col-sm-3\\\">\\n                              <div class=\\\"input-group\\\">\\n                                <span class=\\\"input-group-addon\\\">Phone</span>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" placeholder=\\\"+91-XXXXXXXXX\\\" [(ngModel)]=\\\"employee.phone\\\">\\n                                <span class=\\\"input-group-addon\\\">\\n                                  <i class=\\\"fa fa-phone\\\"></i>\\n                                </span>\\n                              </div>\\n                            </div-->\\n                </div>\\n\\n                <!--label>Date Of Birth</label-->\\n\\n                <!--div class=\\\"row col-sm-6 date-picker\\\"-->\\n\\n                <!--div class=\\\"input-group\\\"-->\\n                <!--span class=\\\"input-group-addon\\\">DOB</span-->\\n                <!--date-picker showClearButton=\\\"false\\\" class=\\\"\\\" formControlName=\\\"date\\\"></date-picker-->\\n                <!--input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"dob\\\" [(ngModel)]=\\\"employee.dob\\\"-->\\n                <!--/div-->\\n                <!--/div-->\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-12\\\">\\n                    <label>Work Info</label>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"input-group col-6 mb-3\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">Employee ID</span>\\n                    </span>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"employee_id\\\" name=\\\"employee_id\\\" [(ngModel)]=\\\"employee.employee_id\\\">\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"input-group col-4 mb-3\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">Department</span>\\n                    </span>\\n                    <select class=\\\"form-control\\\" name=\\\"department\\\" [(ngModel)]=\\\"employee.department_id\\\" (change)=\\\"selectDepartment()\\\">\\n                      <option *ngFor=\\\"let dept of departments\\\" [ngValue]=\\\"dept._id\\\">{{dept.name}}</option>\\n                    </select>\\n                  </div>\\n                  <div class=\\\"input-group col-4 mb-3\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">Designation</span>\\n                    </span>\\n                    <select class=\\\"form-control\\\" name=\\\"designation\\\" [(ngModel)]=\\\"employee.designation\\\" [attr.disabled]=\\\"employee.department_id == undefined ? 'disabled' : null\\\">\\n                      <option *ngFor=\\\"let desig of designations\\\" [ngValue]=\\\"desig\\\">{{desig}}</option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"input-group col-6 mb-3\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">Supervisor</span>\\n                    </span>\\n                    <select class=\\\"form-control\\\" name=\\\"supervisor\\\" [(ngModel)]=\\\"employee.supervisor_id\\\" [attr.disabled]=\\\"employee.department_id == undefined ? 'disabled' : null\\\">\\n                      <option *ngFor=\\\"let super of supervisors\\\" [ngValue]=\\\"super._id\\\">\\n                        {{super.name}} <{{super.email_id}}>\\n                      </option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-actions row\\\">\\n                  <div class=\\\"col-12 text-right\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\n                    <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\" (click)=\\\"myForm.reset()\\\">Reset</button>\\n                  </div>\\n                </div>\\n\\n              </form>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <!--/.row-->\\n</div>\\n\\n<app-success-modal #successModal title=\\\"Success!\\\">\\n  <content>\\n    Added new user successfully.\\n  </content>\\n</app-success-modal>\\n\\n<app-error-modal #errorModal title=\\\"Error!\\\">\\n  <content>\\n    There was an error adding the user.\\n    <br>\\n    <p>Details: {{error}}</p>\\n  </content>\\n</app-error-modal>\"","import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { SuccessModalComponent } from 'shared/components/success-modal/success-modal.component';\nimport { ErrorModalComponent } from 'shared/components/error-modal/error-modal.component';\n\nimport { Employee, EmployeeService } from 'modules/employee/employee.service'\nimport { Department, DepartmentService } from 'modules/organization/department/department.service'\nimport { Name } from 'modules/user/profile/profile.service';\n\n@Component({\n  templateUrl: './manage-employee.component.html',\n  providers: [EmployeeService, DepartmentService],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ManageEmployeeComponent {\n  @ViewChild('successModal') successModal: SuccessModalComponent;\n  @ViewChild('errorModal') errorModal: ErrorModalComponent;\n\n  employee: Employee = new Employee();\n\n  error: string = '';\n\n  departments: Department[] = new Array();\n  designations: string[] = new Array();\n  supervisors: Employee[] = new Array();\n  allDepartmentSupervisors: Map<string, Employee[]> = new Map<string, Employee[]>();\n\n  constructor(private employeeService: EmployeeService, private departmentService: DepartmentService) {\n\n    this.departmentService.getDepartments()\n      .then (depts => {\n          this.departments = depts\n        },\n      err => this.error = 'Error getting department info');\n  }\n\n  postEmployee() {\n\n    this.error = '';\n\n    this.employeeService.postEmployee(this.employee)\n      .then(response => {\n\n        this.employee = new Employee();\n        this.successModal.show('/employee');\n\n      }).catch(err => {\n\n        this.error = err.error.message.text;\n        this.errorModal.show();\n      });\n  }\n\n  selectDepartment() {\n\n    const department_id = this.employee.department_id;\n    const query = new Map<string, any>();\n    query.set('department_id', department_id + ',null');\n    query.set('is_supervisor', true);\n\n    const self = this;\n\n    for (const department of this.departments) {\n\n      if (department._id === department_id) {\n        this.designations = department.designations;\n        break;\n      }\n    }\n\n    if (this.allDepartmentSupervisors.has(department_id)) {\n\n      this.supervisors = this.allDepartmentSupervisors.get(department_id);\n\n    } else {\n\n      this.employeeService.getEmployees(query).then(response => {\n\n        for (const user of response.users) {\n          user.name = Name.getFullName(user.name);\n        }\n        self.supervisors = response.users;\n        self.allDepartmentSupervisors[department_id] = response.users;\n      });\n    }\n  }\n}\n"],"sourceRoot":""}