{"version":3,"sources":["webpack:///./src/app/modules/access-control/access-control.module.ts","webpack:///./src/app/modules/access-control/access-control.routing.ts","webpack:///./src/app/modules/access-control/list-access-control/list-access-control.component.html","webpack:///./src/app/modules/access-control/list-access-control/list-access-control.component.ts","webpack:///./src/app/modules/access-control/manage-access-control/manage-access-control.component.html","webpack:///./src/app/modules/access-control/manage-access-control/manage-access-control.component.ts"],"names":[],"mappings":"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","file":"access-control-access-control-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { TreeviewModule } from 'ngx-treeview';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { AccessControlRoutingModule } from './access-control.routing';\nimport { ApplicationComponentsModule } from 'modules/application-components.module';\nimport { ApplicationPipesModule } from 'modules/application-pipes.module';\nimport { ApplicationDirectivesModule } from 'modules/application-directives.module';\nimport { ListAccessControlComponent } from './list-access-control/list-access-control.component';\nimport { ManageAccessControlComponent } from './manage-access-control/manage-access-control.component';\n\n@NgModule({\n  imports: [\n    AccessControlRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    CommonModule,\n    ApplicationComponentsModule,\n    ApplicationPipesModule,\n    ApplicationDirectivesModule,\n    TreeviewModule,\n    NgSelectModule\n  ],\n  declarations: [\n    ListAccessControlComponent,\n    ManageAccessControlComponent\n  ],\n  providers: [\n  ]\n})\nexport class AccessControlModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthenticationGuard } from 'core/services/authentication.service';\nimport { AuthorizationGuard } from 'core/services/authorization.service';\nimport { ListAccessControlComponent } from './list-access-control/list-access-control.component';\nimport { ManageAccessControlComponent } from './manage-access-control/manage-access-control.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: {\n      title: 'Access Control'\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'list'\n      },\n      {\n        path: 'list',\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        data: {\n          title: 'List',\n          access: {\n            entity: 'access_control:access_control',\n            action: 'find:get'\n          }\n        },\n        component: ListAccessControlComponent\n      },\n      {\n        path: 'add',\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        data: {\n          title: 'Add',\n          access: {\n            entity: 'access_control:access_control',\n            action: 'create:post'\n          }\n        },\n        component: ManageAccessControlComponent\n      },\n      {\n        path: 'edit/:id',\n        data: {\n          title: 'Edit',\n          access: {\n            entity: 'access_control:access_control',\n            action: 'update:put'\n          }\n        },\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        component: ManageAccessControlComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccessControlRoutingModule { }\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row mb-4\\\" *ngIf=\\\"createAllowed\\\">\\n            <div class=\\\"col-12\\\">\\n              <button class=\\\"btn btn-primary pull-right\\\" role='button' type=\\\"button\\\" routerLink=\\\"/access-control/add\\\">+ Add Access Control</button>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"text-center m-5\\\" *ngIf=\\\"access_controls.length === 0\\\">\\n            <h3>No Access Controls in organization</h3>\\n          </div>\\n\\n          <table class=\\\"table table-striped\\\" *ngIf=\\\"access_controls.length > 0\\\">\\n            <thead>\\n              <tr>\\n                <th>Name</th>\\n                <th>Description</th>\\n                <th>Status</th>\\n                <th></th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let access_control of access_controls\\\">\\n                <td>{{access_control.title}}</td>\\n                <td>{{access_control.description}}</td>\\n                <td>{{access_control.access_control_status | constants: 'access_control.status'}}</td>\\n                <td class=\\\"text-center\\\">\\n                  <button class=\\\"btn btn-primary btn-sm\\\" role=\\\"button\\\" type=\\\"button\\\" routerLink=\\\"/access-control/edit/{{access_control._id.toString()}}\\\" *ngIf=\\\"editAllowed\\\">Edit</button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n\\n          <ul class=\\\"pagination justify-content-end\\\" *ngIf=\\\"count > limit\\\">\\n            <li class=\\\"page-item\\\" *ngIf=\\\"total_pages > 1\\\" [class.disabled]=\\\"page == 1\\\">\\n              <button class=\\\"page-link\\\" (click)=\\\"getAccessControls(1)\\\">First</button>\\n            </li>\\n            <li class=\\\"page-item\\\" [class.disabled]=\\\"page == 1\\\">\\n              <button class=\\\"page-link\\\" (click)=\\\"getAccessControls(page - 1)\\\">Prev</button>\\n            </li>\\n            <li class=\\\"page-item active\\\">\\n              <button class=\\\"page-link\\\">{{page}}</button>\\n            </li>\\n            <li class=\\\"page-item\\\" [class.disabled]=\\\"page === total_pages\\\">\\n              <button class=\\\"page-link\\\" (click)=\\\"getAccessControls(page + 1)\\\">Next</button>\\n            </li>\\n            <li class=\\\"page-item\\\" *ngIf=\\\"page < total_pages\\\" [class.disabled]=\\\"page === total_pages\\\">\\n              <button class=\\\"page-link\\\" (click)=\\\"getAccessControls(total_pages)\\\">Last</button>\\n            </li>\\n          </ul>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AccessControlService, AccessControl } from 'modules/access-control/access-control.service';\nimport { Authorization } from 'core/services/authorization.service';\n\n@Component({\n  selector: 'app-access-controls',\n  templateUrl: './list-access-control.component.html',\n  providers: [AccessControlService, Authorization]\n})\nexport class ListAccessControlComponent implements OnInit {\n\n  access_controls: AccessControl[];\n  count: number;\n  limit: number;\n  page: number;\n  total_pages: number;\n\n  createAllowed: boolean;\n  editAllowed: boolean = false;\n\n  constructor(private accessControlService: AccessControlService, private authorization: Authorization) {\n\n    this.access_controls = [];\n    this.limit = 25;\n    this.createAllowed = false;\n  }\n\n  async ngOnInit() {\n\n    this.getAccessControls(1);\n\n    this.createAllowed = await this.authorization.hasAccess({\n      entity: 'access_control:access_control',\n      action: 'create:post'\n    });\n\n    this.editAllowed = await this.authorization.hasAccess({\n      entity: 'access_control:access_control',\n      action: 'update:put'\n    });\n  }\n\n  getAccessControls(page) {\n\n    this.page = page;\n    this.accessControlService.getAccessControls(this.page, this.limit).then(response => {\n\n      this.count = response.count;\n      this.access_controls = response.access_controls;\n\n      this.total_pages = this.count / this.limit;\n      this.total_pages += (this.count % this.limit) === 0 ? 0 : 1;\n    });\n  }\n}\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"offset-2 col-8\\\">\\n              <form #accessControlForm=\\\"ngForm\\\">\\n\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-3 col-form-label\\\">\\n                    <span class=\\\"required\\\">*</span> Title\\n                  </label>\\n                  <div class=\\\"col-9\\\">\\n                    <input type=\\\"text\\\" name=\\\"title\\\" id=\\\"title\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"access_control.title\\\" #title=\\\"ngModel\\\" required minlength=\\\"3\\\" [attr.disabled]=\\\"access_control.access_control_type != 2\\\" />\\n                    <app-inline-error [control]=\\\"title\\\"></app-inline-error>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-3 col-form-label\\\">Description</label>\\n                  <div class=\\\"col-9\\\">\\n                    <textarea name=\\\"description\\\" class=\\\"form-control\\\" id=\\\"description\\\" [(ngModel)]=\\\"access_control.description\\\"></textarea>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-3 col-form-label\\\">\\n                    <span class=\\\"required\\\">*</span> Entities\\n                  </label>\\n\\n                  <div class=\\\"col-9\\\">\\n\\n                    <ngx-treeview [config]=\\\"entitiesConfig\\\" [items]=\\\"entityList\\\" (selectedChange)=\\\"selectedEntity($event)\\\">\\n                    </ngx-treeview>\\n                    <input type=\\\"hidden\\\" name=\\\"entities\\\" [(ngModel)]=\\\"access_control.entities\\\" #entities=\\\"ngModel\\\" app-minitems=\\\"1\\\" />\\n                    <app-inline-error [control]=\\\"entities\\\"></app-inline-error>\\n\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-3 col-form-label\\\">\\n                    <span class=\\\"required\\\">*</span> Users\\n                  </label>\\n\\n                  <div class=\\\"col-9\\\">\\n\\n                    <ng-select name=\\\"users\\\" [loading]=\\\"loadingUsers\\\" [items]=\\\"userList\\\" [multiple]=\\\"true\\\" [addTag]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" [clearable]=\\\"true\\\" [searchable]=\\\"true\\\" [searchFn]=\\\"filterUsers\\\" [clearSearchOnAdd]=\\\"true\\\" [hideSelected]=\\\"true\\\" [disabled]=\\\"disableUsers\\\" bindLabel=\\\"name\\\" bindValue=\\\"user_id\\\" placeholder=\\\"Select Users\\\" notFoundText=\\\"No user found\\\" [(ngModel)]=\\\"access_control.users\\\" #users=\\\"ngModel\\\" required>\\n\\n                      <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\" let-search=\\\"searchTerm\\\">\\n                        {{item.name}} <{{item.email_id}}>\\n                      </ng-template>\\n\\n                    </ng-select>\\n                    <app-inline-error [control]=\\\"users\\\"></app-inline-error>\\n\\n                  </div>\\n\\n                </div>\\n\\n                <div class=\\\"form-actions row\\\">\\n                  <div class=\\\"col-12 text-right\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"postAccessControl()\\\">Submit</button>\\n                    <button type=\\\"reset\\\" class=\\\"btn btn-link\\\" routerLink=\\\"/access-control\\\">Cancel</button>\\n                  </div>\\n                </div>\\n\\n              </form>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-success-modal #successModal title=\\\"Success!\\\">\\n  <content>\\n    <span *ngIf=\\\"!access_control._id || !access_control._id.toString()\\\">Added</span>\\n    <span *ngIf=\\\"access_control._id && access_control._id.toString()\\\">Updated</span>\\n    <span>&nbsp;Access Control successfully.</span>\\n  </content>\\n</app-success-modal>\\n\\n<app-error-modal #errorModal title=\\\"Error!\\\">\\n  <content>\\n    <span>There was an error&nbsp;</span>\\n    <span *ngIf=\\\"!access_control._id || !access_control._id.toString()\\\">creating</span>\\n    <span *ngIf=\\\"access_control._id && access_control._id.toString()\\\">updating</span>\\n    <span>&nbsp;the access control.</span>\\n    <br>\\n    <p>Details: {{error}}</p>\\n  </content>\\n</app-error-modal>\"","import { Component, ViewChild, ViewEncapsulation, OnInit } from '@angular/core';\nimport { TreeviewConfig, TreeviewItem } from 'ngx-treeview';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { SuccessModalComponent } from 'shared/components/success-modal/success-modal.component';\nimport { ErrorModalComponent } from 'shared/components/error-modal/error-modal.component';\nimport { AccessControl, AccessControlService, Entity } from 'modules/access-control/access-control.service'\nimport { EmployeeService } from 'modules/employee/employee.service';\nimport { TYPE } from 'config/constants/access-control';\nimport { Name } from 'modules/user/profile/profile.service';\nimport Utility from 'shared/helpers/utility';\n\nclass UserSearchItem {\n\n  user_id: string;\n  name: string;\n  email_id: string;\n}\n\n@Component({\n  templateUrl: './manage-access-control.component.html',\n  providers: [AccessControlService, EmployeeService],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ManageAccessControlComponent implements OnInit {\n  @ViewChild('successModal') successModal: SuccessModalComponent;\n  @ViewChild('errorModal') errorModal: ErrorModalComponent;\n  @ViewChild('accessControlForm') accessControlForm;\n\n  access_control: AccessControl = new AccessControl();\n  entityList: TreeviewItem[];\n\n  disableUsers: boolean = false;\n  disableEntities: boolean = false;\n\n  loadingUsers: boolean = false;\n  userList: UserSearchItem[] = [];\n\n  entitiesConfig: TreeviewConfig = {\n    hasAllCheckBox: false,\n    hasFilter: false,\n    hasDivider: false,\n    hasCollapseExpand: false,\n    decoupleChildFromParent: false,\n    maxHeight: 500\n  };\n\n  error: string = '';\n\n  constructor(private route: ActivatedRoute, private accessControlService: AccessControlService, private employeeService: EmployeeService) {\n\n    if (this.route.snapshot.params['id']) {\n      this.access_control._id = this.route.snapshot.params['id'];\n    }\n  }\n\n  ngOnInit() {\n\n    if (this.access_control._id) {\n\n      this.__loadAccessControl();\n\n    } else {\n\n      this.__loadEntities();\n      this.__loadUsers();\n    }\n  }\n\n  private __getIndex(list, value, key) {\n\n    let index = -1;\n    for (const i in list) {\n\n      if (list[i][key] === value) {\n        index = parseInt(i, 10);\n        break;\n      }\n    }\n\n    return index;\n  }\n\n  private __checked(id, action, method): boolean {\n\n    if (this.access_control.entities.length === 0) {\n      return false;\n    }\n\n    const action_method = action + ':' + method;\n    for (const entity of this.access_control.entities) {\n\n      if (entity.entity_id === id) {\n        if (entity.actions.indexOf(action_method) !== -1) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  private __loadEntities() {\n\n    const create = Utility.empty(this.access_control._id);\n    this.accessControlService.getEntities()\n      .then(response => {\n\n        const entityList = new Array<TreeviewItem>();\n        let i, j, module_id, entity_id;\n\n        for (const row of response) {\n\n          module_id = 'all-' + row.module.toLowerCase();\n          i = this.__getIndex(entityList, module_id, 'value');\n          if (i === -1) {\n\n            const newEntity = new TreeviewItem({\n              value: module_id,\n              text: row.module,\n              collapsed: true,\n              disabled: this.disableEntities\n            });\n            if (create) {\n              newEntity.checked = false;\n            }\n            entityList.push(newEntity);\n            i = entityList.length - 1;\n          }\n\n          entity_id = row.module.toLowerCase() + '--' + row._id;\n          j = this.__getIndex(entityList[i].children, entity_id, 'value');\n          if (j === -1) {\n\n            const entityItem = new TreeviewItem({\n              value: row.module.toLowerCase() + '--' + row._id,\n              text: row.entity,\n              collapsed: true,\n              disabled: this.disableEntities\n            });\n            if (create) {\n              entityItem.checked = false;\n            }\n            if (entityList[i].children) {\n              entityList[i].children.push(entityItem);\n            } else {\n              entityList[i].children = new Array<TreeviewItem>(entityItem);\n            }\n\n            j = entityList[i].children.length - 1;\n          }\n\n          for (const action of row.actions) {\n\n            const actionItem = new TreeviewItem({\n              value: row._id + '--' + action.action + ':' + action.method,\n              text: action.title,\n              checked: this.__checked(row._id, action.action, action.method),\n              disabled: this.disableEntities\n            });\n\n            if (entityList[i].children[j].children) {\n              entityList[i].children[j].children.push(actionItem);\n            } else {\n              entityList[i].children[j].children = new Array<TreeviewItem>(actionItem);\n            }\n          }\n        }\n\n        this.entityList = entityList;\n\n      }).catch(err => {\n\n        this.error = err.error.message.text;\n        this.errorModal.show();\n      });\n  }\n\n  selectedEntity(event) {\n\n    const self = this;\n    self.access_control.entities = [];\n    this.accessControlForm.controls.entities.markAsTouched();\n\n    event.map(entity => {\n\n      const entityComponents = entity.split('--');\n      let index = self.__getIndex(self.access_control.entities, entityComponents[0], 'entity_id');\n\n      if (index === -1) {\n        self.access_control.entities.push({\n          entity_id: entityComponents[0],\n          actions: []\n        });\n        index = self.access_control.entities.length - 1;\n      }\n      self.access_control.entities[index].actions.push(entityComponents[1]);\n    });\n  }\n\n  private __loadUsers() {\n\n    this.loadingUsers = true;\n    this.employeeService.getEmployees(null, 0, 0, ['email_id', 'name'])\n      .then(response => {\n\n        this.userList = response.users.map(user => {\n\n          const item = new UserSearchItem();\n          item.user_id = user._id;\n          item.email_id = user.email_id;\n          item.name = Name.getFullName(user.name);\n          return item;\n        });\n        this.loadingUsers = false;\n\n      }).catch(err => {\n\n        this.error = err.error.message.text;\n        this.errorModal.show();\n      });\n  }\n\n  private __loadAccessControl() {\n\n    this.accessControlService.getAccessControl(this.access_control._id)\n      .then(access_control => {\n\n        this.access_control.title = access_control.title;\n        this.access_control.description = access_control.description;\n        this.access_control.access_control_type = access_control.access_control_type;\n\n        this.access_control.users = access_control.users.map(function (user) {\n          return user.user_id;\n        });\n\n        this.access_control.entities = access_control.entities.map(function (entity) {\n\n          const newEntity = new Entity();\n          newEntity.entity_id = entity.entity_id;\n          newEntity.actions = entity.actions.map(function (action) {\n            return action.action + ':' + action.method;\n          });\n          return newEntity;\n        });\n\n        if (access_control.access_control_type === TYPE.LOCKED_ENTITY) {\n          this.disableEntities = true;\n        } else if (access_control.access_control_type === TYPE.LOCKED_USER) {\n          this.disableUsers = true;\n        }\n\n        this.__loadEntities();\n        if (access_control.access_control_type !== TYPE.LOCKED_USER) {\n          this.__loadUsers();\n        } else {\n\n          this.userList = access_control.users.map(function (user) {\n\n            const item = new UserSearchItem();\n            item.name = user.name;\n            item.user_id = user.user_id;\n            return item;\n          });\n        }\n      });\n  }\n\n  postAccessControl() {\n\n    this.error = '';\n    if (this.access_control._id && this.access_control._id.toString()) {\n\n      this.accessControlService.putAccessControl(this.access_control)\n        .then(response => {\n\n          this.successModal.show('/access-control');\n\n        }).catch(err => {\n\n          this.error = err.error.message.text;\n          this.errorModal.show();\n        });\n\n    } else {\n\n      this.accessControlService.postAccessControl(this.access_control)\n        .then(response => {\n\n          this.successModal.show('/access-control');\n\n        }).catch(err => {\n\n          this.error = err.error.message.text;\n          this.errorModal.show();\n        });\n    }\n  }\n\n  filterUsers(term: string, item: UserSearchItem) {\n\n    const regex = new RegExp(term, 'i');\n    return item.email_id.match(regex) || item.name.match(regex);\n  }\n}\n"],"sourceRoot":""}