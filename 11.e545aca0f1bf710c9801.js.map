{"version":3,"sources":["webpack:///./src/app/config/constants/wfh-policy.ts","webpack:///./src/app/modules/work-from-home/policy/list-wfh-policy/list-wfh-policy.component.html","webpack:///./src/app/modules/work-from-home/policy/list-wfh-policy/list-wfh-policy.component.ts","webpack:///./src/app/modules/work-from-home/policy/manage-wfh-policy/manage-wfh-policy.component.html","webpack:///./src/app/modules/work-from-home/policy/manage-wfh-policy/manage-wfh-policy.component.ts","webpack:///./src/app/modules/work-from-home/policy/wfh-policy.module.ts","webpack:///./src/app/modules/work-from-home/policy/wfh-policy.routing.ts","webpack:///./src/app/modules/work-from-home/policy/wfh-policy.service.ts"],"names":[],"mappings":"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","file":"11.e545aca0f1bf710c9801.js","sourcesContent":["export enum STATUS {\n  INACTIVE, ACTIVE, SCHEDULED, EXPIRED, DELETED\n}\n\nexport enum OPERATION {\n  CREATE = 1,\n  ACTIVATE, EXPIRE\n}\n\nexport enum PERIOD {\n  FOREVER = 1,\n  WEEKLY, MONTHLY, QUARTERLY, YEARLY\n}\n\nexport enum APPLIES_TO_TYPE {\n  EVERYONE = 1,\n  EVERYONE_ELSE, EMPLOYEE_TYPES, DEPARTMENTS\n}\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col-12\\\">\\n              <button class=\\\"btn btn-primary pull-right\\\" role='button' type=\\\"button\\\" routerLink=\\\"/work-from-home/policy/add\\\" (click)=\\\"exatask.trackEvent('work-from-home', 'create', 'policy')\\\">+ Add WFH Policy</button>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"text-center m-5\\\" *ngIf=\\\"loading\\\">\\n            <h3><i class=\\\"fa fa-refresh fa-spin\\\"></i> Loading WFH Policies</h3>\\n          </div>\\n\\n          <div class=\\\"text-center m-5\\\" *ngIf=\\\"!loading && wfh_policies.length == 0\\\">\\n            <h3>No Work from Home Policies in organization</h3>\\n          </div>\\n\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-striped\\\" *ngIf=\\\"!loading && wfh_policies.length > 0\\\">\\n              <thead>\\n              <tr>\\n                <th>#</th>\\n                <th>Title</th>\\n                <th>Duration</th>\\n                <th>Applies To</th>\\n                <th>Approval</th>\\n                <th>Allocation Period<br/>(Count)</th>\\n                <th>Status</th>\\n              </tr>\\n              </thead>\\n              <tbody>\\n              <tr *ngFor=\\\"let policy of wfh_policies; let i = index\\\">\\n                <td>\\n                  <span>{{i+1}}.</span>\\n                </td>\\n                <td>{{policy.title}}</td>\\n                <td>\\n                    <u>Start Date</u> - {{policy.start_date | date: 'dd MMMM, yyyy'}}\\n                    <br /><u>End Date</u> - {{policy.end_date | date: 'dd MMMM, yyyy'}}\\n                </td>\\n                <td>\\n                  <span *ngIf=\\\"policy.applies_to.everyone\\\">Everyone<br/></span>\\n                  <span *ngIf=\\\"policy.applies_to.everyone_else\\\">Everyone else<br/></span>\\n                  <span *ngIf=\\\"policy.applies_to.employee_types && policy.applies_to.employee_types.length > 0\\\">\\n                      <u>Employee Types:</u>\\n                      <span *ngFor=\\\"let type of policy.applies_to.employee_types; let last = last\\\">\\n                        {{type | constants: 'user.employee_type'}}<span *ngIf=\\\"!last\\\">, </span>\\n                      </span>\\n                      <br/>\\n                    </span>\\n                  <span *ngIf=\\\"policy.applies_to.departments && policy.applies_to.departments.length > 0\\\">\\n                      <u>Departments:</u>\\n                      <span *ngFor=\\\"let department of policy.applies_to.departments; let last = last\\\">\\n                        {{department.name}}<span *ngIf=\\\"!last\\\">, </span>\\n                      </span>\\n                      <br/>\\n                    </span>\\n                </td>\\n                <td>\\n                    <span *ngIf=\\\"!policy.approval || !policy.approval.required\\\">Not Required</span>\\n                    <span *ngIf=\\\"policy.approval && policy.approval.required\\\">\\n                      <span *ngIf=\\\"policy.approval.from_supervisor\\\">From Supervisor</span>\\n                      <br/>\\n                      <span *ngIf=\\\"policy.approval.users && policy.approval.users.length > 0\\\">From selected Users</span>\\n                    </span>\\n                </td>\\n                <td>\\n                  {{ policy.allowed_period | constants: 'wfh_policy.allowed_period' }}\\n                  <span *ngIf=\\\"policy.allowed_period != 1\\\">({{policy.allowed_count}})</span>\\n                </td>\\n                <td>\\n                    <span class=\\\"badge\\\" [ngClass]=\\\"getStatusBadge(policy.wfh_policy_status)\\\">\\n                      {{policy.wfh_policy_status | constants: 'wfh_policy.status'}}\\n                    </span>\\n                </td>\\n              </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { WfhPolicy, WfhPolicyService } from 'modules/work-from-home/policy/wfh-policy.service';\nimport { STATUS } from 'config/constants/wfh-policy';\nimport { ExaTask } from '../../../../core/providers/exatask.service';\n\n@Component({\n  selector: 'app-list-wfh-policy',\n  templateUrl: './list-wfh-policy.component.html',\n  providers: [ WfhPolicyService ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ListWfhPolicyComponent implements OnInit {\n\n  wfh_policies: WfhPolicy [];\n  error: string;\n  loading: boolean = false;\n\n  constructor(\n    private wfhPolicyService: WfhPolicyService,\n    public exatask: ExaTask\n  ) {\n\n    this.error = '';\n    this.exatask.setTitle('WFH Policy List');\n  }\n\n  ngOnInit() {\n\n    const status = [\n      STATUS.ACTIVE,\n      STATUS.SCHEDULED\n    ];\n    const query = new Map<string, any>();\n    query.set('wfh_policy_status', status.join(','));\n\n    this.loading = true;\n\n    this.wfhPolicyService.getPolicy().then(policies => {\n\n      this.loading = false;\n      this.wfh_policies = policies;\n\n    }).catch(err => {\n\n      this.error = err;\n    });\n  }\n\n  getStatusBadge(status) {\n\n    switch (status) {\n\n      case STATUS.ACTIVE: return 'badge-success';\n      case STATUS.SCHEDULED: return 'badge-warning';\n      case STATUS.EXPIRED: return 'badge-danger';\n      default: return 'badge-default';\n    }\n  }\n}\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row mb-3\\\">\\n            <div class=\\\"col-12 text-right\\\">\\n              <span class=\\\"required\\\">*</span> Required Fields\\n            </div>\\n          </div>\\n\\n          <form #wfhPolicyForm=\\\"ngForm\\\">\\n\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"title\\\">\\n                <span class=\\\"required\\\">*</span> Title\\n              </label>\\n              <div class=\\\"col-md-9\\\">\\n                <input type=\\\"text\\\" name=\\\"title\\\" id=\\\"title\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"wfhPolicy.title\\\" />\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-form-label col-md-3\\\" for=\\\"start-date\\\">\\n                <span class=\\\"required\\\">*</span>&nbsp;Start Date\\n              </label>\\n              <div class=\\\"col-md-3 input-group\\\">\\n                <input type=\\\"text\\\" name=\\\"date\\\" class=\\\"form-control\\\" id=\\\"start-date\\\" [(ngModel)]=\\\"wfhPolicy.start_date\\\" bsDatepicker #startDate=\\\"bsDatepicker\\\" [bsConfig]=\\\"sdConfig\\\" required>\\n                <span class=\\\"input-group-append\\\">\\n                  <button class=\\\"btn\\\" (click)=\\\"startDate.show()\\\" [attr.aria-expanded]=\\\"startDate.isOpen\\\">\\n                    <i class=\\\"fa fa-calendar\\\"></i>\\n                  </button>\\n                </span>\\n              </div>\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"end-date\\\">\\n                <span class=\\\"required\\\">*</span> End Date\\n              </label>\\n              <div class=\\\"col-md-3 input-group\\\">\\n                <input type=\\\"text\\\" name=\\\"end-date\\\" class=\\\"form-control\\\" id=\\\"end-date\\\" [(ngModel)]=\\\"wfhPolicy.end_date\\\" bsDatepicker #endDate=\\\"bsDatepicker\\\" [bsConfig]=\\\"edConfig\\\">\\n                <span class=\\\"input-group-append\\\">\\n                  <button class=\\\"btn\\\" (click)=\\\"endDate.show()\\\" [attr.aria-expanded]=\\\"endDate.isOpen\\\">\\n                    <i class=\\\"fa fa-calendar\\\"></i>\\n                  </button>\\n                </span>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n\\n              <label class=\\\"col-md-3 col-form-label\\\">\\n                <span class=\\\"required\\\">*</span> Applies To\\n              </label>\\n              <div class=\\\"col-md-9\\\">\\n                <div class=\\\"row form-group\\\" *ngFor=\\\"let apply_to of applies_to; let i = index; let last = last;\\\">\\n\\n                  <div class=\\\"col-md-4\\\">\\n                    <select name=\\\"applies-to-{{i}}\\\" id=\\\"applies-to-{{i}}\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"apply_to.applies_to_type\\\">\\n                      <option *ngFor=\\\"let type of 'wfh_policy.applies_to_type' | constantsarray\\\" [value]=\\\"type.key\\\">\\n                        {{ type.value }}\\n                      </option>\\n                    </select>\\n                  </div>\\n\\n                  <div class=\\\"col-md-7\\\" *ngIf=\\\"displayAppliesToData(apply_to.applies_to_type)\\\">\\n\\n                    <ng-select name=\\\"employee_types\\\" [items]=\\\"'user.employee_type' | constantsarray\\\" [multiple]=\\\"true\\\" [addTag]=\\\"false\\\"\\n                               [closeOnSelect]=\\\"false\\\" [clearable]=\\\"true\\\" [searchable]=\\\"true\\\" [clearSearchOnAdd]=\\\"true\\\" [hideSelected]=\\\"true\\\"\\n                               bindLabel=\\\"value\\\" bindValue=\\\"key\\\" placeholder=\\\"Select Employee Types\\\" [(ngModel)]=\\\"apply_to.employee_types\\\"\\n                               *ngIf=\\\"apply_to.applies_to_type == 3\\\">\\n\\n                      <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\" let-search=\\\"searchTerm\\\">\\n                        {{item.value}}\\n                      </ng-template>\\n\\n                    </ng-select>\\n\\n                    <ng-select name=\\\"departments\\\" [loading]=\\\"loading_departments\\\" [items]=\\\"department_list\\\" [multiple]=\\\"true\\\" [addTag]=\\\"false\\\"\\n                               [closeOnSelect]=\\\"false\\\" [clearable]=\\\"true\\\" [searchable]=\\\"true\\\" [clearSearchOnAdd]=\\\"true\\\" [hideSelected]=\\\"true\\\"\\n                               bindLabel=\\\"name\\\" bindValue=\\\"department_id\\\" placeholder=\\\"Select Departments\\\" notFoundText=\\\"No department found\\\"\\n                               [(ngModel)]=\\\"apply_to.departments\\\" *ngIf=\\\"apply_to.applies_to_type == 4\\\">\\n\\n                      <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\" let-search=\\\"searchTerm\\\">\\n                        {{item.name}}\\n                      </ng-template>\\n\\n                    </ng-select>\\n\\n                  </div>\\n\\n                  <div class=\\\"col-md-1\\\">\\n                    <button *ngIf=\\\"last && !appliesToDisabled()\\\" class=\\\"btn\\\" (click)=\\\"exatask.trackEvent('work-from-home', 'add-applies-to'); addAppliesTo()\\\">\\n                      <i class=\\\"fa fa-plus\\\"></i>\\n                    </button>\\n                    <button *ngIf=\\\"!last\\\" class=\\\"btn\\\" (click)=\\\"exatask.trackEvent('work-from-home', 'remove-applies-to'); removeAppliesTo(i)\\\">\\n                      <i class=\\\"fa fa-close\\\"></i>\\n                    </button>\\n                  </div>\\n\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"period\\\">\\n                <span class=\\\"required\\\">*</span>&nbsp;Allocation Period\\n              </label>\\n              <div class=\\\"col-md-3\\\">\\n                <select name=\\\"period\\\" id=\\\"period\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"wfhPolicy.allowed_period\\\">\\n                  <option *ngFor=\\\"let period of 'wfh_policy.allowed_period' | constantsarray\\\" [value]=\\\"period.key\\\">\\n                    {{ period.value }}\\n                  </option>\\n                </select>\\n              </div>\\n\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"count\\\">\\n                <span class=\\\"required\\\">*</span>&nbsp;Count\\n              </label>\\n              <div class=\\\"col-md-3\\\">\\n                <input type=\\\"text\\\" name=\\\"count\\\" id=\\\"count\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"wfhPolicy.allowed_count\\\" [disabled]=\\\"wfhPolicy.allowed_period == 1\\\" />\\n              </div>\\n\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"allowed-back-days\\\">\\n                Allowed Back Days&nbsp;\\n                <i class=\\\"fa fa-question-circle\\\" tooltip=\\\"WFH can be applied these many days after taking WFH\\\" placement=\\\"bottom\\\"></i>\\n              </label>\\n              <div class=\\\"col-md-3\\\">\\n                <input type=\\\"text\\\" name=\\\"allowed-back-days\\\" id=\\\"allowed-back-days\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"wfhPolicy.allowed_back_days\\\" />\\n              </div>\\n\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"loaned-count\\\">\\n                Loaned Count&nbsp;\\n                <i class=\\\"fa fa-question-circle\\\" tooltip=\\\"Employee can apply for these many WFH after the limit is exhausted\\\" placement=\\\"bottom\\\"></i>\\n              </label>\\n              <div class=\\\"col-md-3\\\">\\n                <input type=\\\"text\\\" name=\\\"loaned-count\\\" id=\\\"loaned-count\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"wfhPolicy.loaned_count\\\" />\\n              </div>\\n\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n\\n              <label class=\\\"col-md-3 col-form-label\\\">Approval</label>\\n              <div class=\\\"col-md-3\\\">\\n                <div class=\\\"form-check\\\">\\n                  <input type=\\\"checkbox\\\" name=\\\"approval-supervisor\\\" class=\\\"form-check-input\\\" id=\\\"approval-supervisor\\\" value=\\\"true\\\" [(ngModel)]=\\\"wfhPolicy.approval.from_supervisor\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"approval-supervisor\\\">Approval from Supervisor</label>\\n                </div>\\n              </div>\\n\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n\\n              <div class=\\\"offset-md-3 col-md-3\\\">\\n                <div class=\\\"form-check\\\">\\n                  <input type=\\\"checkbox\\\" name=\\\"approval-users\\\" class=\\\"form-check-input\\\" id=\\\"approval-users\\\" value=\\\"true\\\" [(ngModel)]=\\\"from_users\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"approval-users\\\">Approval from selected Users</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"col-md-6\\\">\\n                <ng-select name=\\\"users\\\" [loading]=\\\"loading_users\\\" [items]=\\\"user_list\\\" [multiple]=\\\"true\\\" [addTag]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" [clearable]=\\\"true\\\" [searchable]=\\\"true\\\" [searchFn]=\\\"filterUsers\\\" [clearSearchOnAdd]=\\\"true\\\" [hideSelected]=\\\"true\\\" bindLabel=\\\"name\\\"  bindValue=\\\"user_id\\\" placeholder=\\\"Select Users\\\" notFoundText=\\\"No user found\\\" [disabled]=\\\"!from_users\\\" [(ngModel)]=\\\"wfhPolicy.approval.users\\\" #users=\\\"ngModel\\\">\\n\\n                  <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\" let-search=\\\"searchTerm\\\">\\n                    {{item.name}} <{{item.email_id}}>\\n                  </ng-template>\\n\\n                </ng-select>\\n              </div>\\n\\n            </div>\\n\\n            <div class=\\\"form-actions row mt-4\\\">\\n              <div class=\\\"col-12\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-link pull-right\\\" routerLink=\\\"/work-from-home/policy\\\" (click)=\\\"exatask.trackEvent('work-from-home', 'cancel', 'policy')\\\">Cancel</button>\\n                <button [disabled]=\\\"!wfhPolicyForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"exatask.trackEvent('work-from-home', 'submit', 'policy'); saveWfhPolicy()\\\">Submit</button>\\n              </div>\\n            </div>\\n\\n          </form>\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n<app-success-modal #successModal title=\\\"Success!\\\">\\n  <div content>\\n    Updated WFH Policy Successfully!\\n  </div>\\n</app-success-modal>\\n<app-error-modal #errorModal title=\\\"Error!\\\">\\n  <div content>\\n    There was an error updating WFH Policy. {{error}}\\n    <ul>\\n      <li *ngFor=\\\"let attribute of invalid_attributes \\\">{{attribute}}</li>\\n    </ul>\\n  </div>\\n</app-error-modal>\"","import { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { SuccessModalComponent } from 'shared/components/success-modal/success-modal.component';\nimport { ErrorModalComponent } from 'shared/components/error-modal/error-modal.component';\nimport { find, matchesProperty } from 'lodash';\n\nimport { EmployeeService } from 'modules/employee/employee.service';\nimport { WfhPolicy, WfhPolicyService } from 'modules/work-from-home/policy/wfh-policy.service';\nimport { Name } from 'modules/user/profile/profile.service';\nimport { BsDatepickerDirective } from 'ngx-bootstrap';\nimport { DatePipe } from '@angular/common';\nimport { ExaTask } from '../../../../core/providers/exatask.service';\nimport { APPLIES_TO_TYPE } from '../../../../config/constants/leave-policy';\nimport { DepartmentService } from '../../../organization/department/department.service';\nimport { AppliesTo } from '../../../leave/policy/leave-policy.service';\n\nclass UserSearchItem {\n\n  user_id: string;\n  name: string;\n  email_id: string;\n}\n\nclass DepartmentSearchItem {\n\n  department_id: string;\n  name: string;\n}\n\nclass AppliesToInput {\n\n  applies_to_type: number;\n  employee_types: Array<number>;\n  departments: Array<string>;\n}\n\nconst error_map = {\n  start_date: 'Start Date',\n  end_date: 'End Date',\n  count: 'Allowed Count',\n  allowed_period: 'Allowed Period',\n  loaned_count: 'Loaned Count',\n  allowed_back_days: 'Allowed Back Days'\n};\n\n@Component({\n  selector: 'app-manage-wfh-policy',\n  templateUrl: './manage-wfh-policy.component.html',\n  providers: [ WfhPolicyService, EmployeeService, DepartmentService, DatePipe ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ManageWfhPolicyComponent implements OnInit {\n  @ViewChild('errorModal') errorModal: ErrorModalComponent;\n  @ViewChild('successModal') successModal: SuccessModalComponent;\n  @ViewChild('startDate') startDate: BsDatepickerDirective;\n  @ViewChild('endDate') endDate: BsDatepickerDirective;\n\n  wfhPolicy: WfhPolicy;\n  error: string;\n  invalid_attributes: Array<string>;\n  applies_to: Array<AppliesToInput>;\n\n  from_users: boolean = false;\n  user_list: UserSearchItem[] = [];\n  department_list: DepartmentSearchItem[] = [];\n  loading_users: boolean = false;\n  loading_departments: boolean = false;\n\n  sdConfig: Object;\n  edConfig: Object;\n\n  constructor(\n    private wfhPolicyService: WfhPolicyService,\n    private employeeService: EmployeeService,\n    private departmentService: DepartmentService,\n    private datePipe: DatePipe,\n    public exatask: ExaTask\n  ) {\n\n    this.exatask.setTitle('Manage WFH Policy');\n    this.wfhPolicy = new WfhPolicy();\n    this.wfhPolicy.title = 'WFH Policy dt. ' + this.datePipe.transform(new Date(), 'dd MMMM, yyyy');\n    this.error = '';\n\n    this.applies_to = new Array<AppliesToInput>();\n    this.applies_to.push(new AppliesToInput());\n    this.invalid_attributes = [];\n\n    const current_date = new Date();\n    current_date.setDate(current_date.getDate() + 1);\n    this.sdConfig = {\n      minDate: current_date,\n      dateInputFormat: 'YYYY-MM-DD',\n      containerClass: 'theme-blue',\n      showWeekNumbers: false\n    };\n    this.edConfig = {\n      minDate: current_date,\n      dateInputFormat: 'YYYY-MM-DD',\n      containerClass: 'theme-blue',\n      showWeekNumbers: false\n    };\n  }\n\n  ngOnInit() {\n\n    this.__loadUsers();\n    this.__loadDepartments();\n  }\n\n  private __validate() {\n    return true;\n  }\n\n  private __loadUsers() {\n\n    this.loading_users = true;\n    this.employeeService.getEmployees(null, 0, 0, ['_id', 'email_id', 'name'])\n      .then(response => {\n\n        this.user_list = response.users.map(user => {\n\n          const item = new UserSearchItem();\n          item.user_id = user._id;\n          item.email_id = user.email_id;\n          item.name = Name.getFullName(user.name);\n          return item;\n        });\n        this.loading_users = false;\n\n      }).catch(err => {\n\n        this.error = err.error.message.text;\n        this.errorModal.show();\n      });\n  }\n\n  private __loadDepartments() {\n\n    this.loading_departments = true;\n    this.departmentService.getDepartments(null, ['_id', 'name'])\n      .then(response => {\n\n        this.department_list = response.map(department => {\n\n          const item = new DepartmentSearchItem();\n          item.department_id = department._id;\n          item.name = department.name;\n          return item;\n        });\n        console.log(this.department_list);\n        this.loading_departments = false;\n\n      }).catch(err => {\n\n      this.error = err.error.message.text;\n      this.errorModal.show();\n    });\n  }\n\n  private __sanitizeWfhPolicy(wfhPolicy) {\n\n    if (wfhPolicy.start_date !== undefined) {\n      wfhPolicy.start_date = this.datePipe.transform(wfhPolicy.start_date, 'yyyy-MM-dd');\n    }\n\n    if (wfhPolicy.end_date !== undefined) {\n      wfhPolicy.end_date = this.datePipe.transform(wfhPolicy.end_date, 'yyyy-MM-dd');\n    }\n\n    if (wfhPolicy.allowed_count === undefined) {\n      wfhPolicy.allowed_count = null;\n    }\n\n    const approval = wfhPolicy.approval;\n    if (approval && (approval.from_supervisor || (approval.users && approval.users.length > 0))) {\n      wfhPolicy.approval.required = true;\n    } else {\n      wfhPolicy.approval = {\n        required: false\n      };\n    }\n\n    const wfh_apply_to = new AppliesTo();\n    for (const apply_to of this.applies_to) {\n\n      switch (parseInt(apply_to.applies_to_type.toString(), 10)) {\n\n        case APPLIES_TO_TYPE.EVERYONE:\n          wfh_apply_to.everyone = true;\n          break;\n\n        case APPLIES_TO_TYPE.EVERYONE_ELSE:\n          wfh_apply_to.everyone_else = true;\n          break;\n\n        case APPLIES_TO_TYPE.EMPLOYEE_TYPES:\n          wfh_apply_to.employee_types = apply_to.employee_types;\n          break;\n\n        case APPLIES_TO_TYPE.DEPARTMENTS:\n          const departments = new Array<DepartmentSearchItem>();\n          for (const department_id of apply_to.departments) {\n            departments.push(find(this.department_list, matchesProperty('department_id', department_id)));\n          }\n          wfh_apply_to.departments = departments;\n          break;\n      }\n    }\n    wfhPolicy.applies_to = wfh_apply_to;\n\n    return wfhPolicy;\n  }\n\n  filterUsers(term: string, item: UserSearchItem) {\n\n    const regex = new RegExp(term, 'i');\n    return item.email_id.match(regex) || item.name.match(regex);\n  }\n\n  saveWfhPolicy() {\n\n    if (this.__validate()) {\n\n      let wfh_policy = JSON.parse(JSON.stringify(this.wfhPolicy));\n      wfh_policy = this.__sanitizeWfhPolicy(wfh_policy);\n      this.error = '';\n      this.invalid_attributes = [];\n\n      this.wfhPolicyService.postPolicy(wfh_policy).then(data => {\n\n        this.successModal.show('/work-from-home/policy');\n\n      }).catch(err => {\n\n        this.error = err.error.message.text;\n        if (err.error.invalid_attributes) {\n          for (const key in err.error.invalid_attributes) {\n            if (err.error.invalid_attributes.hasOwnProperty(key)) {\n              this.invalid_attributes.push(error_map[key] ? error_map[key] : err.error.invalid_attributes[key]);\n            }\n          }\n        }\n        this.errorModal.show();\n      });\n    }\n  }\n\n  displayAppliesToData(applies_to_type) {\n\n    const allowed_applies_to = [\n      APPLIES_TO_TYPE.EMPLOYEE_TYPES,\n      APPLIES_TO_TYPE.DEPARTMENTS\n    ];\n\n    return allowed_applies_to.indexOf(parseInt(applies_to_type, 10)) !== -1;\n  }\n\n  appliesToDisabled() {\n\n    if (this.applies_to.length >= 4) {\n      return true;\n    }\n\n    for (const applies_to of this.applies_to) {\n\n      if (!applies_to.applies_to_type) {\n        continue;\n      }\n      if (parseInt(applies_to.applies_to_type.toString(), 10) === APPLIES_TO_TYPE.EVERYONE ||\n        parseInt(applies_to.applies_to_type.toString(), 10) === APPLIES_TO_TYPE.EVERYONE_ELSE) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addAppliesTo() {\n    this.applies_to.push(new AppliesToInput());\n  }\n\n  removeAppliesTo(index) {\n    this.applies_to.splice(index, 1);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { CollapseModule, BsDatepickerModule, TooltipModule } from 'ngx-bootstrap';\n\nimport { WfhPolicyRoutingModule } from './wfh-policy.routing';\nimport { ManageWfhPolicyComponent } from './manage-wfh-policy/manage-wfh-policy.component';\nimport { ApplicationComponentsModule } from 'modules/application-components.module';\nimport { ApplicationPipesModule } from 'modules/application-pipes.module';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ListWfhPolicyComponent } from './list-wfh-policy/list-wfh-policy.component';\n\n@NgModule({\n  imports: [\n    WfhPolicyRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    CommonModule,\n    CollapseModule,\n    ApplicationComponentsModule,\n    ApplicationPipesModule,\n    BsDatepickerModule,\n    NgSelectModule,\n    TooltipModule\n  ],\n  declarations: [\n    ManageWfhPolicyComponent,\n    ListWfhPolicyComponent\n  ],\n  providers: [\n  ]\n})\nexport class WfhPolicyModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ManageWfhPolicyComponent } from './manage-wfh-policy/manage-wfh-policy.component';\nimport { AuthenticationGuard } from 'core/services/authentication.service';\nimport { AuthorizationGuard } from 'core/services/authorization.service';\nimport { ListWfhPolicyComponent } from './list-wfh-policy/list-wfh-policy.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: {\n      title: 'Policy'\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'list'\n      },\n      {\n        path: 'list',\n        data: {\n          title: 'List',\n          access: {\n            module: 'work-from-home',\n            entity: 'policy',\n            action: 'find'\n          }\n        },\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        component: ListWfhPolicyComponent\n      },\n      {\n        path: 'add',\n        data: {\n          title: 'Add',\n          access: {\n            module: 'work-from-home',\n            entity: 'policy',\n            action: 'create'\n          }\n        },\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        component: ManageWfhPolicyComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WfhPolicyRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Api } from 'core/services/api.service';\nimport { PERIOD, STATUS } from 'config/constants/wfh-policy';\nimport { DepartmentAppliesTo } from '../../leave/policy/leave-policy.service';\n\nexport class WfhApproval {\n\n  required: boolean = false;\n  from_supervisor: boolean = false;\n  users: string[];\n}\n\nexport class AppliesTo {\n\n  everyone: boolean;\n  everyone_else: boolean;\n  employee_types: Array<number>;\n  departments: Array<string | DepartmentAppliesTo>;\n}\n\nexport class WfhPolicy {\n\n  title: string;\n  start_date: Date;\n  end_date: Date;\n  allowed_count: number;\n  allowed_period: PERIOD;\n  allowed_back_days?: number;\n  loaned_count?: number;\n  applies_to: AppliesTo;\n  approval: WfhApproval = new WfhApproval();\n  wfh_policy_status: STATUS;\n}\n\nexport class WfhPolicyElement extends WfhPolicy {\n\n  _id: string;\n  organization_id: string;\n  start_date: Date;\n  end_date: Date;\n  wfh_policy_status: STATUS;\n}\n\n@Injectable()\nexport class WfhPolicyService extends Api {\n\n  private _base_url: string = '/wfhs/policies';\n\n  getPolicy(query ?: Map<string, any>): Promise<WfhPolicyElement[]> {\n\n    return this.get(this._base_url, query)\n      .then(response => response['data'] as WfhPolicyElement[]);\n  }\n\n  postPolicy(policy: WfhPolicy): Promise<Object> {\n\n    return this.post(this._base_url, policy)\n      .then(response => response);\n  }\n}\n"],"sourceRoot":""}