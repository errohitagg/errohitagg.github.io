{"version":3,"sources":["webpack:///./src/app/modules/employee/employee-detail/employee-detail.component.html","webpack:///./src/app/modules/employee/employee-detail/employee-detail.component.ts","webpack:///./src/app/modules/employee/employee.module.ts","webpack:///./src/app/modules/employee/employee.routing.ts","webpack:///./src/app/modules/employee/list-employee/list-employee.component.html","webpack:///./src/app/modules/employee/list-employee/list-employee.component.ts","webpack:///./src/app/modules/employee/manage-employee/manage-employee.component.html","webpack:///./src/app/modules/employee/manage-employee/manage-employee.component.ts","webpack:///./src/app/modules/employee/upload-employee/upload-employee.component.html","webpack:///./src/app/modules/employee/upload-employee/upload-employee.component.ts"],"names":[],"mappings":"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","file":"12.84314394a9f0d9cb6735.js","sourcesContent":["module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n\\n      <div class=\\\"text-center m-5\\\" *ngIf=\\\"loading\\\">\\n        <h3><i class=\\\"fa fa-refresh fa-spin\\\"></i> Loading Employee Details</h3>\\n      </div>\\n\\n      <tabset *ngIf=\\\"!loading\\\">\\n\\n        <tab heading=\\\"Employee Information\\\">\\n          <table class=\\\"table table-striped\\\">\\n\\n            <tr>\\n              <th>Name</th>\\n              <td colspan=\\\"3\\\">{{employee.full_name}}</td>\\n            </tr>\\n\\n            <tr>\\n              <th>E-Mail ID</th>\\n              <td>{{employee.email_id}}</td>\\n              <th>Contact Number</th>\\n              <td>\\n                <span *ngIf=\\\"employee.contact_number\\\">\\n                  {{employee.isd_code}}-{{employee.contact_number}}\\n                </span>\\n                <span *ngIf=\\\"!employee.contact_number\\\">-</span>\\n              </td>\\n            </tr>\\n\\n            <tr>\\n              <th>Employee ID</th>\\n              <td>{{employee.employee_id}}</td>\\n              <th>Supervisor</th>\\n              <td>\\n                <span *ngIf=\\\"employee.supervisor && !employee.is_chief_executive\\\">{{employee.supervisor.name}}</span>\\n                <span *ngIf=\\\"employee.is_chief_executive\\\">N/A</span>\\n              </td>\\n            </tr>\\n\\n            <tr>\\n              <th>Department</th>\\n              <td>\\n                <span *ngIf=\\\"employee.department\\\">\\n                  {{employee.department.name}}\\n                </span>\\n              </td>\\n              <th>Designation</th>\\n              <td>{{employee.designation}}</td>\\n            </tr>\\n\\n            <tr>\\n              <th>Date of Joining</th>\\n              <td>{{employee.date_of_joining}}</td>\\n              <th>Date of Birth</th>\\n              <td>{{employee.date_of_birth}}</td>\\n            </tr>\\n\\n          </table>\\n        </tab>\\n\\n        <tab heading=\\\"Personal Information\\\">\\n          <table class=\\\"table table-striped\\\">\\n\\n            <tr>\\n              <th width='25%'>Gender</th>\\n              <td width='25%'>{{employee.gender | constants: 'user.gender'}}</td>\\n              <th width='25%'>Marital Status</th>\\n              <th width='25%'>{{employee.marital_status | constants: 'user.marital_status'}}</th>\\n            </tr>\\n\\n            <tr>\\n              <th>Permanent Address</th>\\n              <td>\\n                <address *ngIf=\\\"employee.permanent_address\\\">\\n                  {{employee.permanent_address.address}}<br />\\n                  {{employee.permanent_address.locality}}<br />\\n                  {{employee.permanent_address.city}}, {{employee.permanent_address.state}} -\\n                  {{employee.permanent_address.postcode}}<br />\\n                  Landmark: {{employee.permanent_address.landmark}}\\n                  {{employee.permanent_address.country}} ({{employee.permanent_address.country_code}})\\n                </address>\\n              </td>\\n              <th>Correspondence Address</th>\\n              <td>\\n                <address *ngIf=\\\"employee.correspondence_address\\\">\\n                  {{employee.correspondence_address.address}}<br />\\n                  {{employee.correspondence_address.locality}}<br />\\n                  {{employee.correspondence_address.city}}, {{employee.correspondence_address.state}} -\\n                  {{employee.correspondence_address.postcode}}<br />\\n                  Landmark: {{employee.correspondence_address.landmark}}\\n                  {{employee.correspondence_address.country}} ({{employee.correspondence_address.country_code}})\\n                </address>\\n              </td>\\n            </tr>\\n\\n            <tr>\\n              <th>Alternate E-Mail IDs</th>\\n              <td>\\n                <span *ngFor=\\\"let email of employee.alternate_email_ids\\\">\\n                  {{email}}<br />\\n                </span>\\n              </td>\\n              <th>Alternate Contact Numbers</th>\\n              <td>\\n                <span *ngFor=\\\"let contact_number of employee.alternate_contact_numbers\\\">\\n                  {{contact_number.isd_code}}-{{contact_number.contact_number}}<br />\\n                </span>\\n              </td>\\n            </tr>\\n\\n            <tr>\\n              <th>Social Security</th>\\n              <td colspan=\\\"3\\\">\\n                <table class=\\\"table table-striped\\\">\\n\\n                  <thead>\\n                    <tr>\\n                      <th>#</th>\\n                      <th>Type</th>\\n                      <th>Number</th>\\n                    </tr>\\n                  </thead>\\n\\n                  <tbody>\\n                    <tr *ngFor=\\\"let social_security of employee.social_security; let i = index\\\">\\n                      <td>{{i + 1}}.</td>\\n                      <td>{{social_security.type | constants: 'user.social_security'}}</td>\\n                      <td>{{social_security.number}}</td>\\n                    </tr>\\n                  </tbody>\\n\\n                </table>\\n              </td>\\n            </tr>\\n\\n            <tr>\\n              <th>Emergency Contacts</th>\\n              <td colspan=\\\"3\\\">\\n                <table class=\\\"table table-striped\\\">\\n\\n                  <thead>\\n                    <tr>\\n                      <th>#</th>\\n                      <th>Name</th>\\n                      <th>Relation</th>\\n                      <th>Contact Number</th>\\n                    </tr>\\n                  </thead>\\n\\n                  <tbody>\\n                    <tr *ngFor=\\\"let contact of employee.emergency_contacts; let i = index\\\">\\n                      <td>{{i + 1}}.</td>\\n                      <td>{{contact.name}}</td>\\n                      <td>{{contact.relation}}</td>\\n                      <td>{{contact.isd_code}}-{{contact.contact_number}}</td>\\n                    </tr>\\n                  </tbody>\\n\\n                </table>\\n              </td>\\n            </tr>\\n\\n          </table>\\n        </tab>\\n\\n        <tab heading=\\\"Leave Information\\\" *ngIf=\\\"employee.leaves && employee.leaves.length > 0\\\">\\n          <table class=\\\"table table-striped\\\">\\n\\n            <tr>\\n              <th>Leave</th>\\n              <th>Count</th>\\n            </tr>\\n\\n            <tr *ngFor=\\\"let leave of employee.leaves\\\">\\n              <td>{{leave.leave_type | constants: 'leave.type'}}</td>\\n              <td>{{leave.leaves}}</td>\\n            </tr>\\n\\n          </table>\\n        </tab>\\n\\n      </tabset>\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService, EmployeeDetails } from 'modules/employee/employee.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Name, Profile } from 'modules/user/profile/profile.service';\n\n@Component({\n  selector: 'app-employee-detail',\n  templateUrl: './employee-detail.component.html',\n  providers: [EmployeeService]\n})\nexport class EmployeeDetailComponent implements OnInit {\n\n  employee: EmployeeDetails = new EmployeeDetails();\n\n  loading: boolean = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private employeeService: EmployeeService\n  ) { }\n\n  async ngOnInit() {\n\n    this.__getEmployeeDetails(this.route.snapshot.params.id);\n  }\n\n  private __getEmployeeDetails(id) {\n\n    this.loading = true;\n    this.employeeService.getEmployeeDetails(id)\n      .then(response => {\n\n        this.loading = false;\n        this.employee = response;\n        this.employee.full_name = Name.getFullName(this.employee.name);\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BsDropdownModule, TooltipModule } from 'ngx-bootstrap';\n\nimport { EmployeeRoutingModule } from './employee.routing';\nimport { ListEmployeeComponent } from './list-employee/list-employee.component';\nimport { ManageEmployeeComponent } from './manage-employee/manage-employee.component';\nimport { ApplicationComponentsModule } from 'modules/application-components.module';\nimport { ApplicationPipesModule } from 'modules/application-pipes.module';\nimport { EmployeeDetailComponent } from './employee-detail/employee-detail.component';\nimport { UploadEmployeeComponent } from './upload-employee/upload-employee.component';\n\n@NgModule({\n  imports: [\n    EmployeeRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    TooltipModule,\n    CommonModule,\n    ApplicationComponentsModule,\n    ApplicationPipesModule,\n    BsDropdownModule,\n    TabsModule\n  ],\n  declarations: [\n    ListEmployeeComponent,\n    ManageEmployeeComponent,\n    EmployeeDetailComponent,\n    UploadEmployeeComponent\n  ],\n  providers: [\n  ]\n})\nexport class EmployeeModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ManageEmployeeComponent } from './manage-employee/manage-employee.component';\nimport { UploadEmployeeComponent } from './upload-employee/upload-employee.component';\nimport { ListEmployeeComponent } from './list-employee/list-employee.component';\nimport { AuthenticationGuard } from 'core/services/authentication.service';\nimport { AuthorizationGuard } from 'core/services/authorization.service';\nimport { ObjectidGuard } from 'core/services/objectid.service';\nimport { EmployeeDetailComponent } from './employee-detail/employee-detail.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: {\n      title: 'Employee'\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'list'\n      },\n      {\n        path: 'feedback',\n        loadChildren: './feedback/feedback.module#FeedbackModule'\n      },\n      {\n        path: 'list',\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        data: {\n          title: 'List',\n          access: {\n            module: 'employee',\n            entity: 'employee',\n            action: 'find'\n          }\n        },\n        component: ListEmployeeComponent\n      },\n      {\n        path: 'add',\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        data: {\n          title: 'Add',\n          access: {\n            module: 'employee',\n            entity: 'employee',\n            action: 'create'\n          }\n        },\n        component: ManageEmployeeComponent\n      },\n      {\n        path: 'upload',\n        canActivate: [AuthenticationGuard, AuthenticationGuard],\n        data: {\n          title: 'Upload',\n          access: {\n            module: 'employee',\n            entity: 'employee',\n            action: 'create'\n          }\n        },\n        component: UploadEmployeeComponent\n      },\n      {\n        path: 'details/:id',\n        canActivate: [AuthenticationGuard, AuthenticationGuard, ObjectidGuard],\n        data: {\n          title: 'Details',\n          access: {\n            module: 'employee',\n            entity: 'employee',\n            action: 'find'\n          }\n        },\n        component: EmployeeDetailComponent\n      },\n      {\n        path: ':id',\n        canActivate: [AuthenticationGuard, AuthorizationGuard, ObjectidGuard],\n        data: {\n          title: 'Update',\n          access: {\n            module: 'employee',\n            entity: 'employee',\n            action: 'update'\n          }\n        },\n        component: ManageEmployeeComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeeRoutingModule { }\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row mb-4\\\" *ngIf=\\\"createAllowed\\\">\\n            <div class=\\\"col-12\\\">\\n\\n              <div class=\\\"btn-group pull-right\\\" dropdown>\\n                <button class=\\\"btn btn-primary\\\" role='button' type=\\\"button\\\" routerLink=\\\"/employee/add\\\">+ Add Employee</button>\\n                <button id=\\\"add-employee-btn\\\" type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle dropdown-toggle-split\\\" dropdownToggle aria-controls=\\\"add-employee\\\">\\n                  <span class=\\\"caret\\\"></span>\\n                  <span class=\\\"sr-only\\\">Add Employee(s)</span>\\n                </button>\\n                <ul id=\\\"add-employee\\\" class=\\\"dropdown-menu dropdown-menu-right\\\" *dropdownMenu role=\\\"menu\\\" aria-labelledby=\\\"add-employee-btn\\\">\\n                  <li role=\\\"menuitem\\\">\\n                    <a class=\\\"dropdown-item\\\" routerLink=\\\"/employee/upload\\\">Upload Employee(s)</a>\\n                  </li>\\n                </ul>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"text-center m-5\\\" *ngIf=\\\"loading\\\">\\n            <h3><i class=\\\"fa fa-refresh fa-spin\\\"></i> Loading Employees</h3>\\n          </div>\\n\\n          <div class=\\\"text-center m-5\\\" *ngIf=\\\"!loading && employees.length === 0\\\">\\n            <h3>No Employees in organization</h3>\\n          </div>\\n\\n          <table class=\\\"table table-striped\\\" *ngIf=\\\"!loading && employees.length > 0\\\">\\n            <thead>\\n              <tr>\\n                <th>Employee ID</th>\\n                <th>Name</th>\\n                <th>E-Mail ID</th>\\n                <th>Department</th>\\n                <th>Designation</th>\\n                <th>Supervisor</th>\\n                <th>Status</th>\\n                <th></th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let employee of employees; let i = index\\\">\\n                <td>{{employee.employee_id}}</td>\\n                <td>{{employee.name.first}} {{employee.name.middle}} {{employee.name.last}}</td>\\n                <td>{{employee.email_id}}</td>\\n                <td>\\n                  <span *ngIf=\\\"employee.department\\\">{{employee.department.name}}</span>\\n                </td>\\n                <td>\\n                  <span *ngIf=\\\"employee.designation\\\">{{employee.designation}}</span>\\n                </td>\\n                <td>\\n                  <span *ngIf=\\\"employee.supervisor\\\">{{employee.supervisor.name}}</span>\\n                </td>\\n                <td>\\n                  <span class=\\\"badge\\\" [ngClass]=\\\"getStatusBadge(employee.user_status)\\\">{{'user.status.' + employee.user_status | constants}}</span>\\n                </td>\\n                <td>\\n                  <div class=\\\"btn-group\\\" dropdown *ngIf=\\\"showActions()\\\">\\n\\n                    <button id=\\\"actions-btn-{{i}}\\\" class=\\\"btn btn-default btn-sm dropdown-toggle\\\" type=\\\"button\\\" dropdownToggle [attr.aria-controls]=\\\"'actions-' + i\\\" [disabled]=\\\"inProgress[i]\\\">\\n                      <i class=\\\"fa fa-refresh fa-spin\\\" *ngIf=\\\"inProgress[i]\\\"></i> Actions <i class=\\\"caret\\\"></i>\\n                    </button>\\n\\n                    <ul id=\\\"actions-{{i}}\\\" class=\\\"dropdown-menu dropdown-menu-right\\\" *dropdownMenu role=\\\"menu\\\" [attr.aria-labeledby]=\\\"'actions-btn-' + i\\\">\\n\\n                      <li role=\\\"menuitem\\\" *ngIf=\\\"updateAllowed\\\">\\n                        <a class=\\\"btn btn-link btn-sm dropdown-item\\\" [routerLink]=\\\"['/employee', employee._id]\\\">Update</a>\\n                      </li>\\n\\n                      <li role=\\\"menuitem\\\" *ngIf=\\\"markSupervisorAllowed && !employee.is_supervisor\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-link btn-sm dropdown-item\\\" (click)=\\\"markAsSupervisor(i)\\\">\\n                          Mark as Supervisor\\n                        </button>\\n                      </li>\\n\\n                      <li role=\\\"menuitem\\\" *ngIf=\\\"unmarkSupervisorAllowed && employee.is_supervisor\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-link btn-sm dropdown-item\\\" (click)=\\\"unmarkAsSupervisor(i)\\\">\\n                          Unmark as Supervisor\\n                        </button>\\n                      </li>\\n\\n                      <li role=\\\"menuitem\\\" *ngIf=\\\"markChiefExecutiveAllowed && !employee.is_chief_executive\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-link btn-sm dropdown-item\\\" (click)=\\\"markAsChiefExecutive(i)\\\">\\n                          Mark as Chief-Executive\\n                        </button>\\n                      </li>\\n\\n                      <li role=\\\"menuitem\\\" *ngIf=\\\"unmarkChiefExecutiveAllowed && employee.is_chief_executive\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-link btn-sm dropdown-item\\\" (click)=\\\"unmarkAsChiefExecutive(i)\\\">\\n                          Unmark as Chief-Executive\\n                        </button>\\n                      </li>\\n\\n                      <li role=\\\"menuitem\\\" *ngIf=\\\"markSuperAdminAllowed && !employee.is_super_admin\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-link btn-sm dropdown-item\\\" (click)=\\\"markAsSuperAdmin(i)\\\">\\n                          Mark as Super Admin\\n                        </button>\\n                      </li>\\n\\n                      <li role=\\\"menuitem\\\" *ngIf=\\\"unmarkSuperAdminAllowed && employee.is_super_admin\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-link btn-sm dropdown-item\\\" (click)=\\\"unmarkAsSuperAdmin(i)\\\">\\n                          Unmark as Super Admin\\n                        </button>\\n                      </li>\\n\\n                    </ul>\\n\\n                  </div>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n\\n          <ul class=\\\"pagination justify-content-end\\\" *ngIf=\\\"count > limit\\\">\\n            <li class=\\\"page-item\\\" *ngIf=\\\"total_pages > 1\\\" [class.disabled]=\\\"page == 1\\\">\\n              <button class=\\\"page-link\\\" (click)=\\\"getEmployees(1)\\\">First</button>\\n            </li>\\n            <li class=\\\"page-item\\\" [class.disabled]=\\\"page == 1\\\">\\n              <button class=\\\"page-link\\\" (click)=\\\"getEmployees(page - 1)\\\">Prev</button>\\n            </li>\\n            <li class=\\\"page-item active\\\">\\n              <button class=\\\"page-link\\\">{{page}}</button>\\n            </li>\\n            <li class=\\\"page-item\\\" [class.disabled]=\\\"page === total_pages\\\">\\n              <button class=\\\"page-link\\\" (click)=\\\"getEmployees(page + 1)\\\">Next</button>\\n            </li>\\n            <li class=\\\"page-item\\\" *ngIf=\\\"page < total_pages\\\" [class.disabled]=\\\"page === total_pages\\\">\\n              <button class=\\\"page-link\\\" (click)=\\\"getEmployees(total_pages)\\\">Last</button>\\n            </li>\\n          </ul>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-success-modal #successModal title=\\\"Success!\\\">\\n  <div content>{{successMessage}}</div>\\n</app-success-modal>\\n\\n<app-error-modal #errorModal title=\\\"Error!\\\">\\n  <div content>{{errorMessage}}</div>\\n</app-error-modal>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { EmployeeList, EmployeeService } from 'modules/employee/employee.service';\nimport { SuccessModalComponent } from 'shared/components/success-modal/success-modal.component';\nimport { ErrorModalComponent } from 'shared/components/error-modal/error-modal.component';\nimport { Access } from 'core/providers/access.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './list-employee.component.html',\n  providers: [EmployeeService]\n})\nexport class ListEmployeeComponent implements OnInit {\n  @ViewChild('successModal') successModal: SuccessModalComponent;\n  @ViewChild('errorModal') errorModal: ErrorModalComponent;\n\n  employees: EmployeeList[];\n  count: number;\n  limit: number;\n  page: number;\n  total_pages: number;\n\n  loading: boolean = false;\n  inProgress: Array<boolean>;\n  successMessage: string;\n  errorMessage: string;\n\n  createAllowed: boolean;\n  updateAllowed: boolean;\n  markSupervisorAllowed: boolean;\n  unmarkSupervisorAllowed: boolean;\n  markChiefExecutiveAllowed: boolean;\n  unmarkChiefExecutiveAllowed: boolean;\n  markSuperAdminAllowed: boolean;\n  unmarkSuperAdminAllowed: boolean;\n\n  constructor(private employeeService: EmployeeService, private access: Access) {\n\n    this.employees = [];\n    this.limit = 25;\n    this.createAllowed = false;\n    this.inProgress = new Array<boolean>();\n  }\n\n  async ngOnInit() {\n\n    this.getEmployees(1);\n\n    this.createAllowed = await this.access.hasAccess({\n      module: 'employee',\n      entity: 'employee',\n      action: 'create'\n    });\n    this.updateAllowed = await this.access.hasAccess({\n      module: 'employee',\n      entity: 'employee',\n      action: 'update'\n    });\n    this.markSupervisorAllowed = await this.access.hasAccess({\n      module: 'employee',\n      entity: 'supervisor',\n      action: 'mark'\n    });\n    this.unmarkSupervisorAllowed = await this.access.hasAccess({\n      module: 'employee',\n      entity: 'supervisor',\n      action: 'unmark'\n    });\n    this.markChiefExecutiveAllowed = await this.access.hasAccess({\n      module: 'employee',\n      entity: 'chief-executive',\n      action: 'mark'\n    });\n    this.unmarkChiefExecutiveAllowed = await this.access.hasAccess({\n      module: 'employee',\n      entity: 'chief-executive',\n      action: 'unmark'\n    });\n    this.markSuperAdminAllowed = await this.access.hasAccess({\n      module: 'employee',\n      entity: 'super-admin',\n      action: 'mark'\n    });\n    this.unmarkSuperAdminAllowed = await this.access.hasAccess({\n      module: 'employee',\n      entity: 'super-admin',\n      action: 'unmark'\n    });\n  }\n\n  showActions() {\n\n    return (\n      this.updateAllowed\n      || this.markSupervisorAllowed\n      || this.unmarkSupervisorAllowed\n      || this.markChiefExecutiveAllowed\n      || this.unmarkChiefExecutiveAllowed\n      || this.markSuperAdminAllowed\n      || this.unmarkSuperAdminAllowed\n    );\n  }\n\n  getEmployees(page) {\n\n    const self = this;\n\n    this.page = page;\n    this.loading = true;\n    this.employeeService.getEmployees(null, this.page, this.limit).then(response => {\n\n      self.loading = false;\n      self.count = response.count;\n      self.employees = response.users;\n\n      self.total_pages = self.count / self.limit;\n      self.total_pages += (self.count % self.limit) === 0 ? 0 : 1;\n    });\n  }\n\n  getStatusBadge(status) {\n\n    switch (status) {\n\n      case 1: return 'badge-success';\n      default: return 'badge-default';\n    }\n  }\n\n  markAsSupervisor(index) {\n\n    this.inProgress[index] = true;\n    const self = this;\n    const employee_id = this.employees[index]._id;\n\n    this.employeeService.markAsSupervisor(employee_id)\n      .then(response => {\n\n        self.inProgress[index] = false;\n        self.employees[index].is_supervisor = true;\n        self.successMessage = response.message.text;\n        self.successModal.show();\n\n      }).catch(err => {\n\n        self.inProgress[index] = false;\n        self.errorMessage = err.error.message.text;\n        self.errorModal.show();\n      });\n  }\n\n  unmarkAsSupervisor(index) {\n\n    this.inProgress[index] = true;\n    const self = this;\n    const employee_id = this.employees[index]._id;\n\n    this.employeeService.unmarkAsSupervisor(employee_id)\n      .then(response => {\n\n        self.inProgress[index] = false;\n        self.employees[index].is_supervisor = false;\n        self.employees[index].is_chief_executive = false;\n        self.successMessage = response.message.text;\n        self.successModal.show();\n\n      }).catch(err => {\n\n        self.inProgress[index] = false;\n        self.errorMessage = err.error.message.text;\n        self.errorModal.show();\n      });\n  }\n\n  markAsChiefExecutive(index) {\n\n    this.inProgress[index] = true;\n    const self = this;\n    const employee_id = this.employees[index]._id;\n\n    this.employeeService.markAsChiefExecutive(employee_id)\n      .then(response => {\n\n        self.inProgress[index] = false;\n        self.employees[index].is_chief_executive = true;\n        self.employees[index].is_supervisor = true;\n        self.successMessage = response.message.text;\n        self.successModal.show();\n\n      }).catch(err => {\n\n        self.inProgress[index] = false;\n        self.errorMessage = err.error.message.text;\n        self.errorModal.show();\n      });\n  }\n\n  unmarkAsChiefExecutive(index) {\n\n    this.inProgress[index] = true;\n    const self = this;\n    const employee_id = this.employees[index]._id;\n\n    this.employeeService.unmarkAsChiefExecutive(employee_id)\n      .then(response => {\n\n        self.inProgress[index] = false;\n        self.employees[index].is_chief_executive = false;\n        self.successMessage = response.message.text;\n        self.successModal.show();\n\n      }).catch(err => {\n\n        self.inProgress[index] = false;\n        self.errorMessage = err.error.message.text;\n        self.errorModal.show();\n      });\n  }\n\n  markAsSuperAdmin(index) {\n\n    this.inProgress[index] = true;\n    const self = this;\n    const employee_id = this.employees[index]._id;\n\n    this.employeeService.markAsSuperAdmin(employee_id)\n      .then(response => {\n\n        self.inProgress[index] = false;\n        self.employees[index].is_super_admin = true;\n        self.employees[index].is_chief_executive = true;\n        self.employees[index].is_supervisor = true;\n        self.successMessage = response.message.text;\n        self.successModal.show();\n\n      }).catch(err => {\n\n        self.inProgress[index] = false;\n        self.errorMessage = err.error.message.text;\n        self.errorModal.show();\n      });\n  }\n\n  unmarkAsSuperAdmin(index) {\n\n    this.inProgress[index] = true;\n    const self = this;\n    const employee_id = this.employees[index]._id;\n\n    this.employeeService.unmarkAsSuperAdmin(employee_id)\n      .then(response => {\n\n        self.inProgress[index] = false;\n        self.employees[index].is_super_admin = false;\n        self.successMessage = response.message.text;\n        self.successModal.show();\n\n      }).catch(err => {\n\n        self.inProgress[index] = false;\n        self.errorMessage = err.error.message.text;\n        self.errorModal.show();\n      });\n  }\n}\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"offset-2 col-8\\\">\\n              <form #employeeForm=\\\"ngForm\\\">\\n\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"first-name\\\" class=\\\"col-3 col-form-label\\\">\\n                    Name <span class=\\\"required\\\">*</span>\\n                  </label>\\n                  <div class=\\\"col-3\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"first-name\\\" placeholder=\\\"First Name\\\" name=\\\"first-name\\\" [(ngModel)]=\\\"employee.name.first\\\">\\n                  </div>\\n                  <div class=\\\"col-3\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"middle-name\\\" placeholder=\\\"Middle Name\\\" name=\\\"middle-name\\\" [(ngModel)]=\\\"employee.name.middle\\\">\\n                  </div>\\n                  <div class=\\\"col-3\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"last-name\\\" placeholder=\\\"Last Name\\\" name=\\\"last-name\\\" [(ngModel)]=\\\"employee.name.last\\\">\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n\\n                  <label for=\\\"email-id\\\" class=\\\"col-3 col-form-label\\\">\\n                    E-Mail ID <span class=\\\"required\\\">*</span>\\n                  </label>\\n                  <div class=\\\"col-3\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email-id\\\" name=\\\"email-id\\\" placeholder=\\\"someone@exatask.com\\\" [(ngModel)]=\\\"employee.email_id\\\" [attr.disabled]=\\\"employee_id ? 'disabled' : null\\\">\\n                  </div>\\n\\n                  <label for=\\\"employee-id\\\" class=\\\"col-3 col-form-label\\\">\\n                    Employee ID <span class=\\\"required\\\">*</span>\\n                  </label>\\n                  <div class=\\\"col-3\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"employee-id\\\" name=\\\"employee-id\\\" [(ngModel)]=\\\"employee.employee_id\\\" [attr.disabled]=\\\"(original_employee.employee_id && employee_id) ? 'disabled' : null\\\">\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n\\n                  <label for=\\\"department\\\" class=\\\"col-3 col-form-label\\\">\\n                    Department <span class=\\\"required\\\">*</span>\\n                  </label>\\n                  <div class=\\\"col-3\\\">\\n                    <select class=\\\"form-control\\\" name=\\\"department\\\" id=\\\"department\\\" [(ngModel)]=\\\"employee.department\\\" (change)=\\\"selectDepartment()\\\">\\n                      <option [ngValue]=\\\"null\\\">(Select department)</option>\\n                      <option *ngFor=\\\"let dept of departments\\\" [ngValue]=\\\"dept._id\\\">{{dept.name}}</option>\\n                    </select>\\n                  </div>\\n\\n                  <label for=\\\"department\\\" class=\\\"col-3 col-form-label\\\">\\n                    Designation <span class=\\\"required\\\">*</span>\\n                  </label>\\n                  <div class=\\\"col-3\\\">\\n                    <select class=\\\"form-control\\\" name=\\\"designation\\\" id=\\\"designation\\\" [(ngModel)]=\\\"employee.designation\\\" [attr.disabled]=\\\"employee.department == undefined ? 'disabled' : null\\\">\\n                      <option [ngValue]=\\\"null\\\">(Select designation)</option>\\n                      <option *ngFor=\\\"let desig of designations\\\" [ngValue]=\\\"desig\\\">{{desig}}</option>\\n                    </select>\\n                  </div>\\n\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n\\n                  <label for=\\\"supervisor\\\" class=\\\"col-3 col-form-label\\\">Supervisor</label>\\n                  <div class=\\\"col-3\\\">\\n                    <select class=\\\"form-control\\\" name=\\\"supervisor\\\" id=\\\"supervisor\\\" [(ngModel)]=\\\"employee.supervisor\\\" [attr.disabled]=\\\"(employee.department == undefined || employee.is_chief_executive) ? 'disabled' : null\\\">\\n                      <option [ngValue]=\\\"null\\\">(Select supervisor)</option>\\n                      <option *ngFor=\\\"let super of supervisors\\\" [ngValue]=\\\"super._id\\\">\\n                        {{super.name}} <{{super.email_id}}>\\n                      </option>\\n                    </select>\\n                  </div>\\n\\n                  <label class=\\\"col-3 col-form-label\\\">Chief Executive</label>\\n                  <div class=\\\"col-3\\\">\\n                    <div class=\\\"form-check\\\">\\n                      <input type=\\\"checkbox\\\" name=\\\"chief-executive\\\" class=\\\"form-check-input\\\" id=\\\"chief-executive\\\" value=\\\"true\\\" [(ngModel)]=\\\"employee.is_chief_executive\\\" [attr.disabled]=\\\"employee_id ? 'disabled' : null\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"chief-executive\\\">Is employee a chief executive?</label>\\n                    </div>\\n                  </div>\\n\\n                </div>\\n\\n                <div class=\\\"form-actions row\\\">\\n                  <div class=\\\"col-12 text-right\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"saveEmployee()\\\">Submit</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"resetEmployee()\\\">Reset</button>\\n                  </div>\\n                </div>\\n\\n              </form>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <!--/.row-->\\n</div>\\n\\n<app-success-modal #successModal title=\\\"Success!\\\">\\n  <div content>\\n    <span *ngIf=\\\"employee_id\\\">\\n      Updated employee details successfully\\n    </span>\\n    <span *ngIf=\\\"!employee_id\\\">\\n      Added new employee successfully.\\n    </span>\\n  </div>\\n  <div *ngIf=\\\"!employee_id\\\" buttons>\\n    <button class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"addAnother()\\\">Add Another</button>\\n  </div>\\n</app-success-modal>\\n\\n<app-error-modal #errorModal title=\\\"Error!\\\">\\n  <div content>\\n    There was an error\\n    <span *ngIf=\\\"employee_id\\\">updating</span>\\n    <span *ngIf=\\\"!employee_id\\\">adding</span> the employee.\\n    <br>\\n    <p>Details: {{error}}</p>\\n  </div>\\n</app-error-modal>\\n\"","import { Component, ViewChild, ViewEncapsulation, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { cloneDeep, isEmpty, union } from 'lodash';\n\nimport { SuccessModalComponent } from 'shared/components/success-modal/success-modal.component';\nimport { ErrorModalComponent } from 'shared/components/error-modal/error-modal.component';\n\nimport { Employee, EmployeeList, EmployeeService } from 'modules/employee/employee.service';\nimport { Department, DepartmentService } from 'modules/organization/department/department.service'\nimport { Name } from 'modules/user/profile/profile.service';\nimport Utility from 'shared/helpers/utility';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  templateUrl: './manage-employee.component.html',\n  providers: [EmployeeService, DepartmentService],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ManageEmployeeComponent implements OnInit {\n  @ViewChild('successModal') successModal: SuccessModalComponent;\n  @ViewChild('errorModal') errorModal: ErrorModalComponent;\n  @ViewChild('employeeForm') public employeeForm: NgForm;\n\n  employee: Employee = new Employee();\n  original_employee: Employee = new Employee();\n  employee_id: string = null;\n\n  error: string = '';\n\n  departments: Department[] = new Array();\n  designations: string[] = new Array();\n  supervisors: EmployeeList[] = new Array();\n  super_admins: EmployeeList[] = new Array();\n  allDepartmentSupervisors: Map<string, EmployeeList[]> = new Map<string, EmployeeList[]>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private employeeService: EmployeeService,\n    private departmentService: DepartmentService) {\n\n    this.departmentService.getDepartments()\n      .then (depts => {\n        this.departments = depts;\n        },\n      err => this.error = 'Error getting department info');\n\n    if (this.route.snapshot.params.id) {\n      this.employee_id = this.route.snapshot.params.id;\n    }\n  }\n\n  ngOnInit() {\n\n    if (this.employee_id) {\n      this.__initializeEmployee(this.employee_id);\n    } else {\n      this.employee_id = null;\n    }\n  }\n\n  private __initializeEmployee(id: string) {\n\n    this.employeeService.getEmployeeDetails(id)\n      .then(response => {\n\n        if (response.department) {\n          response.department = response.department.department_id;\n        }\n        if (response.supervisor) {\n          response.supervisor = response.supervisor.supervisor_id;\n        }\n\n        this.employee = response;\n        this.original_employee = cloneDeep(this.employee);\n\n        if (this.employee.department) {\n          this.selectDepartment();\n        }\n      });\n  }\n\n  private __sanitize(data) {\n\n    if (!data.supervisor) {\n      data.supervisor = null;\n    }\n\n    if (!data.is_chief_executive) {\n      data.is_chief_executive = false;\n    }\n\n    // If middle name is empty (whether null or empty string)\n    if (data.name && isEmpty(data.name.middle)) {\n      data.name.middle = null;\n    }\n\n    return data;\n  }\n\n  private __sanitizeUpdate(data, original_data) {\n\n    if (data.name) {\n\n      if (!data.name.first) {\n        data.name.first = original_data.name.first;\n      }\n      if (!data.name.last) {\n        data.name.last = original_data.name.last;\n      }\n      if (data.name.middle === original_data.name.middle) {\n        data.name.middle = original_data.name.middle;\n      }\n    }\n\n    // If middle name is empty (whether null or empty string)\n    if (data.name && isEmpty(data.name.middle)) {\n      data.name.middle = null;\n    }\n\n    return data;\n  }\n\n  saveEmployee() {\n\n    this.error = '';\n\n    if (this.employee_id) {\n\n      let employee_data = Utility.compare(this.original_employee, this.employee);\n      if (employee_data !== undefined) {\n\n        employee_data = this.__sanitizeUpdate(employee_data, this.original_employee);\n        if (Object.keys(employee_data).length === 0) {\n          return;\n        }\n\n        this.employeeService.putEmployee(this.employee_id, employee_data)\n          .then(response => {\n\n            this.successModal.show('/employee');\n\n          }).catch(err => {\n\n            this.error = err.error.message.text;\n            this.errorModal.show();\n          });\n      }\n\n    } else {\n\n      let employee_data = cloneDeep(this.employee);\n      employee_data = this.__sanitize(employee_data);\n      this.employeeService.postEmployee(employee_data)\n        .then(response => {\n\n          this.successModal.show('/employee');\n\n        }).catch(err => {\n\n          this.error = err.error.message.text;\n          this.errorModal.show();\n        });\n    }\n  }\n\n  resetEmployee() {\n\n    if (this.employee_id) {\n      this.employee = cloneDeep(this.original_employee);\n    } else {\n      this.employeeForm.reset();\n    }\n  }\n\n  addAnother() {\n\n    this.employee = new Employee();\n    this.successModal.hide(true);\n  }\n\n  selectDepartment() {\n\n    const department_id = this.employee.department;\n\n    const projection = ['_id', 'name', 'email_id'];\n\n    const query1 = new Map<string, any>();\n    query1.set('department_id', department_id);\n    query1.set('is_supervisor', true);\n\n    const query2 = new Map<string, any>();\n    query2.set('is_super_admin', true);\n\n    const self = this;\n\n    for (const department of this.departments) {\n\n      if (department._id === department_id) {\n        this.designations = department.designations;\n        break;\n      }\n    }\n\n    if (this.allDepartmentSupervisors.has(department_id)) {\n\n      this.supervisors = this.allDepartmentSupervisors.get(department_id);\n\n    } else {\n\n      let dataPromises = [], dataPromise;\n      dataPromise = this.employeeService.getEmployees(query1, 0, 0, projection).then(response => {\n\n        for (const user of response.users) {\n          user.name = Name.getFullName(user.name);\n        }\n        self.supervisors = response.users;\n      });\n      dataPromises.push(dataPromise);\n\n      dataPromise = this.employeeService.getEmployees(query2, 0, 0, projection).then(response => {\n\n        for (const user of response.users) {\n          user.name = Name.getFullName(user.name);\n        }\n        self.super_admins = response.users;\n      });\n      dataPromises.push(dataPromise);\n\n      Promise.all(dataPromises).then(response => {\n\n        const user_ids = [];\n        self.supervisors.forEach(function (user) {\n          user_ids.push(user._id.toString());\n        });\n\n        self.super_admins.forEach(function (user) {\n          if (user_ids.indexOf(user._id.toString()) === -1) {\n            self.supervisors.push(user);\n          }\n        });\n\n        self.allDepartmentSupervisors[department_id] = self.supervisors;\n      });\n    }\n  }\n}\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row\\\" *ngIf=\\\"!uploaded\\\">\\n            <div class=\\\"col-6 offset-3\\\">\\n\\n              <p class=\\\"lead\\\">Instructions:</p>\\n              <ul class=\\\"list-unstyled\\\">\\n\\n                <li>\\n                  <span class=\\\"font-weight-bold\\\">Step 1</span> Download Employee details template sheet <a target=\\\"_blank\\\" [href]=\\\"downloadLink\\\">here</a>.\\n                </li>\\n\\n                <li>\\n                  <span class=\\\"font-weight-bold\\\">Step 2</span> Fill details of all employees being added in template sheet.\\n\\n                  <ul>\\n                    <li>Don't change headers. Data will not get uploaded correctly if headers are tampered with.</li>\\n                    <li>In Department, use the correct name as available from list <a target=\\\"_blank\\\" routerLink=\\\"/organization/department/list\\\">here</a>.</li>\\n                    <li>In Designation, use the correct designation available under particular department.</li>\\n                    <li>In Supervisor, provide registered e-mail id of supervisor.</li>\\n                  </ul>\\n                </li>\\n\\n                <li>\\n                  <span class=\\\"font-weight-bold\\\">Step 3</span> Upload completed sheet and confirm to add all employees.\\n                </li>\\n\\n              </ul>\\n\\n              <div class=\\\"mb-5 mt-5 pl-0\\\">\\n                <div class=\\\"input-group \\\">\\n                  <div class=\\\"custom-file\\\">\\n                    <input type=\\\"file\\\" class=\\\"custom-file-input\\\" name=\\\"bulk-employee-file\\\" id=\\\"bulk-employee-file\\\" aria-describedby=\\\"bulk-employee\\\" [accept]=\\\"acceptedFormats\\\" (change)=\\\"selectFile($event)\\\" [disabled]=\\\"uploading\\\" />\\n                    <label class=\\\"custom-file-label\\\" for=\\\"bulk-employee-file\\\">{{fileName}}</label>\\n                  </div>\\n                  <div class=\\\"input-group-append\\\">\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" id=\\\"bulk-employee\\\" (click)=\\\"uploadFile()\\\" [disabled]=\\\"uploading\\\">\\n                      <i class=\\\"fa fa-refresh fa-spin\\\" *ngIf=\\\"uploading\\\"></i> Upload\\n                    </button>\\n                  </div>\\n                </div>\\n\\n                <label class=\\\"text-danger\\\" [ngClass]=\\\"{'d-none': !error}\\\">{{error}}</label>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\" *ngIf=\\\"uploaded\\\">\\n            <div class=\\\"col-12\\\">\\n\\n              <table class=\\\"table table-striped\\\">\\n\\n                <thead>\\n                  <tr>\\n                    <th>Employee ID</th>\\n                    <th>First Name</th>\\n                    <th>Last Name</th>\\n                    <th>E-Mail ID</th>\\n                    <th>Department</th>\\n                    <th>Designation</th>\\n                    <th>Supervisor</th>\\n                    <th></th>\\n                  </tr>\\n                </thead>\\n\\n                <tbody>\\n                  <tr *ngFor=\\\"let employee of employees; let i = index\\\">\\n                    <td>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"employee-id-{{i}}\\\" placeholder=\\\"Employee ID\\\" name=\\\"employee-id-{{i}}\\\" [(ngModel)]=\\\"employee.employee_id\\\" />\\n                    </td>\\n                    <td>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"first-name-{{i}}\\\" placeholder=\\\"First Name\\\" name=\\\"first-name-{{i}}\\\" [(ngModel)]=\\\"employee.name.first\\\" />\\n                    </td>\\n                    <td>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"last-name-{{i}}\\\" placeholder=\\\"Last Name\\\" name=\\\"last-name-{{i}}\\\" [(ngModel)]=\\\"employee.name.last\\\" />\\n                    </td>\\n                    <td>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email-id-{{i}}\\\" placeholder=\\\"E-Mail ID\\\" name=\\\"email-id-{{i}}\\\" [(ngModel)]=\\\"employee.email_id\\\" />\\n                    </td>\\n                    <td>\\n                      <select class=\\\"form-control\\\" name=\\\"department-{{i}}\\\" id=\\\"department-{{i}}\\\" [(ngModel)]=\\\"employee.department\\\" (change)=\\\"selectDepartment(employee.department)\\\">\\n                        <option *ngFor=\\\"let dept of departments\\\" [ngValue]=\\\"dept._id\\\">{{dept.name}}</option>\\n                      </select>\\n                    </td>\\n                    <td>\\n                      <select class=\\\"form-control\\\" name=\\\"designation-{{i}}\\\" id=\\\"designation-{{i}}\\\" [(ngModel)]=\\\"employee.designation\\\" [attr.disabled]=\\\"employee.department == undefined ? 'disabled' : null\\\">\\n                        <option *ngFor=\\\"let desig of designations[employee.department]\\\" [ngValue]=\\\"desig\\\">{{desig}}</option>\\n                      </select>\\n                    </td>\\n                    <td>\\n                      <select class=\\\"form-control\\\" name=\\\"supervisor\\\" id=\\\"supervisor\\\" [(ngModel)]=\\\"employee.supervisor\\\" [attr.disabled]=\\\"employee.department == undefined ? 'disabled' : null\\\">\\n                        <option *ngFor=\\\"let super of supervisors[employee.department]\\\" [ngValue]=\\\"super._id\\\">\\n                          {{super.name}} <{{super.email_id}}>\\n                        </option>\\n                      </select>\\n                    </td>\\n                    <td class=\\\"align-middle text-center\\\">\\n                      <i class=\\\"fa fa-2x fa-refresh fa-spin\\\" *ngIf=\\\"saving[i]\\\"></i>\\n                      <i class=\\\"fa fa-2x fa-check-circle text-success\\\" *ngIf=\\\"!saving[i] && saved[i] && saveStatus[i].length === 0\\\"></i>\\n                      <i class=\\\"fa fa-2x fa-times-circle text-danger\\\"\\n                        *ngIf=\\\"!saving[i] && saved[i] && saveStatus[i].length > 0\\\"\\n                        [tooltip]=\\\"saveStatus[i]\\\" placement=\\\"bottom\\\"></i>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n\\n              </table>\\n\\n              <div class=\\\"form-actions row\\\" *ngIf=\\\"!savingAll\\\">\\n                <div class=\\\"col-12 text-right\\\">\\n                  <a class=\\\"btn btn-link\\\" routerLink=\\\"/employee/list\\\">Cancel</a>\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"saveEmployees()\\\">Confirm</button>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-success-modal #successModal title=\\\"Success!\\\">\\n  <div content>Added all employee(s) successfully.</div>\\n</app-success-modal>\"","import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\nimport { EmployeeService, Employee, EmployeeList } from '../employee.service';\nimport { DepartmentService, Department } from 'modules/organization/department/department.service';\nimport { Name } from 'modules/user/profile/profile.service';\nimport { clone } from 'lodash';\nimport { SuccessModalComponent } from 'shared/components/success-modal/success-modal.component';\n\n@Component({\n  selector: 'app-upload-employee',\n  templateUrl: './upload-employee.component.html',\n  providers: [EmployeeService, DepartmentService],\n  encapsulation: ViewEncapsulation.None\n})\nexport class UploadEmployeeComponent {\n  @ViewChild('successModal') successModal: SuccessModalComponent;\n\n  downloadLink: string = environment.apiServer + '/documents/Bulk Employee Upload.xlsx';\n  acceptedFormats: string = '.csv,.xlsx,.xls';\n\n  uploadedFile: File;\n  employees: Employee[];\n  departments: Department[] = new Array();\n  designations: string[][] = new Array();\n  supervisors: EmployeeList[][] = new Array();\n  super_admins: EmployeeList[];\n\n  fileName: string = 'Choose File';\n  error: string = '';\n\n  uploading: boolean = false;\n  uploaded: boolean = false;\n  savingAll: boolean = false;\n  saving: boolean[];\n  saved: boolean[];\n  saveStatus: string[];\n\n  constructor(\n    private employeeService: EmployeeService,\n    private departmentService: DepartmentService\n  ) {}\n\n  selectFile($event) {\n\n    this.uploadedFile = $event.target.files[0];\n    this.fileName = this.uploadedFile.name;\n  }\n\n  uploadFile() {\n\n    if (!this.uploadedFile) {\n      return;\n    }\n\n    const self = this;\n    this.uploading = true;\n\n    this.employeeService.uploadBulkEmployee(this.uploadedFile)\n      .then(response => {\n\n        if (response.data.length === 0) {\n          this.error = 'No employee data was uploaded';\n          return;\n        }\n\n        self.employees = response.data;\n        self.uploaded = true;\n        self.saving = new Array(self.employees.length);\n        self.saved = new Array(self.employees.length);\n        self.saveStatus = new Array(self.employees.length);\n        this.uploading = false;\n\n        let dataPromises = [], dataPromise;\n\n        dataPromise = self.departmentService.getDepartments().then(depts => {\n          self.departments = depts;\n        });\n        dataPromises.push(dataPromise);\n\n        const query = new Map<string, any>();\n        query.set('is_super_admin', true);\n        const projection = ['_id', 'name', 'email_id'];\n\n        dataPromise = self.employeeService.getEmployees(query, 0, 0, projection).then(response => {\n\n          for (const user of response.users) {\n            user.name = Name.getFullName(user.name);\n          }\n          self.super_admins = response.users;\n        });\n        dataPromises.push(dataPromise);\n\n        Promise.all(dataPromises).then(response => {\n\n          self.departments.forEach(function (department) {\n            self.selectDepartment(department._id);\n          });\n        });\n\n      }).catch(err => {\n\n        self.error = err.error.message.text;\n        self.uploading = false;\n      });\n  }\n\n  selectDepartment(department_id) {\n\n    if (!this.designations[department_id]) {\n\n      for (const department of this.departments) {\n\n        if (department._id === department_id) {\n          this.designations[department_id] = department.designations;\n          break;\n        }\n      }\n    }\n\n    if (!this.supervisors[department_id]) {\n\n      const query = new Map<string, any>();\n      query.set('department_id', department_id);\n      query.set('is_supervisor', true);\n\n      const projection = ['_id', 'name', 'email_id'];\n      const self = this;\n\n      this.employeeService.getEmployees(query, 0, 0, projection).then(response => {\n\n        for (const user of response.users) {\n          user.name = Name.getFullName(user.name);\n        }\n        self.supervisors[department_id] = response.users;\n\n        const user_ids = [];\n        response.users.forEach(function (user) {\n          user_ids.push(user._id.toString());\n        });\n\n        self.super_admins.forEach(function (user) {\n          if (user_ids.indexOf(user._id.toString()) === -1) {\n            self.supervisors[department_id].push(user);\n          }\n        });\n      });\n    }\n  }\n\n  saveEmployees() {\n\n    const self = this;\n    const savePromises = [];\n\n    this.employees.forEach(function (employee, index) {\n\n      self.saving[index] = true;\n      const employee_data = clone(employee);\n      employee_data.is_chief_executive = false;\n\n      const savePromise = self.employeeService.postEmployee(employee_data).then(response => {\n\n        self.saving[index] = false;\n        self.saved[index] = true;\n        self.saveStatus[index] = '';\n\n      }).catch(err => {\n\n        self.saving[index] = false;\n        self.saved[index] = true;\n        self.saveStatus[index] = err.error.message.text;\n      });\n      savePromises.push(savePromise);\n    });\n\n    Promise.all(savePromises).then(response => {\n\n      let all_success = true;\n      self.saveStatus.forEach(function (status) {\n        if (status.length !== 0) {\n          all_success = false;\n        }\n      });\n\n      if (all_success) {\n        this.successModal.show('/employee');\n      }\n    });\n  }\n}\n"],"sourceRoot":""}