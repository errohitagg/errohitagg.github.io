{"version":3,"sources":["webpack:///./src/app/modules/application-components.module.ts","webpack:///./src/app/modules/metadata/postcode.service.ts","webpack:///./src/app/shared/components/address/address.component.html","webpack:///./src/app/shared/components/address/address.component.ts","webpack:///./src/app/shared/components/error-modal/error-modal.component.html","webpack:///./src/app/shared/components/error-modal/error-modal.component.ts","webpack:///./src/app/shared/components/inline-error/inline-error.component.ts","webpack:///./src/app/shared/components/success-modal/success-modal.component.html","webpack:///./src/app/shared/components/success-modal/success-modal.component.ts"],"names":[],"mappings":"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","file":"default~access-control-access-control-module~comp-off-comp-off-module~department-department-module~e~a15e1e05.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { ModalModule } from 'ngx-bootstrap';\nimport { AddressComponent } from 'shared/components/address/address.component';\nimport { SuccessModalComponent } from 'shared/components/success-modal/success-modal.component';\nimport { ErrorModalComponent } from 'shared/components/error-modal/error-modal.component';\nimport { InlineErrorComponent } from 'shared/components/inline-error/inline-error.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    ModalModule.forRoot()\n  ],\n  declarations: [\n    AddressComponent,\n    SuccessModalComponent,\n    ErrorModalComponent,\n    InlineErrorComponent\n  ],\n  exports: [\n    AddressComponent,\n    SuccessModalComponent,\n    ErrorModalComponent,\n    InlineErrorComponent\n  ]\n})\nexport class ApplicationComponentsModule { }\n","import { Injectable } from '@angular/core';\nimport { Api } from 'core/services/api.service';\n\nexport class Postcode {\n\n  postcode: string;\n  city: string;\n  state: string;\n  state_code: string;\n  country: string;\n  country_code: string;\n  localities: string[];\n}\n\n@Injectable()\nexport class PostcodeService extends Api {\n\n  private _base_url: string = '/postcodes';\n\n  getPostcode(postcode: string): Promise<Postcode> {\n\n    return this.get(this._base_url + '/' + postcode)\n      .then(response => response as Postcode);\n  }\n}\n","module.exports = \"<div class=\\\"form-group row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <textarea name=\\\"{{name}}-address\\\" id=\\\"{{id}}-address\\\" class=\\\"form-control\\\" placeholder=\\\"Address\\\" [(ngModel)]=\\\"address.address\\\" required></textarea>\\n  </div>\\n</div>\\n<div class=\\\"form-group row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <input type=\\\"text\\\" name=\\\"{{name}}-postcode\\\" id=\\\"{{id}}-postcode\\\" class=\\\"form-control\\\" placeholder=\\\"Postcode\\\" [(ngModel)]=\\\"address.postcode\\\" (change)=\\\"loadPostcode()\\\" required>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <select name=\\\"{{name}}-locality\\\" id=\\\"{{id}}-locality\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"address.locality\\\">\\n      <option value='' selected>Select Locality</option>\\n      <option *ngFor=\\\"let locality of localities\\\" [ngValue]=\\\"locality\\\">\\n        {{ locality }}\\n      </option>\\n    </select>\\n  </div>\\n</div>\\n<div class=\\\"form-group row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <input type=\\\"text\\\" name=\\\"{{name}}-landmark\\\" id=\\\"{{id}}-landmark\\\" class=\\\"form-control\\\" placeholder=\\\"Landmark\\\" [(ngModel)]=\\\"address.landmark\\\">\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <input type=\\\"text\\\" name=\\\"{{name}}-city\\\" id=\\\"{{id}}-city\\\" class=\\\"form-control\\\" placeholder=\\\"City\\\" [(ngModel)]=\\\"address.city\\\" readonly>\\n  </div>\\n</div>\\n<div class=\\\"form-group row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <input type=\\\"text\\\" name=\\\"{{name}}-state\\\" id=\\\"{{id}}-state\\\" class=\\\"form-control\\\" placeholder=\\\"State\\\" [(ngModel)]=\\\"address.state\\\" readonly>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <input type=\\\"text\\\" name=\\\"{{name}}-country\\\" id=\\\"{{id}}-country\\\" class=\\\"form-control\\\" placeholder=\\\"Country\\\" [(ngModel)]=\\\"address.country\\\" readonly>\\n  </div>\\n</div>\"","import { Component, Input, forwardRef, OnInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PostcodeService } from 'modules/metadata/postcode.service';\nimport { BehaviorSubject } from 'rxjs';\n\nconst ADDRESS_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AddressComponent),\n  multi: true\n};\n\nexport class Address {\n\n  address: string = '';\n  locality: string = '';\n  landmark: string = '';\n  postcode: string = '';\n  city: string = '';\n  state: string = '';\n  state_code: string = '';\n  country: string = '';\n  country_code: string = '';\n  latitude: number = 0.0;\n  longitude: number = 0.0;\n};\n\n@Component({\n  selector: 'app-address',\n  templateUrl: 'address.component.html',\n  providers: [PostcodeService, ADDRESS_VALUE_ACCESSOR]\n})\nexport class AddressComponent implements OnInit {\n  @Input() name: string;\n  @Input() id: string;\n\n  @Input()\n  set address(address: Address) {\n\n    if (address === undefined) {\n      address = new Address();\n    }\n    this._address.next(address);\n  }\n  get address(): Address {\n    return this._address.getValue();\n  }\n\n  localities: Array<string>;\n\n  private _address = new BehaviorSubject<Address>(new Address());\n\n  constructor(private postcodeService: PostcodeService) { }\n\n  ngOnInit() {\n\n    this._address.subscribe(x => {\n      if (this.address) {\n        this.loadPostcode();\n      }\n    });\n  }\n\n  writeValue(address: Address) {\n\n    if (address === undefined) {\n      address = new Address();\n    }\n\n    this._address.next(address);\n    this.onChange(address);\n  }\n\n  onChange = (_) => { };\n  onTouched = () => { };\n  registerOnChange(fn: (_: Address) => void): void { this.onChange = fn; }\n  registerOnTouched(fn: () => void): void { this.onTouched = fn; }\n\n  loadPostcode() {\n\n    if (!this.address.postcode) {\n      return;\n    }\n\n    this.postcodeService.getPostcode(this.address.postcode)\n      .then(postcode => {\n\n        this.address.city = postcode.city;\n        this.address.state = postcode.state;\n        this.address.state_code = postcode.state_code;\n        this.address.country = postcode.country;\n        this.address.country_code = postcode.country_code;\n        this.localities = postcode.localities;\n\n      }, err => {\n      });\n  }\n}\n","module.exports = \"<div bsModal #modal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-danger\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">{{title}}</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <ng-content selector=\\\"[content]\\\"></ng-content>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <ng-content select=\\\"[buttons]\\\"></ng-content>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"modal.hide()\\\">Ok</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, ViewChild, Input } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-error-modal',\n  templateUrl: 'error-modal.component.html'\n})\nexport class ErrorModalComponent {\n    @ViewChild('modal') modal: ModalDirective;\n\n    @Input() title: string = '';\n\n    constructor() {\n    }\n\n    show () {\n        this.modal.show();\n    }\n\n    hide () {\n        this.modal.hide();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { AbstractControlDirective, AbstractControl } from '@angular/forms';\n\n@Component({\n selector: 'app-inline-error',\n template: `\n   <div *ngIf=\"shouldShowErrors()\" class=\"text-danger inline-errors\">\n     <small *ngFor=\"let error of listOfErrors()\">{{error}}</small>\n   </div>\n `,\n})\nexport class InlineErrorComponent {\n\n  private static readonly errorMessages = {\n    'required': () => 'Required',\n    'minlength': (params) => 'Minimum length: ' + params.requiredLength,\n    'maxlength': (params) => 'Maximum length: ' + params.requiredLength,\n    'pattern': (params) => 'Required pattern: ' + params.requiredPattern,\n    'app-exactmatch': (params) => 'Must match: ' + params.requiredMatch,\n    'app-minitems': (params) => 'Minimum items: ' + params.requiredItems,\n    'app-maxitems': (params) => 'Maximum items: ' + params.requiredItems\n  };\n\n  @Input()\n  private control: AbstractControlDirective | AbstractControl;\n\n  shouldShowErrors(): boolean {\n\n    return this.control && this.control.errors &&\n      (this.control.dirty || this.control.touched);\n  }\n\n  listOfErrors(): string[] {\n\n    return Object.keys(this.control.errors)\n      .map(field => this.getMessage(field, this.control.errors[field]));\n  }\n\n  private getMessage(type: string, params: any) {\n    return InlineErrorComponent.errorMessages[type](params);\n  }\n\n};\n","module.exports = \"<div bsModal #modal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\" (onHidden)=\\\"onHidden()\\\">\\n  <div class=\\\"modal-dialog modal-success\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">{{title}}</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <ng-content select=\\\"[content]\\\"></ng-content>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <ng-content select=\\\"[buttons]\\\"></ng-content>\\n        <button type=\\\"button\\\" (click)=\\\"modal.hide()\\\" class=\\\"btn btn-success\\\">Ok</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, ViewChild, Input } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-success-modal',\n  templateUrl: 'success-modal.component.html'\n})\nexport class SuccessModalComponent {\n  @ViewChild('modal') modal: ModalDirective;\n\n  public onCloseCallback: Function;\n  public onCloseUrl: string;\n  @Input() title: string = '';\n\n  constructor(private router: Router) { }\n\n  show(callback?: string | Function) {\n\n    this.onCloseUrl = this.onCloseCallback = null;\n    if (typeof callback === 'string') {\n      this.onCloseUrl = callback;\n    } else if (typeof callback === 'function') {\n      this.onCloseCallback = callback;\n    }\n\n    this.modal.show();\n  }\n\n  hide(closeCallback?: boolean) {\n\n    closeCallback = !!closeCallback;\n    if (closeCallback) {\n      this.onCloseUrl = null;\n      this.onCloseCallback = null;\n    }\n\n    this.modal.hide();\n  }\n\n  onHidden() {\n\n    if (this.onCloseUrl) {\n      this.router.navigateByUrl(this.onCloseUrl);\n    } else if (this.onCloseCallback) {\n      this.onCloseCallback();\n    }\n  }\n}\n"],"sourceRoot":""}