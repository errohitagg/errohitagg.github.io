{"version":3,"sources":["webpack:///./src/app/modules/leave/apply-leave/apply-leave.component.html","webpack:///./src/app/modules/leave/apply-leave/apply-leave.component.ts","webpack:///./src/app/modules/leave/leave.module.ts","webpack:///./src/app/modules/leave/leave.routing.ts","webpack:///./src/app/modules/leave/list-leave/list-leave.component.html","webpack:///./src/app/modules/leave/list-leave/list-leave.component.ts","webpack:///./src/app/modules/leave/review-leave/review-leave.component.html","webpack:///./src/app/modules/leave/review-leave/review-leave.component.ts"],"names":[],"mappings":"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","file":"12.d0af51dfa64d262055f8.js","sourcesContent":["module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <form #leaveForm=\\\"ngForm\\\">\\n\\n            <div class=\\\"form-group row\\\">\\n\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"leave-type\\\">\\n                Leave Type <span class=\\\"required\\\">*</span>\\n              </label>\\n              <div class=\\\"col-md-3\\\">\\n                <select name=\\\"leave-type\\\" id=\\\"leave-type\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"leave.leave_type\\\">\\n                  <option *ngFor=\\\"let type of 'leave.type' | constantsarray\\\" [value]=\\\"type.key\\\" [disabled]=\\\"leaveTypeDisabled(type.key)\\\">\\n                    {{ type.value }}\\n                  </option>\\n                </select>\\n              </div>\\n\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"start-date\\\">\\n                Start Date <span class=\\\"required\\\">*</span>\\n              </label>\\n              <div class=\\\"col-md-3 input-group\\\">\\n                <input type=\\\"text\\\" name=\\\"start-date\\\" class=\\\"form-control\\\" id=\\\"start-date\\\" [(ngModel)]=\\\"leave.start_date\\\" bsDatepicker #startDate=\\\"bsDatepicker\\\" [bsConfig]=\\\"sdConfig\\\" (bsValueChange)=\\\"setStartDate($event)\\\">\\n                <span class=\\\"input-group-append\\\">\\n                  <button class=\\\"btn\\\" (click)=\\\"startDate.show()\\\" [attr.aria-expanded]=\\\"startDate.isOpen\\\">\\n                    <i class=\\\"fa fa-calendar\\\"></i>\\n                  </button>\\n                </span>\\n              </div>\\n\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"end-date\\\">\\n                End Date <span class=\\\"required\\\">*</span>\\n              </label>\\n              <div class=\\\"col-md-3 input-group\\\">\\n                <input type=\\\"text\\\" name=\\\"end-date\\\" class=\\\"form-control\\\" id=\\\"end-date\\\" [(ngModel)]=\\\"leave.end_date\\\" bsDatepicker #endDate=\\\"bsDatepicker\\\"\\n                  [bsConfig]=\\\"edConfig\\\">\\n                <span class=\\\"input-group-append\\\">\\n                  <button class=\\\"btn\\\" (click)=\\\"endDate.show()\\\" [attr.aria-expanded]=\\\"endDate.isOpen\\\">\\n                    <i class=\\\"fa fa-calendar\\\"></i>\\n                  </button>\\n                </span>\\n              </div>\\n\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"summary\\\">\\n                Summary <span class=\\\"required\\\">*</span>\\n              </label>\\n              <div class=\\\"col-md-9\\\">\\n                <textarea name=\\\"summary\\\" class=\\\"form-control\\\" id=\\\"summary\\\" [(ngModel)]=\\\"leave.summary\\\"></textarea>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"notify-people\\\">Notify</label>\\n              <div class=\\\"col-md-9\\\">\\n                <ng-select name=\\\"notify-people\\\" id=\\\"notify-people\\\" [loading]=\\\"loading_users\\\" [items]=\\\"user_list\\\" [multiple]=\\\"true\\\"\\n                           [addTag]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" [clearable]=\\\"true\\\" [searchable]=\\\"true\\\" [searchFn]=\\\"filterUsers\\\"\\n                           [clearSearchOnAdd]=\\\"true\\\" [hideSelected]=\\\"true\\\" bindLabel=\\\"name\\\" bindValue=\\\"user_id\\\"\\n                           placeholder=\\\"Select Employees\\\" notFoundText=\\\"No employees found\\\" [(ngModel)]=\\\"notify_users\\\">\\n\\n                  <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\" let-search=\\\"searchTerm\\\">\\n                    {{item.name}} <{{item.email_id}}>\\n                  </ng-template>\\n\\n                </ng-select>\\n              </div>\\n            </div>\\n\\n          </form>\\n\\n          <div class=\\\"form-actions row mt-4\\\">\\n            <div class=\\\"col-12\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-link pull-right\\\" routerLink=\\\"/leave\\\" (click)=\\\"exatask.trackEvent('leave', 'cancel')\\\">Cancel</button>\\n              <button [disabled]=\\\"!leaveForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"exatask.trackEvent('leave', 'apply'); applyLeave()\\\">Apply</button>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-success-modal #successModal title=\\\"Success!\\\">\\n  <div content>\\n    Leave Applied Successfully\\n  </div>\\n</app-success-modal>\\n\\n<app-error-modal #errorModal title=\\\"Error!\\\">\\n  <div content>\\n    <p>There was an error applying for Leave.</p>\\n    <p>{{error}}</p>\\n    <ul>\\n      <li *ngFor=\\\"let attribute of invalid_attributes \\\">{{attribute}}</li>\\n    </ul>\\n  </div>\\n</app-error-modal>\"","import { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { find, matchesProperty } from 'lodash';\n\nimport { SuccessModalComponent } from 'shared/components/success-modal/success-modal.component';\nimport { ErrorModalComponent } from 'shared/components/error-modal/error-modal.component';\n\nimport { LeavePolicyService } from 'modules/leave/policy/leave-policy.service';\nimport { ApplyLeave, EmployeeBasic, LeaveService } from 'modules/leave/leave.service';\nimport { Name, ProfileService } from 'modules/user/profile/profile.service';\nimport { BsDatepickerDirective } from 'ngx-bootstrap';\nimport { ExaTask } from '../../../core/providers/exatask.service';\nimport { EmployeeService } from '../../employee/employee.service';\nimport { User } from '../../../core/providers/user.service';\n\nclass UserSearchItem {\n\n  user_id: string;\n  name: string;\n  email_id: string;\n}\n\nconst error_map = {\n  start_date: 'Start Date',\n  end_date: 'End Date',\n  leave_type: 'Leave Type',\n  summary: 'Summary'\n};\n\n@Component({\n  selector: 'app-apply-leave',\n  templateUrl: './apply-leave.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [LeaveService, LeavePolicyService, EmployeeService, DatePipe]\n})\nexport class ApplyLeaveComponent implements OnInit {\n  @ViewChild('errorModal') errorModal: ErrorModalComponent;\n  @ViewChild('successModal') successModal: SuccessModalComponent;\n  @ViewChild('startDate') startDate: BsDatepickerDirective;\n  @ViewChild('endDate') endDate: BsDatepickerDirective;\n\n  leave: ApplyLeave;\n  leave_type: Array<any> = [];\n  user_list: UserSearchItem[] = [];\n  notify_users: Array<string> = [];\n\n  sdConfig: Object;\n  edConfig: Object;\n\n  loading_users: boolean = false;\n  error: string;\n  invalid_attributes: string[];\n\n  constructor(\n    private leavePolicyService: LeavePolicyService,\n    private leaveService: LeaveService,\n    private profileService: ProfileService,\n    private employeeService: EmployeeService,\n    private user: User,\n    private datePipe: DatePipe,\n    public exatask: ExaTask\n  ) {\n\n    this.exatask.setTitle('Apply Leave');\n    this.leave = new ApplyLeave();\n\n    this.sdConfig = {\n      dateInputFormat: 'YYYY-MM-DD',\n      containerClass: 'theme-blue',\n      showWeekNumbers: false\n    };\n    this.edConfig = {\n      dateInputFormat: 'YYYY-MM-DD',\n      containerClass: 'theme-blue',\n      showWeekNumbers: false\n    };\n  }\n\n  private __validate() {\n    return true;\n  }\n\n  private __sanitizeLeave(leave) {\n\n    if (leave.start_date !== undefined) {\n      leave.start_date = this.datePipe.transform(leave.start_date, 'yyyy-MM-dd');\n    }\n\n    if (leave.end_date !== undefined) {\n      leave.end_date = this.datePipe.transform(leave.end_date, 'yyyy-MM-dd');\n    }\n\n    if (this.notify_users.length > 0) {\n\n      leave.notify_users = [];\n      for (const user_id of this.notify_users) {\n\n        const user = find(this.user_list, matchesProperty('user_id', user_id));\n        const employee = new EmployeeBasic();\n        employee.email_id = user.email_id;\n        employee.name = user.name;\n        leave.notify_users.push(employee);\n      }\n    }\n\n    return leave;\n  }\n\n  async ngOnInit() {\n\n    this.__loadUsers();\n    this.profileService.getProfile('leaves')\n      .then(profile => {\n\n        const leave_types = [];\n        if (profile.leaves) {\n          profile.leaves.forEach(function (leave) {\n            if (leave.leaves > 0) {\n              leave_types.push(leave.leave_type);\n            }\n          });\n        }\n        this.leave_type = leave_types;\n\n      }).catch(err => {\n\n        this.error = err;\n        this.errorModal.show();\n      });\n  }\n\n  private __loadUsers() {\n\n    const self = this;\n    this.loading_users = true;\n    this.employeeService.getEmployees(null, 0, 0, ['_id', 'email_id', 'name'])\n      .then(response => {\n\n        this.user_list = response.users.filter(user => {\n\n          if (self.user.user_id !== user._id) {\n            return user;\n          }\n\n        }).map(user => {\n\n          const item = new UserSearchItem();\n          item.user_id = user._id;\n          item.email_id = user.email_id;\n          item.name = Name.getFullName(user.name);\n          return item;\n        });\n        this.loading_users = false;\n\n      }).catch(err => {\n\n      this.error = err.error.message.text;\n      this.errorModal.show();\n    });\n  }\n\n  setStartDate(value: Date) {\n\n    this.edConfig['minDate'] = value;\n    this.endDate.setConfig();\n  }\n\n  applyLeave() {\n\n    if (this.__validate()) {\n\n      let leave = JSON.parse(JSON.stringify(this.leave));\n      leave = this.__sanitizeLeave(leave);\n      this.error = '';\n      this.invalid_attributes = [];\n\n      this.leaveService.apply(leave).then(data => {\n\n        this.successModal.show('/leave/list');\n\n      }).catch(err => {\n\n        this.error = err.error.message.text;\n        if (err.error.invalid_attributes) {\n          for (const key in err.error.invalid_attributes) {\n            if (err.error.invalid_attributes.hasOwnProperty(key)) {\n              this.invalid_attributes.push(error_map[key] ? error_map[key] : err.error.invalid_attributes[key]);\n            }\n          }\n        }\n        this.errorModal.show();\n      });\n    }\n  }\n\n  public leaveTypeDisabled(leave_type) {\n    return this.leave_type.indexOf(leave_type) === -1;\n  }\n\n  filterUsers(term: string, item: UserSearchItem) {\n\n    const regex = new RegExp(term, 'i');\n    return item.email_id.match(regex) || item.name.match(regex);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\nimport { LeaveRoutingModule } from './leave.routing';\nimport { ApplyLeaveComponent } from './apply-leave/apply-leave.component';\nimport { ApplicationComponentsModule } from 'modules/application-components.module';\nimport { ApplicationDirectivesModule } from 'modules/application-directives.module';\nimport { ApplicationPipesModule } from 'modules/application-pipes.module';\nimport { ListLeaveComponent } from './list-leave/list-leave.component';\nimport { ReviewLeaveComponent } from './review-leave/review-leave.component';\nimport { ModalModule } from 'ngx-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n@NgModule({\n  imports: [\n    LeaveRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    CommonModule,\n    ModalModule,\n    BsDatepickerModule,\n    NgSelectModule,\n    ApplicationComponentsModule,\n    ApplicationDirectivesModule,\n    ApplicationPipesModule\n  ],\n  declarations: [\n    ApplyLeaveComponent,\n    ListLeaveComponent,\n    ReviewLeaveComponent\n  ],\n  providers: [\n  ]\n})\nexport class LeaveModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthenticationGuard } from 'core/services/authentication.service';\nimport { AuthorizationGuard } from 'core/services/authorization.service';\nimport { ApplyLeaveComponent } from './apply-leave/apply-leave.component';\nimport { ListLeaveComponent } from './list-leave/list-leave.component';\nimport { ReviewLeaveComponent } from './review-leave/review-leave.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: {\n      title: 'Leave'\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'list'\n      },\n      {\n        path: 'list',\n        data: {\n          title: 'List',\n          access: {\n            module: 'leave',\n            entity: 'leave',\n            action: 'find'\n          }\n        },\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        component: ListLeaveComponent\n      },\n      {\n        path: 'review',\n        data: {\n          title: 'Review',\n          access: {\n            module: 'leave',\n            entity: 'leave',\n            action: 'review'\n          }\n        },\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        component: ReviewLeaveComponent\n      },\n      {\n        path: 'apply',\n        data: {\n          title: 'Apply',\n          access: {\n            module: 'leave',\n            entity: 'leave',\n            action: 'create'\n          }\n        },\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        component: ApplyLeaveComponent\n      },\n      {\n        path: 'policy',\n        loadChildren: './policy/leave-policy.module#LeavePolicyModule'\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LeaveRoutingModule { }\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col-6 text-left\\\">\\n              <button class=\\\"btn btn-primary mr-1\\\" type=\\\"button\\\" routerLink=\\\"/leave/policy\\\" (click)=\\\"exatask.trackEvent('leave', 'manage', 'leave-policy')\\\" *ngIf=\\\"leavePolicyAllowed\\\">Manage Leave Policies</button>\\n            </div>\\n            <div class=\\\"col-6 text-right\\\">\\n              <button class=\\\"btn btn-primary mr-1\\\" type=\\\"button\\\" routerLink=\\\"/leave/review\\\" (click)=\\\"exatask.trackEvent('leave', 'review')\\\" *ngIf=\\\"reviewAllowed\\\">+ Review Leave(s)</button>\\n              <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" routerLink=\\\"/leave/apply\\\" (click)=\\\"exatask.trackEvent('leave', 'apply')\\\" *ngIf=\\\"applyAllowed\\\">+ Apply Leave</button>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"text-center m-5\\\" *ngIf=\\\"loading\\\">\\n            <h3><i class=\\\"fa fa-refresh fa-spin\\\"></i> Loading Leaves</h3>\\n          </div>\\n\\n          <div class=\\\"text-center m-5\\\" *ngIf=\\\"!loading && leaves.length == 0\\\">\\n            <h3>No Leaves applied</h3>\\n            <br/>\\n            <h5 *ngIf=\\\"!leavePolicyExists\\\" class=\\\"font-italic\\\">\\n              Your organization doesn't have an active Leave policy.<br/>\\n              Can't apply or review leave requests.\\n            </h5>\\n          </div>\\n\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-striped\\\" *ngIf=\\\"!loading && leaves.length > 0\\\">\\n              <thead>\\n                <tr>\\n                  <th>#</th>\\n                  <th>Date(s)</th>\\n                  <th>Leave</th>\\n                  <th>Summary</th>\\n                  <th>Reviewed By</th>\\n                  <th>Status</th>\\n                  <th></th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let leave of leaves; let i = index\\\">\\n                  <td>{{i+1}}.</td>\\n                  <td>\\n                    <span *ngIf=\\\"leave.start_date === leave.end_date\\\">\\n                      {{leave.start_date | date: 'EEEE, dd MMMM, yyyy'}}\\n                    </span>\\n                    <span *ngIf=\\\"leave.start_date !== leave.end_date\\\">\\n                      From {{leave.start_date | date: 'EEEE, dd MMMM, yyyy'}}<br/>\\n                      To {{leave.end_date | date: 'EEEE, dd MMMM, yyyy'}}\\n                    </span>\\n                  </td>\\n                  <td>{{'leave.type.' + leave.leave_type | constants}}</td>\\n                  <td>{{leave.summary}}</td>\\n                  <td>\\n                    <span *ngIf=\\\"leave.reviewed_by\\\">{{leave.reviewed_by.name}}</span>\\n                    <span *ngIf=\\\"!leave.reviewed_by\\\" class=\\\"badge badge-secondary\\\">System</span>\\n                  </td>\\n                  <td>\\n                    <span class=\\\"badge\\\" [ngClass]=\\\"getStatusBadge(leave.leave_status)\\\">\\n                      {{'leave.status.' + leave.leave_status | constants}}\\n                    </span>\\n                  </td>\\n                  <td>\\n\\n                    <button *ngIf=\\\"leave.leave_status === 1\\\" type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"exatask.trackEvent('leave', 'cancel', leave._id.toString()); cancelLeave(i)\\\" [disabled]=\\\"cancelling[i]\\\">\\n                      <span class=\\\"fa fa-spinner fa-spin\\\" *ngIf=\\\"cancelling[i]\\\"></span>&nbsp;Cancel\\n                    </button>\\n\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Leave, LeaveService } from 'modules/leave/leave.service';\nimport { STATUS } from 'config/constants/leave';\nimport { Access } from 'core/providers/access.service';\nimport { ExaTask } from '../../../core/providers/exatask.service';\nimport { EmployeeLeavePolicyService } from '../../employee/employee-leave-policy/employee-leave-policy.service';\nimport { User } from '../../../core/providers/user.service';\n\n@Component({\n  selector: 'app-list-leave',\n  templateUrl: './list-leave.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [LeaveService, EmployeeLeavePolicyService]\n})\nexport class ListLeaveComponent implements OnInit {\n\n  leaves: Leave[] = [];\n\n  loading: boolean = false;\n  applyAllowed: boolean = false;\n  reviewAllowed: boolean = false;\n  leavePolicyAllowed: boolean = false;\n  leavePolicyExists: boolean = false;\n\n  cancelling: Array<Boolean>;\n\n  constructor(\n    private leaveService: LeaveService,\n    private employeeLeavePolicyService: EmployeeLeavePolicyService,\n    private user: User,\n    private access: Access,\n    public exatask: ExaTask\n  ) {\n\n    this.cancelling = new Array<Boolean>();\n    this.exatask.setTitle('Leave List');\n  }\n\n  async ngOnInit() {\n\n    this.applyAllowed = await this.access.hasAccess({\n      module: 'leave',\n      entity: 'leave',\n      action: 'create'\n    });\n\n    this.reviewAllowed = await this.access.hasAccess({\n      module: 'leave',\n      entity: 'leave',\n      action: 'review'\n    });\n\n    this.leavePolicyAllowed = await this.access.hasAccess({\n      module: 'leave',\n      entity: 'policy',\n      action: 'create'\n    });\n\n    this.employeeLeavePolicyService.getEmployeeLeavePolicy(this.user.user_id).then(policy => {\n\n      if (policy) {\n        this.leavePolicyExists = true;\n      } else {\n        this.applyAllowed = false;\n        this.reviewAllowed = false;\n      }\n    }).catch(err => {\n\n      this.applyAllowed = false;\n      this.reviewAllowed = false;\n    });\n\n    this.loadLeaves();\n  }\n\n  loadLeaves() {\n\n    const self = this;\n    this.loading = true;\n\n    this.leaveService.getLeaves().then(leaves => {\n\n      self.loading = false;\n      this.leaves = leaves;\n    });\n  }\n\n  cancelLeave(index) {\n\n    const leave_id = this.leaves[index]._id;\n    const self = this;\n\n    this.cancelling[index] = true;\n    this.leaveService.cancel(leave_id).then(response => {\n\n      self.leaves[index].leave_status = STATUS.DELETED;\n      self.cancelling[index] = false;\n    });\n  }\n\n  getStatusBadge(status) {\n\n    switch (status) {\n\n      case 2: return 'badge-success';\n      case 3: return 'badge-danger';\n      case 4: return 'badge-dark';\n      default: return 'badge-default';\n    }\n  }\n}\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col-12 text-right\\\">\\n              <button class=\\\"btn btn-link\\\" type=\\\"button\\\" routerLink=\\\"/leave/list\\\" (click)=\\\"exatask.trackEvent('leave', 'back')\\\">Back</button>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"text-center m-5\\\" *ngIf=\\\"loading\\\">\\n            <h3><i class=\\\"fa fa-refresh fa-spin\\\"></i> Loading leaves for review</h3>\\n          </div>\\n\\n          <div class=\\\"text-center m-5\\\" *ngIf=\\\"!loading && leaves.length == 0\\\">\\n            <h3>No Leaves to review</h3>\\n          </div>\\n\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-striped\\\" *ngIf=\\\"!loading && leaves.length > 0\\\">\\n              <thead>\\n                <tr>\\n                  <th>#</th>\\n                  <th>Employee</th>\\n                  <th>Leave Type</th>\\n                  <th>Duration</th>\\n                  <th>Summary</th>\\n                  <th></th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let leave of leaves; let i = index\\\">\\n                  <td>{{i+1}}.</td>\\n                  <td>{{leave.name}}</td>\\n                  <td>{{leave.leave_type | constants: 'leave.type'}}</td>\\n                  <td>\\n                    <span *ngIf=\\\"leave.start_date === leave.end_date\\\">\\n                      {{leave.start_date | date: 'dd-MM-yyyy'}}\\n                    </span>\\n                    <span *ngIf=\\\"leave.start_date !== leave.end_date\\\">\\n                      Start Date: {{leave.start_date | date: 'dd-MM-yyyy'}}<br/>\\n                      End Date: {{leave.end_date | date: 'dd-MM-yyyy'}}\\n                    </span>\\n                  </td>\\n                  <td>{{leave.summary}}</td>\\n                  <td>\\n\\n                    <div *ngIf=\\\"!reviewed[leave._id]\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm mr-1\\\" (click)=\\\"exatask.trackEvent('leave', 'confirmation', 'approve', leave._id.toString()); leaveConfirmation(1, leave._id);\\\" [disabled]=\\\"approving[leave._id] || rejecting[leave._id]\\\" *ngIf=\\\"approveAllowed\\\">\\n                        <span class=\\\"fa fa-spinner fa-spin\\\" *ngIf=\\\"approving[leave._id]\\\"></span>&nbsp;Approve\\n                      </button>\\n\\n                      <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"exatask.trackEvent('leave', 'confirmation', 'reject', leave._id.toString()); leaveConfirmation(2, leave._id);\\\" [disabled]=\\\"approving[leave._id] || rejecting[leave._id]\\\" *ngIf=\\\"rejectAllowed\\\">\\n                        <span class=\\\"fa fa-spinner fa-spin\\\" *ngIf=\\\"rejecting[leave._id]\\\"></span>&nbsp;Reject\\n                      </button>\\n                    </div>\\n\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div bsModal #confirmModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" [ngClass]=\\\"{'modal-success': operation === 1, 'modal-danger': operation === 2}\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">\\n          <span class=\\\"mb-0\\\" *ngIf=\\\"operation === 1\\\">Confirm leave approval</span>\\n          <span class=\\\"mb-0\\\" *ngIf=\\\"operation === 2\\\">Confirm leave rejection</span>\\n        </h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"exatask.trackEvent('leave', 'confirmation', 'close', leave_id); confirmModal.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <h5 *ngIf=\\\"operation === 1\\\">Are you sure you would like to approve leave of {{ leave.name }}?</h5>\\n        <div class=\\\"row\\\" *ngIf=\\\"operation === 2\\\">\\n          <h5>Kindly provide reason for rejecting leave of {{ leave.name }}</h5>\\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-md-3 col-form-label\\\" for=\\\"reason\\\">\\n              Reason <span class=\\\"required\\\">*</span>\\n            </label>\\n            <div class=\\\"col-md-9\\\">\\n              <textarea name=\\\"reason\\\" class=\\\"form-control\\\" id=\\\"reason\\\" [(ngModel)]=\\\"reject_reason\\\"></textarea>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button *ngIf=\\\"operation === 1\\\" type=\\\"button\\\" (click)=\\\"exatask.trackEvent('leave', 'approve', leave_id); approve(leave_id)\\\" class=\\\"btn btn-success\\\">Approve</button>\\n        <button *ngIf=\\\"operation === 2\\\" type=\\\"button\\\" (click)=\\\"exatask.trackEvent('leave', 'reject', leave_id); reject(leave_id)\\\" class=\\\"btn btn-danger\\\">Reject</button>\\n        <button type=\\\"button\\\" (click)=\\\"exatask.trackEvent('leave', 'confirmation', 'cancel', leave_id); confirmModal.hide()\\\" class=\\\"btn btn-link\\\">Cancel</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, ViewEncapsulation, OnInit, ViewChild } from '@angular/core';\nimport { Leave, LeaveService } from 'modules/leave/leave.service';\nimport { STATUS } from 'config/constants/leave';\nimport { Access } from 'core/providers/access.service';\nimport { ExaTask } from '../../../core/providers/exatask.service';\nimport { ModalDirective } from 'ngx-bootstrap';\nimport { find, matchesProperty } from 'lodash';\n\nenum Operation {\n  APPROVE = 1, REJECT\n}\n\n@Component({\n  selector: 'app-review-leave',\n  templateUrl: './review-leave.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [LeaveService]\n})\nexport class ReviewLeaveComponent implements OnInit {\n  @ViewChild('confirmModal') confirmModal: ModalDirective;\n\n  leaves: Leave[] = [];\n  leave_id: string;\n  leave: Leave;\n\n  reviewed: Array<Boolean>;\n  approving: Array<Boolean>;\n  rejecting: Array<Boolean>;\n  loading: boolean = false;\n\n  approveAllowed: boolean;\n  rejectAllowed: boolean;\n\n  operation: Operation = Operation.APPROVE;\n  reject_reason: string = '';\n\n  constructor(\n    private leaveService: LeaveService,\n    private access: Access,\n    public exatask: ExaTask\n  ) {\n\n    this.reviewed = [];\n    this.approving = [];\n    this.rejecting = [];\n    this.exatask.setTitle('Leave Review List');\n  }\n\n  async ngOnInit() {\n\n    this.loadLeaves();\n\n    this.approveAllowed = await this.access.hasAccess({\n      module: 'leave',\n      entity: 'review',\n      action: 'approve'\n    });\n\n    this.rejectAllowed = await this.access.hasAccess({\n      module: 'leave',\n      entity: 'review',\n      action: 'reject'\n    });\n  }\n\n  private loadLeaves() {\n\n    const self = this;\n    const query = new Map<string, any>();\n    query.set('leave_status', STATUS.APPLIED);\n\n    this.loading = true;\n\n    this.leaveService.getReviewLeaves(query).then(leaves => {\n\n      self.loading = false;\n      self.leaves = leaves;\n    });\n  }\n\n  approve(leave_id) {\n\n    this.approving[leave_id] = true;\n    this.leaveService.approve(leave_id).then(response => {\n\n      this.reviewed[leave_id] = true;\n      this.approving[leave_id] = false;\n    });\n  }\n\n  reject(leave_id) {\n\n    this.rejecting[leave_id] = true;\n    this.leaveService.reject(leave_id, this.reject_reason).then(response => {\n\n      this.reviewed[leave_id] = true;\n      this.rejecting[leave_id] = false;\n      this.reject_reason = '';\n    });\n  }\n\n  leaveConfirmation(operation, leave_id) {\n\n    this.operation = operation;\n    this.leave_id = leave_id;\n    this.leave = find(this.leaves, matchesProperty('_id', leave_id));\n    this.reject_reason = '';\n    this.confirmModal.show();\n  }\n}\n"],"sourceRoot":""}