{"version":3,"sources":["webpack:///./src/app/modules/metadata/holiday.service.ts","webpack:///./src/app/modules/organization/holiday/holiday.module.ts","webpack:///./src/app/modules/organization/holiday/holiday.routing.ts","webpack:///./src/app/modules/organization/holiday/holiday.service.ts","webpack:///./src/app/modules/organization/holiday/list-holiday/list-holiday.component.html","webpack:///./src/app/modules/organization/holiday/list-holiday/list-holiday.component.ts","webpack:///./src/app/modules/organization/holiday/manage-holiday/manage-holiday.component.html","webpack:///./src/app/modules/organization/holiday/manage-holiday/manage-holiday.component.ts"],"names":[],"mappings":"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","file":"14.d3738d45456deb8e18a9.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Api } from 'core/services/api.service';\n\nexport class Holiday {\n\n  date: string | Date;\n  title: string;\n  description?: string;\n  mandatory: boolean;\n  selected: boolean;\n  custom?: boolean;\n};\n\n@Injectable()\nexport class HolidayService extends Api {\n\n  private _base_url: string = '/holidays';\n\n  getHolidays(year: number): Promise<Holiday[]> {\n\n    return this.get(this._base_url + '/' + year)\n      .then(response => response['data'] as Holiday[]);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { HolidayRoutingModule } from './holiday.routing';\nimport { ManageHolidayComponent } from './manage-holiday/manage-holiday.component';\nimport { ListHolidayComponent } from './list-holiday/list-holiday.component';\nimport { ApplicationComponentsModule } from 'modules/application-components.module';\nimport { BsDatepickerModule } from 'ngx-bootstrap';\n\n@NgModule({\n  imports: [\n    HolidayRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    CommonModule,\n    BsDatepickerModule,\n    ApplicationComponentsModule\n  ],\n  declarations: [\n    ListHolidayComponent,\n    ManageHolidayComponent\n  ],\n  providers: [\n  ]\n})\nexport class HolidayModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListHolidayComponent } from './list-holiday/list-holiday.component';\nimport { ManageHolidayComponent } from './manage-holiday/manage-holiday.component';\nimport { AuthenticationGuard } from 'core/services/authentication.service';\nimport { AuthorizationGuard } from 'core/services/authorization.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: {\n      title: 'Holiday'\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'list'\n      },\n      {\n        path: 'list',\n        data: {\n          title: 'List',\n          access: {\n            module: 'organization',\n            entity: 'holiday',\n            action: 'find'\n          }\n        },\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        component: ListHolidayComponent\n      },\n      {\n        path: 'manage',\n        data: {\n          title: 'Manage',\n          access: {\n            module: 'organization',\n            entity: 'holiday',\n            action: 'update'\n          }\n        },\n        canActivate: [AuthenticationGuard, AuthorizationGuard],\n        component: ManageHolidayComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HolidayRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Api } from 'core/services/api.service';\n\nexport class Holiday {\n  date: string;\n  title: string;\n  custom?: boolean;\n};\n\n@Injectable()\nexport class HolidayService extends Api {\n\n  private _base_url: string = '/organizations/holidays';\n\n  getHolidays(year: number): Promise<Holiday[]> {\n\n    return this.get(this._base_url + '/' + year.toString())\n      .then(response => response['data'] as Holiday[]);\n  }\n\n  putHolidays(year: number, holidays: string[], custom_holidays?: Holiday[]) {\n\n    return this.put(this._base_url + '/' + year.toString(), {\n      'holidays': holidays,\n      'custom_holidays': custom_holidays,\n    }).then(response => response['data']);\n  }\n}\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row mb-4\\\" *ngIf=\\\"manageAllowed\\\">\\n            <div class=\\\"col-12\\\">\\n              <button class=\\\"btn btn-primary pull-right\\\" role='button' type=\\\"button\\\" routerLink=\\\"/organization/holiday/manage\\\">Manage Holidays</button>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"input-group col-3 mb-3\\\">\\n              <span class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">Year</span>\\n              </span>\\n              <select type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedYear\\\" (ngModelChange)=\\\"loadHolidays(selectedYear)\\\">\\n                <option *ngFor=\\\"let year of years\\\">{{year}}</option>\\n              </select>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"text-center m-5\\\" *ngIf=\\\"holidays.length == 0\\\">\\n            <h3>No Holidays configured for organization</h3>\\n          </div>\\n\\n          <table class=\\\"table table-striped\\\" *ngIf=\\\"holidays.length > 0\\\">\\n            <thead>\\n              <tr>\\n                <th width=\\\"10%\\\">#</th>\\n                <th width=\\\"20%\\\">Date</th>\\n                <th width=\\\"20%\\\">Day</th>\\n                <th>Holiday</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let holiday of holidays; let i = index\\\">\\n                <td>{{i+1}}.</td>\\n                <td>{{holiday.date | date: 'dd-MM-yyyy'}}</td>\\n                <td>{{holiday.date | date: 'EEEE'}}</td>\\n                <td>{{holiday.title}}</td>\\n              </tr>\\n            </tbody>\\n          </table>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Holiday, HolidayService } from 'modules/organization/holiday/holiday.service';\nimport { Access } from 'core/providers/access.service';\n\n@Component({\n  selector: 'app-list-holiday',\n  templateUrl: './list-holiday.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [ HolidayService ]\n})\nexport class ListHolidayComponent implements OnInit {\n\n  holidays: Holiday[] = Array();\n\n  years: Set<number> = new Set<number>();\n  selectedYear: number;\n  manageAllowed: boolean = false;\n\n  constructor(private holidayService: HolidayService, private access: Access) {\n\n    const currentYear = new Date().getFullYear();\n    const tillYears = currentYear;\n\n    // enumerate till the next year\n    for (let year = 2018; year <= tillYears; year++) {\n      this.years.add(year);\n    }\n\n    this.selectedYear = currentYear;\n  }\n\n  async ngOnInit() {\n\n    this.manageAllowed = await this.access.hasAccess({\n      module: 'organization',\n      entity: 'holiday',\n      action: 'update'\n    });\n\n    this.loadHolidays(this.selectedYear);\n  }\n\n  loadHolidays(year) {\n\n    this.holidayService.getHolidays(this.selectedYear).then(holidays => this.holidays = holidays);\n  }\n}\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"input-group col-3 mb-3\\\">\\n              <span class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">Year</span>\\n              </span>\\n              <select type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedYear\\\" (ngModelChange)=\\\"updateHolidaysOnYearChange($event)\\\">\\n                <option *ngFor=\\\"let year of years\\\">{{year}}</option>\\n              </select>\\n            </div>\\n          </div>\\n\\n          <form class=\\\"form-horizontal\\\" #form=\\\"ngForm\\\" novalidate>\\n\\n            <table class=\\\"table table-striped\\\">\\n              <thead>\\n                <tr>\\n                  <th width=\\\"5%\\\">#</th>\\n                  <th width=\\\"5%\\\"></th>\\n                  <th width=\\\"50%\\\">Name</th>\\n                  <th width=\\\"20%\\\">Date</th>\\n                  <th width=\\\"20%\\\">Day</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n\\n                <tr *ngFor=\\\"let holiday of holidays; let i = index\\\">\\n                  <td>{{i + 1}}.</td>\\n                  <td>\\n                    <input type=\\\"checkbox\\\" id=\\\"holiday-{{i}}\\\" [disabled]=\\\"holiday.mandatory || isWeekend(holiday.date)\\\" [checked]=\\\"holiday.selected || holiday.mandatory\\\" (change)=\\\"holiday.selected = !holiday.selected\\\">\\n                  </td>\\n                  <td>\\n                    <label class=\\\"m-0\\\" for=\\\"holiday-{{i}}\\\">{{holiday.title}}</label>\\n                  </td>\\n                  <td>\\n                    {{holiday.date | date: 'dd-MM-yyyy'}}\\n                  </td>\\n                  <td>\\n                    {{holiday.date | date: 'EEEE'}}\\n                  </td>\\n                </tr>\\n\\n                <tr *ngFor=\\\"let holiday of custom_holidays; let i = index\\\">\\n                  <td>{{i + holidays.length + 1}}.</td>\\n                  <td>\\n                    <input type=\\\"checkbox\\\" id=\\\"holiday-{{i}}\\\" [disabled]=\\\"isWeekend(holiday.date)\\\" [checked]=\\\"holiday.selected\\\" (change)=\\\"holiday.selected = !holiday.selected\\\">\\n                  </td>\\n                  <td>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"holiday-title-{{i}}\\\" placeholder=\\\"Name\\\" name=\\\"holiday-title-{{i}}\\\" [(ngModel)]=\\\"holiday.title\\\" />\\n                  </td>\\n                  <td>\\n                    <input type=\\\"text\\\" name=\\\"holiday-date-{{i}}\\\" class=\\\"form-control\\\" id=\\\"holiday-date-{{i}}\\\" [(ngModel)]=\\\"holiday.date\\\" bsDatepicker [bsConfig]=\\\"hdConfig\\\">\\n                  </td>\\n                  <td>\\n                    {{holiday.date | date: 'EEEE'}}\\n                  </td>\\n                </tr>\\n\\n              </tbody>\\n            </table>\\n\\n            <div class=\\\"row mb-5\\\">\\n              <div class=\\\"col-12 text-right\\\">\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"addHoliday()\\\">Add Holiday</button>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12\\\">\\n                <button class=\\\"btn btn-primary btn-lg btn-block\\\" (click)=\\\"submit()\\\">Submit</button>\\n              </div>\\n            </div>\\n\\n          </form>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-success-modal #successModal title=\\\"Submit\\\">\\n  <div content>\\n    Updated Holidays Successfully!\\n  </div>\\n</app-success-modal>\\n<app-error-modal #errorModal title=\\\"Submit Error\\\">\\n  <div content>\\n    There was an error updating holidays.\\n    <br>\\n    Details: {{error}}\\n  </div>\\n</app-error-modal>\"","import { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\n\nimport { SuccessModalComponent } from 'shared/components/success-modal/success-modal.component';\nimport { ErrorModalComponent } from 'shared/components/error-modal/error-modal.component';\n\nimport { Holiday as MetaHoliday, HolidayService as MetaHolidayService } from 'modules/metadata/holiday.service';\nimport { Holiday, HolidayService } from 'modules/organization/holiday/holiday.service';\nimport { BsDatepickerDirective } from 'ngx-bootstrap';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-manage-holiday',\n  templateUrl: './manage-holiday.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [ HolidayService, MetaHolidayService, DatePipe ]\n})\nexport class ManageHolidayComponent implements OnInit {\n  @ViewChild('successModal') successModal: SuccessModalComponent;\n  @ViewChild('errorModal') errorModal: ErrorModalComponent;\n\n  holidays: MetaHoliday[] = Array();\n  custom_holidays: MetaHoliday[] = Array();\n  years: Set<number> = new Set<number>();\n\n  orgHolidays: Holiday[] = Array();\n  selectedYear: number;\n  hdConfig: Object;\n\n  error: string = '';\n\n  constructor(\n    private holidayService: HolidayService,\n    private metaHolidayService: MetaHolidayService,\n    private datePipe: DatePipe\n  ) {\n\n    const currentYear = new Date().getFullYear();\n    const tillYears = currentYear + (new Date().getMonth() > 10 ? 1 : 0);\n\n    // enumerate till the next year\n    for (let year = 2018; year <= tillYears; year++) {\n      this.years.add(year);\n    }\n\n    this.selectedYear = currentYear;\n    this.hdConfig = {\n      dateInputFormat: 'DD-MM-YYYY',\n      containerClass: 'theme-blue',\n      showWeekNumbers: false,\n      minDate: new Date(currentYear, 1, 1),\n      maxDate: new Date(currentYear, 11, 31)\n    };\n\n    this.updateHolidaysOnYearChange();\n  }\n\n  ngOnInit() { }\n\n  isWeekend(date: string | Date) {\n\n    const parsed_date = new Date(date);\n    const day = parsed_date.getDay();\n    return day === 0 || day === 6;\n  }\n\n  updateHolidaysOnYearChange () {\n\n    this.holidays = Array();\n    this.orgHolidays = Array();\n\n    this.hdConfig['minDate'] = new Date(this.selectedYear, 1, 1);\n    this.hdConfig['maxDate'] = new Date(this.selectedYear, 11, 31);\n\n    const holidayPromise = this.metaHolidayService.getHolidays(this.selectedYear)\n      .then(holidays => this.holidays = holidays)\n      .catch(err => {\n\n        // if no holidays found -- we just handled that -- don't pop up the modal\n        if (err.status === 404) {\n          return;\n        }\n\n        this.error = err;\n        this.errorModal.show();\n      });\n\n    const orgHolidayPromise = this.holidayService.getHolidays(this.selectedYear).then(holidays => {\n\n        if (holidays === undefined) {\n          return;\n        }\n\n        holidays.forEach(holiday => {\n\n          this.orgHolidays.push({\n            date: holiday.date,\n            title: holiday.title,\n            custom: !!holiday.custom\n          } as Holiday);\n\n          if (holiday.custom) {\n\n            this.custom_holidays.push({\n              title: holiday.title,\n              date: new Date(holiday.date),\n              custom: holiday.custom\n            } as MetaHoliday);\n          }\n\n        });\n\n      }).catch(err => {\n\n        // if no holidays found -- we just handled that -- don't pop up the modal\n        if (err.status === 404) {\n          return;\n        }\n\n        this.error = err;\n        this.errorModal.show();\n      });\n\n    Promise.all([holidayPromise, orgHolidayPromise])\n      .then (() => {\n\n        if (this.orgHolidays.length === 0) {\n          return;\n        }\n\n        this.orgHolidays.forEach(orgHoliday => {\n\n          let selectedHoliday = this.holidays.find(holiday => holiday.date === orgHoliday.date);\n          if (selectedHoliday === undefined) {\n\n            selectedHoliday = this.custom_holidays.find(holiday => {\n              return this.datePipe.transform(holiday.date, 'yyyy-MM-dd') === orgHoliday.date;\n            });\n            if (selectedHoliday === undefined) {\n              return;\n            }\n          }\n\n          selectedHoliday.selected = true;\n        });\n      });\n  }\n\n  submit() {\n\n    this.error = '';\n\n    const holidays = this.holidays.filter(holiday => holiday.selected === true).map(holiday => {\n      return holiday.date.toString();\n    });\n\n    const custom_holidays = this.custom_holidays.filter(holiday => {\n      return holiday.selected === true && holiday.custom === true && !!holiday.date && !!holiday.title;\n    }).map(holiday => {\n      return {\n        title: holiday.title,\n        date: this.datePipe.transform(holiday.date, 'yyyy-MM-dd')\n      }\n    });\n\n    this.holidayService.putHolidays(this.selectedYear, holidays, custom_holidays)\n      .then(response => {\n\n        this.successModal.show('/organization/holiday');\n\n      }).catch(err => {\n\n        this.error = err;\n        this.errorModal.show();\n      });\n  }\n\n  addHoliday() {\n\n    this.custom_holidays.push({\n      title: '',\n      date: '',\n      mandatory: false,\n      selected: true,\n      custom: true,\n    });\n  }\n}\n"],"sourceRoot":""}